<?php
class HomepageCmsModel extends MY_Model
{
    private $dbHandle = null;
    
    function __construct(){
		parent::__construct('Listing');
    }

    private function initiateModel($mode = "write") {
		if($this->dbHandle && $this->dbHandleMode == 'write')
		    return;

		$this->dbHandleMode = $mode;
		$this->dbHandle = NULL;
		if($mode == 'read') {
			$this->dbHandle = $this->getReadHandle();
		} else {
			$this->dbHandle = $this->getWriteHandle();
		}
    }
	
	public function getTableData($type = 'banner') {
		$this->initiateModel('read');
		if(!in_array($type, array('banner', 'featured'))){
			$type = 'banner';
		}
		
		$sortBy = $_REQUEST['sort_by'];
		if(!in_array($sortBy, array('start_date', 'end_date'))){
			$sortBy = "start_date";
		}
		$sortOrder = $_REQUEST['sort_order'];
		if(!in_array($sortOrder, array('asc', 'desc'))){
			$sortOrder = "asc";
		}
		$oderByClause = " ORDER BY hbp." . $sortBy. " " . $sortOrder;
		
		$sql 	= "SELECT hbp.*, SUM(hbc.click_count) as clicks  FROM homepageBannerProduct hbp LEFT JOIN homepageBannerClickRate hbc ON hbp.banner_id = hbc.banner_id WHERE hbp.end_date >= CURDATE() AND hbp.banner_type = '$type' AND hbp.status = 'live' GROUP BY hbp.banner_id $oderByClause";
		
		$query 	= $this->dbHandle->query($sql);
		$data 	= array();
		if($query->num_rows() > 0) {
			foreach($query->result() as $row) {
				$data[$row->banner_id] = (array)$row;
				$data[$row->banner_id]['image_url'] = addingDomainNameToUrl(array('url' => $row->image_url , 'domainName' =>MEDIA_SERVER));
			}
		}
		return $data;
	}

	private function _getNewAutogeneratedId($type = 'homepagecms') {
		return Modules::run('common/IDGenerator/generateId',$type);
    }
	
	public function postBannerForm($data) {
		$this->initiateModel('write');
		$this->dbHandle->trans_start();

		switch ($data['action']) {
			case 'add':
				$data['bannerId'] = $this->_getNewAutogeneratedId('homepagecms');
				break;

			case 'edit':
				$this->dbHandle->query("UPDATE homepageBannerProduct SET status = 'history', last_modified = NOW() WHERE banner_id = ?", $data['bannerId']);
				break;
			
			case 'remove':
				$var = $this->dbHandle->query("UPDATE homepageBannerProduct SET status = 'deleted', last_modified = NOW() WHERE banner_id = ? and status = 'live'", $data['bannerId']);
				$this->dbHandle->trans_complete();
				return false;
		}
		
		$insertData = array(
				'banner_id'				=> $data['bannerId'],
				'client_id' 			=> $data['clientId'],
				'banner_type' 			=> $data['pageType'],
				'title' 				=> $data['title'],
				'location_text' 		=> $data['location'],
				'display_text'			=> $data['displayText'],
				'usp'					=> $data['usp'],
				'image_url' 			=> $data['bannerImageUrl'],
				'target_url' 			=> $data['url'],
				'is_default' 			=> $data['isDefault'],
				'start_date' 			=> $data['fromDate'],
				'end_date' 				=> $data['toDate'],
				'status' 				=> 'live',
				'last_modified' 		=> date("Y-m-d H:i:s"),
				'last_modified_by' 		=> $data['userId']
			);
		
		$queryCmd = $this->dbHandle->insert('homepageBannerProduct', $insertData);
		
		$this->dbHandle->trans_complete();
	}

	public function getAllRange($pageType, $action, $bannerId) {
		$this->initiateModel('read');

		$where = '';
		if($action == 'edit') {
			$where = " AND banner_id != ".$this->dbHandle->escape($bannerId);
		}
		
		$query = "SELECT start_date, end_date FROM homepageBannerProduct WHERE status = 'live' AND end_date >= CURDATE() AND banner_type = ? AND is_default = 0 ".$where;
		$data = $this->dbHandle->query($query, $pageType)->result_array();
		return $data;
	}

	function getHomePageCoverBannerData($bannerType = 'banner') {
		$this->initiateModel('read');
		$params = array($bannerType, 'live');
		
		switch($bannerType) {
			case 'banner'	: $fields = array('banner_id', 'title', 'location_text', 'display_text', 'image_url', 'target_url', 'is_default');
							  $whereClause = '';
							break;
			case 'featured'	: $fields = array('banner_id', 'display_text', 'usp', 'target_url', 'is_default');
							  $whereClause = " AND display_text IS NOT NULL AND display_text != ''";
							break;
		}

		$fieldsString = implode(',', $fields);
		$query = "SELECT $fieldsString ".
				 "FROM homepageBannerProduct ".
				 "WHERE banner_type = ? ".
				 "AND STATUS = ? ".
				 "AND start_date <= DATE(NOW()) ".
				 "AND end_date >= DATE(NOW()) ". $whereClause;
		$result = $this->dbHandle->query($query, $params)->result_array();
		$returnArray = array();
		foreach ($result as $key => $value) {
			$returnArray[$key] = $value;
			$returnArray[$key]['image_url'] = addingDomainNameToUrl(array('url' => $value['image_url'] , 'domainName' =>MEDIA_SERVER));
		}
		return $returnArray;
	}

	function checkAndUpdateBannerCtr($bannerId) {
		$this->initiateModel('write');
		$query = "SELECT count(banner_id) as count ".
				 "FROM homepageBannerClickRate ".
				 "WHERE banner_id = ? ".
				 "AND date = DATE(NOW());";
		$bannerData = $this->dbHandle->query($query, $bannerId)->result_array();
		if($bannerData[0]['count'] > 0) {
			$updateQuery = "UPDATE homepageBannerClickRate ".
						   "SET click_count = click_count + 1 ".
						   "WHERE banner_id = ? ".
						   "AND date = DATE(NOW());";
		}
		else {
			$updateQuery = "INSERT INTO ".
						   "homepageBannerClickRate ".
						   "(banner_id, click_count, date) ".
						   "VALUES (?, 1, DATE(NOW()));";
		}
		$this->dbHandle->query($updateQuery, $bannerId);

		$selectQuery  = "SELECT target_url FROM homepageBannerProduct where status = 'live' AND banner_id = ?";
		$result = $this->dbHandle->query($selectQuery,array($bannerId))->result_array();
		if(empty($result)) {
			$selectQuery  = "SELECT target_url FROM homePageFeaturedCollegeBanner where status = 'live' AND banner_id = ?";
			$result = $this->dbHandle->query($selectQuery,array($bannerId))->result_array();
		}
		return $result[0]['target_url'];
	}

	function getFeaturedCollegeBannerData($action, $id){
		$this->initiateModel('read');
		if($action == 'edit') {
			$where = " AND hfcb.banner_id = ".$this->dbHandle->escape($id);
		}

		$sql = "SELECT hfcb.*, SUM(hbc.click_count) as clicks  FROM homePageFeaturedCollegeBanner hfcb LEFT JOIN homepageBannerClickRate hbc ON hfcb.banner_id = hbc.banner_id WHERE hfcb.end_date >= CURDATE()  AND hfcb.status = 'live'".$where."  GROUP BY hfcb.banner_id ORDER BY hfcb.start_date asc";

		$query 	= $this->dbHandle->query($sql);
		$data 	= array();
		$data = $query->result_array();
		return $data;
	}

	function getFeaturedArticleBannerData($type){
		$this->initiateModel('read');
		
	//	$sql 	= "SELECT hbp.*, SUM(hbc.click_count) as clicks  FROM homepageBannerProduct hbp LEFT JOIN homepageBannerClickRate hbc ON hbp.banner_id = hbc.banner_id WHERE hbp.end_date >= CURDATE() AND hbp.banner_type = '$type' AND hbp.status = 'live' GROUP BY hbp.banner_id $oderByClause";
		
		$sql = "SELECT hfac.*, (select blogTitle from blogTable bt where bt.blogId = hfac.article_id) articleTitle FROM homePageFeaturedArticleCMS hfac WHERE hfac.end_date >= CURDATE() AND hfac.status = 'live' GROUP BY hfac.article_id, hfac.start_date, hfac.end_date, hfac.position ORDER BY hfac.start_date asc";
		
		$query 	= $this->dbHandle->query($sql);
		$data 	= array();
		if($query->num_rows() > 0) {
			foreach($query->result() as $row) {
				$data[$row->id] = (array)$row;
			}
		}
		return $data;
	}

	public function postBannerFormForFeaturedCollege($data) {

		$this->initiateModel('write');
		$this->dbHandle->trans_start();

		switch ($data['action']) {

			case 'add':
				$data['bannerId'] = $this->_getNewAutogeneratedId('homepagecms');
				$creationDate = date("Y-m-d H:i:s");
				break;

			case 'edit':
				$this->dbHandle->query("UPDATE homePageFeaturedCollegeBanner SET status = 'history', modificationDate = NOW() WHERE banner_id = ?", $data['bannerId']);
				$creationDate = $data['creationDate'];
				break;
			
			case 'remove':
				$var = $this->dbHandle->query("UPDATE homePageFeaturedCollegeBanner SET status = 'deleted', modificationDate = NOW() WHERE banner_id = ? and status = 'live'", $data['bannerId']);
				$this->dbHandle->trans_complete();
				return false;
		}
		
		$insertData = array(
				'banner_id'				=> $data['bannerId'],
				'client_id' 			=> $data['clientId'],
				'collegeName' 			=> $data['title'],
				'image_url' 			=> $data['bannerImageUrl'],
				'target_url' 			=> $data['url'],
				'isDefault' 			=> $data['isDefault'],
				'start_date' 			=> $data['fromDate'],
				'end_date' 				=> $data['toDate'],
				'status' 				=> 'live',
				'modificationDate' 		=> date("Y-m-d H:i:s"),
				'status'				=> 'live',
				'creationDate'			=> $creationDate,
				'showOn'				=> $data['type']
			);
		if(isset($data['fromDate']) && $data['fromDate'] != '' && isset($data['toDate']) && $data['toDate'] != ''){ 
		$queryCmd = $this->dbHandle->insert('homePageFeaturedCollegeBanner', $insertData);
		}
		$this->dbHandle->trans_complete();
		if ($this->db->trans_status() === FALSE)
        {
            return 0;
        }
        return 1;
	
	}

	public function postBannerFormForFeaturedArticle($data) {

		$this->initiateModel('write');
		$this->dbHandle->trans_start();

		switch ($data['action']) {

			case 'add':
				$creationDate = date("Y-m-d H:i:s");
				break;

			case 'edit':
				$this->dbHandle->query("UPDATE homePageFeaturedArticleCMS SET status = 'history', modificationDate = NOW() WHERE id = ?", $data['id']);
				$creationDate = $data['creationDate'];
				break;
			
			case 'remove':
				$var = $this->dbHandle->query("UPDATE homePageFeaturedArticleCMS SET status = 'deleted', modificationDate = NOW() WHERE id = ? and status = 'live'", $data['id']);
				$this->dbHandle->trans_complete();
				return false;
		}
		
		$insertData = array(
				'position' 				=> $data['position'],
				'article_id' 			=> $data['articleId'],
				'start_date' 			=> $data['fromDate'],
				'end_date' 				=> $data['toDate'],
				'status' 				=> 'live',
				'modificationDate' 		=> date("Y-m-d H:i:s"),
				'creationDate'			=> $creationDate
			);
		if(isset($data['fromDate']) && $data['fromDate'] != '' && isset($data['toDate']) && $data['toDate'] != ''){ 
		$queryCmd = $this->dbHandle->insert('homePageFeaturedArticleCMS', $insertData);
		}
		$this->dbHandle->trans_complete();
		if ($this->db->trans_status() === FALSE)
        {
            return 0;
        }
        return 1;
	
	}

	public function getAllRangeForFeaturedBannerHome($pageType, $action, $bannerId, $showOn) {
		$this->initiateModel('read');

		$where = '';
		if($showOn == '1'){
			$typeCheck = " AND showOn = 'desktop'";
		}else {
			$typeCheck = " AND showOn = 'mobile'";
		}
		if($action == 'edit') {
			$where = " AND banner_id != ".$this->dbHandle->escape($bannerId);
		}
		
		$query = "SELECT start_date, end_date FROM homePageFeaturedCollegeBanner WHERE status = 'live' AND isDefault = 0".$typeCheck.$where;
		$data = $this->dbHandle->query($query, $pageType)->result_array();
		return $data;
	}

	public function getAllRangeForFeaturedArticleHome($pageType, $action, $articleId, $position, $id) {
	
		$this->initiateModel('read');

		$where = '';
		if($action == 'edit') {
			$where = " AND id != ".$this->dbHandle->escape($id);
		}
		
		$query = "SELECT start_date, end_date, position FROM homePageFeaturedArticleCMS WHERE status = 'live'  and position = ? ".$where;
		$data = $this->dbHandle->query($query, $position)->result_array();
		return $data;
	}
	public function getArticleStatus($articleId){

		$this->initiateModel('read');
		
		$query = "SELECT blogId, homepageImgURL FROM blogTable WHERE status = 'live' AND blogId = ?";
		$data = $this->dbHandle->query($query, $articleId)->result_array();
		return $data;	
	}

	public function postMarketingFoldData($data) {
		$this->initiateModel('write');
		$this->dbHandle->trans_start();
			switch ($data['action']) {

			case 'add':
				$data['marketingBannerId'] = $this->_getNewAutogeneratedId('homepagecms');
				$creationDate = date("Y-m-d H:i:s");
				break;

			case 'edit':
				$this->dbHandle->query("UPDATE homePageMarketingFoldCMS SET status = 'deleted', modificationDate = NOW() WHERE id = ?", $data['id']);
				$creationDate = $data['creationDate'];
				break;
			
			case 'remove':
				$this->dbHandle->query("UPDATE homePageMarketingFoldCMS SET status = 'deleted', modificationDate = NOW() WHERE id = ? ", $data['id']);
				return false;
		
			case 'makeLive':
				if($data['status'] == 'draft'){
					$status = 'live';
				}
				else{
					$status = 'draft';
				}
				$this->dbHandle->query("UPDATE homePageMarketingFoldCMS SET status = '$status', modificationDate = NOW() WHERE id = ? and status in ('live','draft')", $data['id']);
				return false;
		}
		
		if($data['type'] == '1'){
			$data['type'] = 'imageWithText';
		} 
		else if($data['type'] == '2'){
			$data['type'] = 'imageOnly';
		}
		else {
			$data['type'] = 'videoOnly';
		}
		$insertData = array(
				'type'					=> $data['type'],
				'header' 				=> $data['header'],
				'subHeader' 			=> $data['subheader'],
				'description' 			=> $data['description'],
				'targetURL' 			=> $data['targetUrl'],
				'status' 				=> $data['status'],
				'imgURL'				=> $data['bannerImageUrl'],
				'modificationDate' 		=> date("Y-m-d H:i:s"),
				'creationDate'			=> $creationDate,
				'marketingBannerId' 	=> $data['marketingBannerId']

			);
		
		$queryCmd = $this->dbHandle->insert('homePageMarketingFoldCMS', $insertData);
		$this->dbHandle->trans_complete();
		if ($this->db->trans_status() === FALSE)
        {
            return 0;
        }
        return 1;
	
	}

	 public function postFormForTestimonials($data) {
	 	$this->initiateModel('write');
	 	$dbHandleLocal = $this->dbHandle;

		switch ($data['action']) {

			case 'add':
				$data['testimonialId'] = $this->_getNewAutogeneratedId('homepagecms');
				$creationDate = date("Y-m-d H:i:s");
				break;

			case 'edit':
				$dbHandleLocal->query("UPDATE homePageTestimonials SET status = 'deleted', modificationDate = NOW() WHERE testimonialId = ? and status in ('live','draft')", $data['testimonialId']);
				$creationDate = $data['creationDate'];
				break;
			
			case 'remove':
				$var = $dbHandleLocal->query("UPDATE homePageTestimonials SET status = 'deleted', modificationDate = NOW() WHERE testimonialId = ? and status in ('live','draft')", $data['testimonialId']);
				return false;

			case 'makeLive':
				if($data['status'] == 'draft'){
					$status = 'live';
				}
				else{
					$status = 'draft';
				}
				$sql = "UPDATE homePageTestimonials SET status = '$status', modificationDate = NOW() WHERE testimonialId = ? and status in ('live','draft')";
				$var = $dbHandleLocal->query($sql, $data['testimonialId']);
				return 1;
		}
		
		$insertData = array(
				'name' 					=> $data['name'],
				'designation' 			=> $data['designation'],
				'testimonial' 			=> $data['testimonial'],
				'image_url' 			=> $data['bannerImageUrl'],
				'status' 				=> $data['status'],
				'creationDate' 			=> $creationDate,
				'modificationDate' 		=> date("Y-m-d H:i:s"),
				'testimonialId' 		=> $data['testimonialId']
			);
		$queryCmd = $dbHandleLocal->insert('homePageTestimonials', $insertData);
		if($dbHandleLocal->insert_id() > 0){
        	return 1;	
		}
		else{
			return 0;
		}
	
	}

	function getTestimonialData($action){
		switch ($action) {
			case 'makeLive':
				$status = "'live'";
				break;

			case 'getTestimonials':
				$status = "'live'";
				break;
			
			default:
				$status = "'live','draft'";
				break;
		}
		$this->initiateModel('read');
		$dbHandleLocal = $this->dbHandle;
		$sql 	= "select testimonialId,name,designation,testimonial,image_url,status,modificationDate,creationDate from homePageTestimonials where status in ($status) order by modificationDate desc";
		$query 	= $dbHandleLocal->query($sql);
		$data 	= array();
		$totalRows = $query->num_rows();
		if($action == 'makeLive'){
			return $totalRows;
		}
		if($totalRows > 0) {
			foreach($query->result_array() as $row) {
				$data[$row['testimonialId']] = $row;
				$data[$row['testimonialId']]['totalTestimonials'] = $totalRows;
			}
		}
		return $data;
	}

	function getMarketingFoldData($action, $id){
		$this->initiateModel('read');
		switch ($action) {
			case 'makeLive':
				$status = "'live'";
				break;
		
			case 'edit':
			    $where = "AND id = ".$this->dbHandle->escape($id);
				$status = "'live','draft'";
			default:
				$status = "'live','draft'";
				break;
		}
		$sql 	= "select * from homePageMarketingFoldCMS where status in ($status)".$where." order by modificationDate desc";
		
		$query 	= $this->dbHandle->query($sql);
		$data 	= array();
		$data = $query->result_array();
		return $data;
	}
}
