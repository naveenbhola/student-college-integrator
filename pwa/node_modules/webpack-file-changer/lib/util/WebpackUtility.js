"use strict";
var path = require("path");
var fsExtra = require("fs-extra");
var Strings_1 = require("./Strings");
var Files_1 = require("./Files");
var WebpackUtility = (function () {
    function WebpackUtility() {
    }
    WebpackUtility.moveFile = function (stats, move) {
        move.to = WebpackUtility.normalizePath(stats, move.to);
        if (move.before) {
            move.before(stats, move);
        }
        fsExtra.copySync(move.from, move.to);
        if (Files_1.default.isFile(move.to)) {
            WebpackUtility.replaceInFile(stats, move.to, move.parameters);
        }
        if (move.after) {
            move.after(stats, move);
        }
    };
    WebpackUtility.getParameters = function (stats, parameters) {
        if (parameters) {
            for (var key in parameters) {
                if (parameters.hasOwnProperty(key)) {
                    var value = parameters[key];
                    if (typeof value === "string") {
                        var hashResult = value.match(WebpackUtility.hashPattern);
                        if (hashResult != null) {
                            value = value.replace(WebpackUtility.hashPattern, stats.hash);
                        }
                        var hasIdResult = value.match(WebpackUtility.hashAndIdPattern);
                        if (hasIdResult != null) {
                            value = value.replace(WebpackUtility.hashAndIdPattern, stats.compilation.chunks[hasIdResult[2]].hash);
                        }
                        var renderedHashIdResult = value.match(WebpackUtility.renderedHashAndIdPattern);
                        if (renderedHashIdResult != null) {
                            value = value.replace(WebpackUtility.renderedHashAndIdPattern, stats.compilation.chunks[renderedHashIdResult[2]].renderedHash);
                        }
                    }
                    parameters[key] = value;
                }
            }
        }
        return parameters;
    };
    WebpackUtility.replaceHash = function (value, hash) {
        var hashResult = value.match(WebpackUtility.hashPattern);
        if (hashResult != null) {
            return value.replace(WebpackUtility.hashPattern, hash);
        }
        return value;
    };
    WebpackUtility.replaceHashById = function (value, hash) {
        var hashResult = value.match(WebpackUtility.hashPattern);
        if (hashResult != null) {
            return value.replace(WebpackUtility.hashPattern, hash);
        }
        return value;
    };
    WebpackUtility.replaceInFile = function (stats, filePath, parameters) {
        var toReplaces = [];
        var replacements = [];
        parameters = WebpackUtility.getParameters(stats, parameters);
        for (var key in parameters) {
            if (parameters.hasOwnProperty(key)) {
                toReplaces.push(key);
                replacements.push(parameters[key]);
            }
        }
        Files_1.default.replaceInFile(filePath, toReplaces, replacements);
    };
    WebpackUtility.normalizePath = function (stats, filePath) {
        var outputPath = stats.compilation.outputOptions.path;
        if (Strings_1.default.startsWith(filePath, "./")) {
            filePath = path.resolve(outputPath, filePath);
        }
        return filePath;
    };
    return WebpackUtility;
}());
WebpackUtility.hashPattern = /\[hash\]/;
WebpackUtility.hashAndIdPattern = /\[(hash)\:([0-9]*)\]/;
WebpackUtility.renderedHashAndIdPattern = /\[(renderedHash)\:([0-9]*)\]/;
Object.defineProperty(exports, "__esModule", { value: true });
exports.default = WebpackUtility;
//# sourceMappingURL=WebpackUtility.js.map