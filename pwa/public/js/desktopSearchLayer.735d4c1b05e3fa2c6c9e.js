(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["desktopSearchLayer"],{

/***/ "./application/modules/reusable/actions/commonAction.js":
/*!**************************************************************!*\
  !*** ./application/modules/reusable/actions/commonAction.js ***!
  \**************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\nexports.clearDfpBannerConfig = exports.dfpBannerConfig = undefined;\n\nvar _ApiCalls = __webpack_require__(/*! ./../../../utils/ApiCalls */ \"./application/utils/ApiCalls.js\");\n\nvar _apiConfig = __webpack_require__(/*! ./../../../../config/apiConfig */ \"./config/apiConfig.js\");\n\nvar _apiConfig2 = _interopRequireDefault(_apiConfig);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar dfpBannerConfig = exports.dfpBannerConfig = function dfpBannerConfig(params) {\n\treturn function (dispatch) {\n\t\tvar url = _apiConfig2.default.GET_DFP_PARAMS + '?' + params;\n\t\treturn (0, _ApiCalls.postRequest)(url, params).then(function (response) {\n\t\t\tdispatch({\n\t\t\t\ttype: 'dfpParams',\n\t\t\t\tdata: response.data.data\n\t\t\t});\n\t\t}).catch(function (err) {});\n\t};\n};\n\nvar clearDfpBannerConfig = exports.clearDfpBannerConfig = function clearDfpBannerConfig() {\n\treturn function (dispatch) {\n\t\treturn dispatch({\n\t\t\ttype: 'emptydfpParams',\n\t\t\tdata: {}\n\t\t});\n\t};\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBsaWNhdGlvbi9tb2R1bGVzL3JldXNhYmxlL2FjdGlvbnMvY29tbW9uQWN0aW9uLmpzPzgxNjciXSwibmFtZXMiOlsiZGZwQmFubmVyQ29uZmlnIiwicGFyYW1zIiwiZGlzcGF0Y2giLCJ1cmwiLCJBUElDb25maWciLCJHRVRfREZQX1BBUkFNUyIsInRoZW4iLCJyZXNwb25zZSIsInR5cGUiLCJkYXRhIiwiY2F0Y2giLCJlcnIiLCJjbGVhckRmcEJhbm5lckNvbmZpZyJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOzs7Ozs7QUFFTyxJQUFNQSw0Q0FBa0IsU0FBbEJBLGVBQWtCLENBQUNDLE1BQUQ7QUFBQSxRQUFZLFVBQUNDLFFBQUQsRUFBYztBQUN4RCxNQUFJQyxNQUFNQyxvQkFBVUMsY0FBVixHQUF5QixHQUF6QixHQUE2QkosTUFBdkM7QUFDQSxTQUFPLDJCQUFZRSxHQUFaLEVBQWlCRixNQUFqQixFQUF5QkssSUFBekIsQ0FBOEIsVUFBQ0MsUUFBRCxFQUFjO0FBQ2xETCxZQUFTO0FBQ1JNLFVBQU8sV0FEQztBQUVSQyxVQUFPRixTQUFTRSxJQUFULENBQWNBO0FBRmIsSUFBVDtBQUdFLEdBSkksRUFJRkMsS0FKRSxDQUlJLFVBQVNDLEdBQVQsRUFBYSxDQUN0QixDQUxLLENBQVA7QUFNQSxFQVI4QjtBQUFBLENBQXhCOztBQVVBLElBQU1DLHNEQUF1QixTQUF2QkEsb0JBQXVCO0FBQUEsUUFBTSxVQUFDVixRQUFELEVBQWM7QUFDdkQsU0FBT0EsU0FBUztBQUNmTSxTQUFPLGdCQURRO0FBRWZDLFNBQU87QUFGUSxHQUFULENBQVA7QUFJQSxFQUxtQztBQUFBLENBQTdCIiwiZmlsZSI6Ii4vYXBwbGljYXRpb24vbW9kdWxlcy9yZXVzYWJsZS9hY3Rpb25zL2NvbW1vbkFjdGlvbi5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cG9zdFJlcXVlc3R9IGZyb20gJy4vLi4vLi4vLi4vdXRpbHMvQXBpQ2FsbHMnO1xuaW1wb3J0IEFQSUNvbmZpZyBmcm9tICcuLy4uLy4uLy4uLy4uL2NvbmZpZy9hcGlDb25maWcnO1xuXG5leHBvcnQgY29uc3QgZGZwQmFubmVyQ29uZmlnID0gKHBhcmFtcykgPT4gKGRpc3BhdGNoKSA9PiB7XG5cdHZhciB1cmwgPSBBUElDb25maWcuR0VUX0RGUF9QQVJBTVMrJz8nK3BhcmFtcztcblx0cmV0dXJuIHBvc3RSZXF1ZXN0KHVybCwgcGFyYW1zKS50aGVuKChyZXNwb25zZSkgPT4geyBcblx0XHRkaXNwYXRjaCh7XG5cdFx0XHR0eXBlIDogJ2RmcFBhcmFtcycsXG5cdFx0XHRkYXRhIDogcmVzcG9uc2UuZGF0YS5kYXRhXG5cdH0pfSkuY2F0Y2goZnVuY3Rpb24oZXJyKXtcblx0XHR9KTtcbn1cblxuZXhwb3J0IGNvbnN0IGNsZWFyRGZwQmFubmVyQ29uZmlnID0gKCkgPT4gKGRpc3BhdGNoKSA9PiB7XG5cdHJldHVybiBkaXNwYXRjaCh7XG5cdFx0dHlwZSA6ICdlbXB0eWRmcFBhcmFtcycsXG5cdFx0ZGF0YSA6IHt9XG5cdH0pXG59Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./application/modules/reusable/actions/commonAction.js\n");

/***/ }),

/***/ "./application/modules/reusable/components/Loader.js":
/*!***********************************************************!*\
  !*** ./application/modules/reusable/components/Loader.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = Loader;\nexports.ShowLoader = ShowLoader;\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction Loader(props) {\n  if (props.show) {\n    return _react2.default.createElement(\n      \"div\",\n      { id: \"common-loader\", className: \"loader-col-msearch\" },\n      _react2.default.createElement(\n        \"div\",\n        { className: \"three-quarters-loader-msearch\" },\n        \"Loading\\u2026\"\n      )\n    );\n  } else return null;\n}\n\nfunction ShowLoader() {\n  return _react2.default.createElement(\n    \"div\",\n    { id: \"common-loader\", className: \"loader-col-msearch\" },\n    _react2.default.createElement(\n      \"div\",\n      { className: \"three-quarters-loader-msearch\" },\n      \"Loading\\u2026\"\n    )\n  );\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBsaWNhdGlvbi9tb2R1bGVzL3JldXNhYmxlL2NvbXBvbmVudHMvTG9hZGVyLmpzPzkyOWEiXSwibmFtZXMiOlsiTG9hZGVyIiwiU2hvd0xvYWRlciIsInByb3BzIiwic2hvdyJdLCJtYXBwaW5ncyI6Ijs7Ozs7a0JBQ3dCQSxNO1FBYVJDLFUsR0FBQUEsVTs7QUFkaEI7Ozs7OztBQUNlLFNBQVNELE1BQVQsQ0FBZ0JFLEtBQWhCLEVBQXVCO0FBQ3BDLE1BQUdBLE1BQU1DLElBQVQsRUFDQTtBQUNJLFdBQVE7QUFBQTtBQUFBLFFBQUssSUFBRyxlQUFSLEVBQXdCLFdBQVUsb0JBQWxDO0FBQ0k7QUFBQTtBQUFBLFVBQUssV0FBVSwrQkFBZjtBQUFBO0FBQUE7QUFESixLQUFSO0FBS0gsR0FQRCxNQVNFLE9BQU8sSUFBUDtBQUNIOztBQUVNLFNBQVNGLFVBQVQsR0FBc0I7QUFDdkIsU0FBUTtBQUFBO0FBQUEsTUFBSyxJQUFHLGVBQVIsRUFBd0IsV0FBVSxvQkFBbEM7QUFDSTtBQUFBO0FBQUEsUUFBSyxXQUFVLCtCQUFmO0FBQUE7QUFBQTtBQURKLEdBQVI7QUFLTCIsImZpbGUiOiIuL2FwcGxpY2F0aW9uL21vZHVsZXMvcmV1c2FibGUvY29tcG9uZW50cy9Mb2FkZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gTG9hZGVyKHByb3BzKSB7XG4gIGlmKHByb3BzLnNob3cpXG4gIHtcbiAgICAgIHJldHVybiAoPGRpdiBpZD1cImNvbW1vbi1sb2FkZXJcIiBjbGFzc05hbWU9XCJsb2FkZXItY29sLW1zZWFyY2hcIj5cbiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwidGhyZWUtcXVhcnRlcnMtbG9hZGVyLW1zZWFyY2hcIj5cbiAgICAgICAgICAgICAgICAgICAgTG9hZGluZ+KAplxuICAgICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvZGl2PilcbiAgfVxuICBlbHNlXG4gICAgcmV0dXJuIG51bGw7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBTaG93TG9hZGVyKCkge1xuICAgICAgcmV0dXJuICg8ZGl2IGlkPVwiY29tbW9uLWxvYWRlclwiIGNsYXNzTmFtZT1cImxvYWRlci1jb2wtbXNlYXJjaFwiPlxuICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0aHJlZS1xdWFydGVycy1sb2FkZXItbXNlYXJjaFwiPlxuICAgICAgICAgICAgICAgICAgICBMb2FkaW5n4oCmXG4gICAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgPC9kaXY+KVxufSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./application/modules/reusable/components/Loader.js\n");

/***/ }),

/***/ "./application/modules/search/components/DesktopSearchLayer.js":
/*!*********************************************************************!*\
  !*** ./application/modules/search/components/DesktopSearchLayer.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("/* WEBPACK VAR INJECTION */(function(Buffer) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n\nvar _redux = __webpack_require__(/*! redux */ \"./node_modules/redux/es/index.js\");\n\nvar _axios = __webpack_require__(/*! axios */ \"./node_modules/axios/index.js\");\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _SearchAction = __webpack_require__(/*! ../actions/SearchAction */ \"./application/modules/search/actions/SearchAction.js\");\n\nvar _SearchConfig = __webpack_require__(/*! ../config/SearchConfig */ \"./application/modules/search/config/SearchConfig.js\");\n\nvar _SearchConfig2 = _interopRequireDefault(_SearchConfig);\n\nvar _MathUtils = __webpack_require__(/*! ../../../utils/MathUtils */ \"./application/utils/MathUtils.js\");\n\nvar _reactRouterDom = __webpack_require__(/*! react-router-dom */ \"./node_modules/react-router-dom/es/index.js\");\n\nvar _Loader = __webpack_require__(/*! ../../reusable/components/Loader */ \"./application/modules/reusable/components/Loader.js\");\n\nvar _Loader2 = _interopRequireDefault(_Loader);\n\nvar _reactDom = __webpack_require__(/*! react-dom */ \"./node_modules/react-dom/index.js\");\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _loadableRoutesDesktop = __webpack_require__(/*! ../../../../routes/loadableRoutesDesktop */ \"./routes/loadableRoutesDesktop.js\");\n\nvar _commonAction = __webpack_require__(/*! ../../reusable/actions/commonAction */ \"./application/modules/reusable/actions/commonAction.js\");\n\nvar _DFPBannerAd = __webpack_require__(/*! ../../reusable/components/DFPBannerAd */ \"./application/modules/reusable/components/DFPBannerAd.js\");\n\nvar _commonHelper = __webpack_require__(/*! ../../../utils/commonHelper */ \"./application/utils/commonHelper.js\");\n\nvar _AnalyticsTracking = __webpack_require__(/*! ../../reusable/utils/AnalyticsTracking */ \"./application/modules/reusable/utils/AnalyticsTracking.js\");\n\nvar _AnalyticsTracking2 = _interopRequireDefault(_AnalyticsTracking);\n\nvar _searchUtils = __webpack_require__(/*! ./../utils/searchUtils */ \"./application/modules/search/utils/searchUtils.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DesktopSearchLayer = function (_Component) {\n    _inherits(DesktopSearchLayer, _Component);\n\n    function DesktopSearchLayer(props) {\n        _classCallCheck(this, DesktopSearchLayer);\n\n        var _this = _possibleConstructorReturn(this, (DesktopSearchLayer.__proto__ || Object.getPrototypeOf(DesktopSearchLayer)).call(this, props));\n\n        _this.onLayerClick = function (event) {\n            if (_this.state.autosuggestorTuples.length > 0 && !_this.state.disableInput) {\n                if ((typeof event.target.getAttribute('class') == 'undefined' || !event.target.getAttribute('class')) && !_this.state.blurSuggestor) {\n                    _this.setState({ blurSuggestor: true });\n                    return;\n                }\n                if (typeof event.target.getAttribute('class') != 'undefined' && event.target.getAttribute('class')) {\n                    if (event.target.getAttribute('class').indexOf('mainTuple') < 0 && !_this.state.blurSuggestor) {\n                        _this.setState({ blurSuggestor: true });\n                        return;\n                    }\n                    if (event.target.getAttribute('class').indexOf('mainTuple') > 0 && _this.state.blurSuggestor) {\n                        _this.setState({ blurSuggestor: false });\n                        return;\n                    }\n                }\n            }\n            if (_this.state.showAdvancedSearchLayer && _this.state.openStreamDropdown && _this.filtersData.length > 0) {\n                if ((typeof event.target.getAttribute('class') == 'undefined' || !event.target.getAttribute('class')) && _this.state.openStreamDropdown) {\n                    _this.setState({ openStreamDropdown: false });\n                    return;\n                }\n                if (typeof event.target.getAttribute('class') != 'undefined' && event.target.getAttribute('class')) {\n                    if (event.target.getAttribute('class').indexOf('streamTuple') < 0 && _this.state.openStreamDropdown) {\n                        _this.setState({ openStreamDropdown: false });\n                        return;\n                    }\n                    if (event.target.getAttribute('class').indexOf('streamTuple') > 0 && !_this.state.openStreamDropdown) {\n                        _this.setState({ openStreamDropdown: true });\n                        return;\n                    }\n                }\n            }\n            if (_this.state.showAdvancedSearchLayer && _this.state.openCourseDropdown && _this.state.streamValue.subSuggestions.length > 0) {\n                if ((typeof event.target.getAttribute('class') == 'undefined' || !event.target.getAttribute('class')) && _this.state.openCourseDropdown) {\n                    _this.setState({ openCourseDropdown: false });\n                    return;\n                }\n                if (typeof event.target.getAttribute('class') != 'undefined' && event.target.getAttribute('class')) {\n                    if (event.target.getAttribute('class').indexOf('courseTuple') < 0 && _this.state.openCourseDropdown) {\n                        _this.setState({ openCourseDropdown: false });\n                        return;\n                    }\n                    if (event.target.getAttribute('class').indexOf('courseTuple') > 0 && !_this.state.openCourseDropdown) {\n                        _this.setState({ openCourseDropdown: true });\n                    }\n                }\n            }\n        };\n\n        _this.onKeyDown = function (event) {\n            if (!_this.props.isSearchLayerOpen) {\n                return;\n            }\n            var keyCode = event.keyCode;\n\n            switch (keyCode) {\n                case 16:\n                    //shift\n                    _this.shiftDown = true;\n                    break;\n                case 9:\n                    //tab\n                    event.preventDefault();\n                    var adder = _this.shiftDown ? -1 : 1;\n                    _this.controlTabBehaviour(adder);\n                    break;\n                case 40: // ArrowDown\n                case 38:\n                    // ArrowUp\n                    event.preventDefault();\n                    var indexAdder = keyCode - 39;\n                    if (_this.state.autosuggestorTuples.length > 0 && !_this.state.blurSuggestor && !_this.state.disableInput && _this.state.activeIndex + indexAdder >= -1 && _this.state.activeIndex + indexAdder < _this.state.autosuggestorTuples.length) {\n                        var activeIndexTuple = _this.state.activeIndex + indexAdder;\n                        _this.setState({ activeIndex: activeIndexTuple });\n                        if (activeIndexTuple === -1) return;\n                        var suggestorBoxDiv = document.querySelector('.showsuggestorBox');\n                        var tupleHeight = document.querySelector('.active-tuple').clientHeight;\n                        if (suggestorBoxDiv.clientHeight < 300) break;\n                        _this.scrollOnKeyMovements(suggestorBoxDiv, keyCode, tupleHeight, _this.state.activeIndex, 300);\n                    } else if (_this.state.showAdvancedSearchLayer && _this.state.openStreamDropdown && _this.filtersData.length > 0 && _this.state.activeIndexStream + indexAdder >= -1 && _this.state.activeIndexStream + indexAdder < _this.filtersData.length) {\n\n                        var streamActiveIndex = _this.state.activeIndexStream + indexAdder;\n                        _this.setState({ activeIndexStream: streamActiveIndex });\n                        if (streamActiveIndex === -1) return;\n                        var _suggestorBoxDiv = document.querySelector('.showOptns.show-optns-block');\n                        var _tupleHeight = document.querySelector('.showOptns.show-optns-block ul li.active-advanced').clientHeight;\n                        if (_suggestorBoxDiv.clientHeight < 200) break;\n                        if (keyCode === 40 && streamActiveIndex > 1) {\n                            _suggestorBoxDiv.scrollTop = _suggestorBoxDiv.scrollTop + _tupleHeight;\n                        }\n                        if (keyCode === 38 && _suggestorBoxDiv.scrollTop > 0) {\n                            _suggestorBoxDiv.scrollTop = _suggestorBoxDiv.scrollTop - _tupleHeight > 0 ? _suggestorBoxDiv.scrollTop - _tupleHeight : 0;\n                        }\n                    } else if (_this.state.showAdvancedSearchLayer && _this.state.openCourseDropdown && _this.state.streamValue.subSuggestions.length > 0 && _this.state.activeIndexCourse + indexAdder >= -1 && _this.state.activeIndexCourse + indexAdder < _this.state.streamValue.subSuggestions.length) {\n\n                        var courseActiveIndex = _this.state.activeIndexCourse + indexAdder;\n                        _this.setState({ activeIndexCourse: courseActiveIndex });\n                        if (courseActiveIndex === -1) return;\n                        var _suggestorBoxDiv2 = document.querySelector('.showOptns.show-optns-block');\n                        var _tupleHeight2 = document.querySelector('.showOptns.show-optns-block ul li.active-advanced').clientHeight;\n                        if (_suggestorBoxDiv2.clientHeight < 200) break;\n                        if (keyCode === 40 && courseActiveIndex > 1) {\n                            _suggestorBoxDiv2.scrollTop = _suggestorBoxDiv2.scrollTop + _tupleHeight2;\n                        }\n                        if (keyCode === 38 && _suggestorBoxDiv2.scrollTop > 0) {\n                            _suggestorBoxDiv2.scrollTop = _suggestorBoxDiv2.scrollTop - _tupleHeight2 > 0 ? _suggestorBoxDiv2.scrollTop - _tupleHeight2 : 0;\n                        }\n                        /*console.log(tupleHeight, '  ',suggestorBoxDiv.clientHeight);\n                        this.scrollOnKeyMovements(suggestorBoxDiv, keyCode, tupleHeight, this.state.activeIndexCourse + 1);*/\n                    }\n                    break;\n            }\n        };\n\n        _this.onKeyUp = function (event) {\n            if (!_this.props.isSearchLayerOpen) {\n                return;\n            }\n            var keyCode = event.keyCode;\n\n            switch (keyCode) {\n                case 16:\n                    //shift\n                    _this.shiftDown = false;\n                    break;\n                case 27:\n                    //escape\n                    _this.closeLayerPopup();\n                    break;\n                case 13:\n                    //enter\n                    //for main autosuggestor\n                    if (!_this.state.blurSuggestor && !_this.state.disableInput && !_this.state.showAdvancedSearchLayer) {\n                        if (_this.state.activeIndex === -1) {\n                            var searchedString = _this.state.typedKeyword;\n                            _this.performSearch(searchedString);\n                        } else if (_this.state.activeIndex >= 0 && _this.state.activeIndex < _this.state.autosuggestorTuples.length) {\n                            var tuple = _this.state.autosuggestorTuples[_this.state.activeIndex];\n                            _this.onClickSuggestion(tuple.data, tuple.bucket, 'close', tuple.keyword);\n                        }\n                    } else if (_this.state.showAdvancedSearchLayer && _this.state.openStreamDropdown && _this.filtersData.length > 0 && _this.state.activeIndexStream >= 0 && _this.state.activeIndexStream < _this.filtersData.length) {\n                        _this.selectStream(_this.filtersData[_this.state.activeIndexStream]);\n                    } else if (_this.state.showAdvancedSearchLayer && _this.state.openCourseDropdown && _this.state.streamValue.subSuggestions.length > 0 && _this.state.activeIndexCourse >= 0 && _this.state.activeIndexCourse < _this.state.streamValue.subSuggestions.length) {\n                        _this.selectCourse(_this.state.streamValue.subSuggestions[_this.state.activeIndexCourse]);\n                    } else if ((_this.state.showAdvancedSearchLayer && !_this.state.openStreamDropdown && !_this.state.openCourseDropdown || _this.state.showAdvancedLoader) && _this.url) {\n                        _this.prepareAdvancedTrackingData();\n                        window.location.href = _this.url;\n                        if (_this.state.showAdvancedLoader) {\n                            _this.setState({\n                                showAdvancedSearchLayer: false, streamValue: null, courseValue: null,\n                                openStreamDropdown: false, openCourseDropdown: false, showAdvancedLoader: false });\n                        }\n                    }\n                    break;\n            }\n        };\n\n        _this.openDropdownCourse = function () {\n            var dropDownState = !_this.state.openCourseDropdown;\n            _this.setState({ openCourseDropdown: dropDownState, openStreamDropdown: false });\n        };\n\n        _this.openDropdownCourseBlur = function () {\n            _this.setState({ openCourseDropdown: false });\n        };\n\n        _this.openDropdownCourseFocus = function () {\n            _this.setState({ openCourseDropdown: true, openStreamDropdown: false });\n        };\n\n        _this.openDropdownStream = function () {\n            var dropDownState = !_this.state.openStreamDropdown;\n            _this.setState({ openStreamDropdown: dropDownState, openCourseDropdown: false });\n        };\n\n        _this.openDropdownStreamFocus = function () {\n            _this.setState({ openStreamDropdown: true, openCourseDropdown: false });\n        };\n\n        _this.openDropdownStreamBlur = function () {\n            _this.setState({ openStreamDropdown: false });\n        };\n\n        _this.clearRecentSearchCookie = function () {\n            (0, _commonHelper.setCookie)('recentSearches', '', -1);\n            _this.trackEvent('recent_search', 'clear_recent_search');\n            _this.setState({ showRecentSearches: false });\n        };\n\n        _this.setStreamOver = function (index) {\n            return function () {\n                _this.setState({ activeIndexStream: index });\n            };\n        };\n\n        _this.setCourseOver = function (index) {\n            return function () {\n                _this.setState({ activeIndexCourse: index });\n            };\n        };\n\n        _this.OnChangeSearchString = function (event) {\n            _this.setState({ typedKeyword: event.target.value });\n            var searchedString = event.target.value.trim();\n            if (!searchedString) {\n                if (_typeof(_this._source) !== ( true ? \"undefined\" : undefined)) {\n                    _this._source.cancel('Operation Cancelled');\n                }\n                _this.prevSearchedKeyword = '';\n                _this.setState({ autosuggestorTuples: [], showRecentSearches: true, resetActive: false, activeIndex: -1, blurSuggestor: false,\n                    showUserSearches: true });\n                return;\n            }\n            _loadableRoutesDesktop.DesktopCTP.preload();\n            if (_this.prevSearchedKeyword === searchedString) return;\n            if (_typeof(_this._source) !== ( true ? \"undefined\" : undefined)) {\n                _this._source.cancel('Operation Cancelled');\n            }\n            _this.prevSearchedKeyword = searchedString;\n            _this.exactMatch = null;\n            var autoSuggestorReults = [];\n\n            _this.setState({ showUserSearches: false, resetActive: true, showErrorMessage: false });\n            _this._source = _axios2.default.CancelToken.source();\n            var config = { cancelToken: _this._source.token };\n\n            (0, _SearchAction.fetchTupleData)(searchedString, config).then(function (response) {\n                if (response.status === 200 && response.data.data) {\n                    var bucket = response.data.data.bucketName;\n                    var searchedKeyword = response.data.data.searchKeyword;\n                    response.data.data.solrResults.forEach(function (solrResult) {\n                        var tupleData = { 'data': solrResult, 'bucket': bucket[solrResult.type],\n                            'keyword': searchedKeyword };\n                        autoSuggestorReults.push(tupleData);\n                        if (_this.matchesKeyword(tupleData)) {\n                            _this.exactMatch = tupleData;\n                        }\n                    });\n                    _this.setState({ autosuggestorTuples: autoSuggestorReults, activeIndex: -1, blurSuggestor: false });\n                    document.querySelector('.showsuggestorBox').scrollTop = 0;\n                }\n            }).catch(function (thrown) {\n                if (_axios2.default.isCancel(thrown)) {} else {\n                    //console.log(thrown);\n                }\n            });\n        };\n\n        _this.onClickSuggestion = function (tupleData, bucket, searchType) {\n            var searchedKeyword = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            _this.updateRecentSearchesCookie(tupleData, bucket);\n            var isRecent = searchType === 'recentSearch';\n            if (isRecent) {\n                _this.trackEvent('Recent Search', 'click');\n            }\n            var isTrending = searchType === 'trendingSearch';\n            if (isTrending) {\n                _this.trackEvent('Trending Search', 'click');\n            }\n            if (bucket === _SearchConfig2.default.COLLEGE_BUCKET || bucket === _SearchConfig2.default.UNIV_BUCKET) {\n                _this.collegeData = tupleData;\n                _this.url = tupleData.url;\n                _this.getStreamCourseData(tupleData, searchType);\n                return;\n            }\n            searchType = searchType === 'recentSearch' ? 'close' : searchType;\n            searchType = searchType === 'trendingSearch' ? 'close' : searchType;\n            _this.prepareTrackingData({ 'typedKeyword': searchedKeyword, 'searchType': searchType, 'isRecent': isRecent, 'isTrending': isTrending }, tupleData);\n            if (tupleData.url != null) {\n                if (bucket === _SearchConfig2.default.COURSE_BUCKET) {\n\n                    _this.redirectToPWAPage(tupleData.url);\n                } else window.location.href = tupleData.url;\n            }\n            if (tupleData.url) return;\n\n            /*if(!searchedKeyword){\n                searchedKeyword = tupleData.name;\n            }*/\n            _this.redirectToPWAPage('/search?q=' + encodeURIComponent(tupleData.name) + '&' + _SearchConfig2.default.typeUrlMapping[tupleData.type] + '=' + tupleData.id + '&apk=true' + '&rf=searchWidget');\n        };\n\n        _this.onReset = function () {\n            if (_typeof(_this._source) !== ( true ? \"undefined\" : undefined)) {\n                _this._source.cancel('Operation Cancelled');\n            }\n            _this.prevSearchedKeyword = '';\n            //this.textLoader(true);\n            clearInterval(_this.myInter);\n            _this.setState({ autosuggestorTuples: [], showUserSearches: true, resetActive: false, typedKeyword: '',\n                showAdvancedSearchLayer: false, disableInput: false, streamValue: null, courseValue: null, activeIndex: -1,\n                openStreamDropdown: false, openCourseDropdown: false, showAdvancedLoader: false, showErrorMessage: false, activeIndexCourse: -1,\n                activeIndexStream: -1, visibleDots: '', searchButtonText: 'Search' });\n            _this.url = null;\n            _this.courseValue = null;\n            _this.advancedSearhTypedKeyword = null;\n            _this.numTuples = null;\n            document.getElementById('searchInput').value = '';\n        };\n\n        _this.onSearchPress = function () {\n            _this.trackEvent('Search CTA', 'click');\n            clearInterval(_this.myInter);\n            var searchedString = _this.state.typedKeyword;\n            if (_this.url) {\n                //advanced Search case\n                _this.prepareAdvancedTrackingData();\n                window.location.href = _this.url;\n                return;\n            }\n            _this.performSearch(searchedString);\n        };\n\n        _this.state = {\n            autosuggestorTuples: [],\n            showAdvancedSearchLayer: false,\n            openCourseDropdown: false, // new\n            openStreamDropdown: false, //new\n            showLoader: false,\n            showAdvancedLoader: false, //new,\n            disableInput: false, //new\n            blurSuggestor: false,\n            streamValue: null,\n            courseValue: null,\n            activeIndex: -1, //new\n            activeIndexStream: -1, //new\n            activeIndexCourse: -1, //new\n            showRecentSearches: !(_this.props && _this.props.location && _this.props.location.keyword && _this.props.location.keyword.length > 0),\n            resetActive: !!(_this.props && _this.props.location && _this.props.location.keyword && _this.props.location.keyword.length > 0),\n            typedKeyword: _this.props && _this.props.location && _this.props.location.keyword ? _this.props.location.keyword : '',\n            showUserSearches: true,\n            showErrorMessage: false,\n            searchPopupAnimClass: 'hide',\n            visibleDots: '',\n            searchButtonText: 'Search'\n\n        };\n        _this.filtersData = {};\n        _this.prevSearchedKeyword = '';\n        _this.exactMatch = null;\n        _this.url = null;\n        _this.searchType = null;\n        _this.courseValue = null;\n        _this.shiftDown = false;\n        return _this;\n    }\n\n    _createClass(DesktopSearchLayer, [{\n        key: \"componentDidMount\",\n        value: function componentDidMount() {\n            if (this.props.isSearchLayerOpen) {\n                document.getElementById('wrapperMainForCompleteShiksha').classList.add(\"noscroll\");\n                if (!this.props.searchPage) {\n                    this.setState({ searchPopupAnimClass: 'active' });\n                } else {\n                    document.getElementById('searchInput').focus();\n                    this.getDFPData();\n                }\n            }\n            if (!this.props.trendingData || !this.props.trendingData.solrResults || !this.props.trendingData.bucketName) {\n                this.props.fetchTrendingSearchesData(false);\n            }\n            window.addEventListener('keyup', this.onKeyUp);\n            window.addEventListener('keydown', this.onKeyDown);\n            document.getElementById('searchLayer').addEventListener(\"click\", this.onLayerClick);\n        }\n    }, {\n        key: \"componentWillReceiveProps\",\n        value: function componentWillReceiveProps(nextProps) {\n            if (!this.props.isSearchLayerOpen && nextProps.isSearchLayerOpen && !this.props.searchPage) {\n                if (googletag && googletag.pubads) {\n                    googletag.pubads().refresh();\n                }\n            }\n        }\n    }, {\n        key: \"controlTabBehaviour\",\n        value: function controlTabBehaviour(tabAdder) {\n            var activeFocus = document.activeElement.tabIndex;\n            if (activeFocus <= 0) {\n                if (this.state.showAdvancedSearchLayer) {\n                    document.getElementById('tabIndex2').focus(); //Stream list\n                } else document.getElementById('searchInput').focus();\n                return;\n            }\n            activeFocus += tabAdder;\n            if (activeFocus === 1) {\n                if (this.state.showAdvancedSearchLayer) {\n                    if (this.state.streamValue) document.getElementById('tabIndex4').focus(); //course dropdown\n                    else document.getElementById('tabIndex3').focus(); //stream dropdown\n                } else document.getElementById('searchInput').focus(); //stream button\n                return;\n            }\n            if (activeFocus > 4 && this.state.showAdvancedSearchLayer && this.state.streamValue) {\n                document.getElementById('tabIndex2').focus(); //search button\n                return;\n            }\n            if (activeFocus > 3 && this.state.showAdvancedSearchLayer && !this.state.streamValue) {\n                document.getElementById('tabIndex2').focus(); //search button\n                return;\n            }\n\n            if (activeFocus > 2 && !this.state.showAdvancedSearchLayer) {\n                document.getElementById('searchInput').focus();\n                return;\n            }\n\n            if (activeFocus <= 0) {\n                if (this.state.showAdvancedSearchLayer) {\n                    if (this.state.streamValue) document.getElementById('tabIndex4').focus(); //course dropdown\n                    else document.getElementById('tabIndex3').focus(); //stream dropdown\n                } else document.getElementById('tabIndex2').focus();\n                return;\n            }\n            document.getElementById('tabIndex' + activeFocus).focus();\n        }\n    }, {\n        key: \"scrollOnKeyMovements\",\n        value: function scrollOnKeyMovements(suggestorBoxDiv, keyCode, tupleHeight, activeIndex) {\n            if (keyCode === 40 && suggestorBoxDiv.scrollTop + suggestorBoxDiv.clientHeight <= tupleHeight * (activeIndex + 4)) {\n                suggestorBoxDiv.scrollTop = suggestorBoxDiv.scrollTop + tupleHeight;\n            }\n            if (keyCode === 38 && suggestorBoxDiv.scrollTop > 0) {\n                suggestorBoxDiv.scrollTop = suggestorBoxDiv.scrollTop - tupleHeight > 0 ? suggestorBoxDiv.scrollTop - tupleHeight : 0;\n            }\n        }\n    }, {\n        key: \"componentWillUnmount\",\n        value: function componentWillUnmount() {\n            this.props.clearDfpBannerConfig();\n            document.getElementById('wrapperMainForCompleteShiksha').classList.remove(\"noscroll\");\n        }\n    }, {\n        key: \"componentDidUpdate\",\n        value: function componentDidUpdate(prevProps, prevState, nextState) {\n            if (this.props.isSearchLayerOpen && !prevProps.isSearchLayerOpen) {\n                document.getElementById('wrapperMainForCompleteShiksha').classList.add(\"noscroll\");\n                if (!this.props.searchPage) {\n                    document.getElementById('searchInput').focus();\n                    this.setState({ searchPopupAnimClass: 'active' });\n                }\n            } else if (!this.props.isSearchLayerOpen && prevProps.isSearchLayerOpen) {\n                document.getElementById('wrapperMainForCompleteShiksha').classList.remove(\"noscroll\");\n            }\n        }\n    }, {\n        key: \"trackEvent\",\n        value: function trackEvent(actionLabel, label) {\n            _AnalyticsTracking2.default.event({ category: 'SEARCH_DESKTOP', action: actionLabel, label: label });\n        }\n    }, {\n        key: \"getDFPData\",\n        value: function getDFPData() {\n            var dfpPostParams = 'parentPage=DFP_SearchLayer';\n            this.props.dfpBannerConfig(dfpPostParams);\n        }\n    }, {\n        key: \"closeLayerPopup\",\n        value: function closeLayerPopup() {\n            var redirectToPwa = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n            if (this.props.searchPage && !redirectToPwa) {\n                window.history.back();\n                return;\n            }\n            if (_typeof(this._source) !== ( true ? \"undefined\" : undefined)) {\n                this._source.cancel('Operation Cancelled');\n            }\n            this.prevSearchedKeyword = '';\n            clearInterval(this.myInter);\n            this.setState({ autosuggestorTuples: [], showRecentSearches: true, resetActive: false, streamValue: null, courseValue: null,\n                disableInput: false, typedKeyword: '', showAdvancedLoader: false, showLoader: false, showAdvancedSearchLayer: false, activeIndex: -1,\n                openStreamDropdown: false, openCourseDropdown: false, showUserSearches: true, showErrorMessage: false, activeIndexCourse: -1,\n                activeIndexStream: -1, searchPopupAnimClass: 'hide', visibleDots: '', searchButtonText: 'Search' });\n            this.url = null;\n            this.courseValue = null;\n            this.advancedSearhTypedKeyword = null;\n            this.numTuples = null;\n            if (redirectToPwa && this.props.searchPage) return;\n            if (!this.props.searchPage) {\n                this.props.onClose();\n                return;\n            }\n        }\n    }, {\n        key: \"matchesKeyword\",\n\n        /*\n         * no match found before this (as we are taking priority into account), autosuggestor result and typed keyword are same ,\n         * the result is not part of {$SearchConfig.BUCKET_IGN_LIST} bucket. Story-> https://infoedge.atlassian.net/browse/SS-350\n         */\n        value: function matchesKeyword(tupleData) {\n            return !this.exactMatch && tupleData.data.name.toLowerCase() === tupleData.keyword.toLowerCase() && _SearchConfig2.default.BUCKET_IGN_LIST.indexOf(tupleData.bucket) === -1;\n        }\n    }, {\n        key: \"generateRecentSearches\",\n        value: function generateRecentSearches() {\n            var _this2 = this;\n\n            if (!this.canUseDOM() && !this.props.hocData) return null;\n            var recentSearchesData = void 0;\n            //if the page is being served through server then props.hocData will be set\n            try {\n                if (this.props.hocData) recentSearchesData = JSON.parse(new Buffer(this.props.hocData, 'base64'));else recentSearchesData = (0, _commonHelper.getCookie)('recentSearches') ? JSON.parse(atob((0, _commonHelper.getCookie)('recentSearches'))) : null;\n            } catch (err) {\n                (0, _commonHelper.setCookie)('recentSearches', '', -1);\n            }\n            if (!recentSearchesData) return;\n            var recentList = recentSearchesData.map(function (tuple, i) {\n                return tuple.bucket || _typeof(tuple.tupleData) == 'object' && tuple.tupleData.type ? //Closed Search\n                _react2.default.createElement(\n                    \"li\",\n                    { key: 'recentList' + i, className: 'recentTuple',\n                        onClick: _this2.onClickSuggestion.bind(_this2, tuple.tupleData, tuple.bucket, 'recentSearch', '') },\n                    _react2.default.createElement(\n                        \"p\",\n                        { className: \"rcnt-srchtitl recentTuple\" },\n                        tuple.tupleData.name\n                    ),\n                    _react2.default.createElement(\n                        \"span\",\n                        { className: \"srchType recentTuple\" },\n                        \" \",\n                        tuple.bucket,\n                        \" \"\n                    )\n                ) : _typeof(tuple.tupleData) == 'object' ? //Open Search\n                _react2.default.createElement(\n                    \"li\",\n                    { key: 'recentList' + i, className: 'recentTuple',\n                        onClick: _this2.onOpenRecentSearch.bind(_this2, tuple.tupleData) },\n                    _react2.default.createElement(\n                        \"p\",\n                        { className: \"rcnt-srchtitl recentTuple\" },\n                        tuple.tupleData.name\n                    )\n                ) : '';\n            });\n            if (!recentList || recentList.length <= 0) return;\n            return _react2.default.createElement(\n                \"div\",\n                { className: \"trendscol\" },\n                _react2.default.createElement(\n                    \"div\",\n                    { className: \"dvMsgHead rcnt\" },\n                    \"Recent Searches \",\n                    _react2.default.createElement(\n                        \"span\",\n                        { className: \"clr-r-srch\", onClick: this.clearRecentSearchCookie },\n                        \"Clear All\"\n                    )\n                ),\n                _react2.default.createElement(\n                    \"div\",\n                    { className: \"spaceUp\" },\n                    _react2.default.createElement(\n                        \"ul\",\n                        { className: \"lstRecentSrc\" },\n                        recentList\n                    )\n                )\n            );\n        }\n    }, {\n        key: \"generateUserSearches\",\n        value: function generateUserSearches() {\n            var _this3 = this;\n\n            var trendingSearchData = this.props.trendingData;\n            var trendingList = [];\n            if (trendingSearchData && trendingSearchData.solrResults) {\n                trendingList = trendingSearchData.solrResults.map(function (tuple, i) {\n                    return _react2.default.createElement(\n                        \"li\",\n                        { key: 'trendingList' + i, className: 'trendingTuple',\n                            onClick: _this3.onClickSuggestion.bind(_this3, tuple, trendingSearchData.bucketName[tuple.type], 'trendingSearch', '') },\n                        _react2.default.createElement(\n                            \"p\",\n                            { className: \"rcnt-srchtitl trendingTuple\" },\n                            tuple.name\n                        ),\n                        _react2.default.createElement(\n                            \"span\",\n                            { className: \"srchType trendingTuple\" },\n                            \" \",\n                            trendingSearchData.bucketName[tuple.type],\n                            \" \"\n                        )\n                    );\n                });\n            }\n            if (!trendingList || trendingList.length <= 0) return;\n            return _react2.default.createElement(\n                \"div\",\n                { className: \"trendscol\" },\n                _react2.default.createElement(\n                    \"div\",\n                    { className: \"dvMsgHead\" },\n                    \"Trending Searches\"\n                ),\n                _react2.default.createElement(\n                    \"div\",\n                    { className: \"spaceUp\" },\n                    _react2.default.createElement(\n                        \"ul\",\n                        { className: \"lstRecentSrc\" },\n                        trendingList\n                    )\n                )\n            );\n        }\n    }, {\n        key: \"selectStream\",\n        value: function selectStream(tupleData) {\n            this.trackEvent('Advance_options_stream', 'click');\n            this.setState({ streamValue: tupleData, courseValue: null, openStreamDropdown: false, openCourseDropdown: true, activeIndexCourse: -1 });\n            document.getElementById('tabIndex4').focus();\n            if (document.querySelector('.showOptns.courseTuple')) {\n                document.querySelector('.showOptns.courseTuple').scrollTop = 0;\n            }\n            this.courseValue = null;\n            this.url = tupleData.url;\n        }\n    }, {\n        key: \"prepareStreamData\",\n        value: function prepareStreamData() {\n            var _this4 = this;\n\n            var streamTuples = this.filtersData;\n            var streamList = streamTuples.map(function (tuple, i) {\n                return _react2.default.createElement(\n                    \"li\",\n                    { key: 'streamTuple_' + i, className: _this4.state.activeIndexStream === i ? 'active-advanced streamTuple' : 'streamTuple',\n                        onMouseOver: _this4.setStreamOver(i),\n                        onClick: _this4.selectStream.bind(_this4, tuple) },\n                    _react2.default.createElement(\n                        \"span\",\n                        { className: \"streamTuple\" },\n                        tuple.name\n                    )\n                );\n            });\n            return _react2.default.createElement(\n                \"ul\",\n                { key: \"streamList streamTuple\" },\n                streamList\n            );\n        }\n    }, {\n        key: \"selectCourse\",\n        value: function selectCourse(tupleData) {\n            this.trackEvent('Advance_options_course', 'click');\n            this.url = tupleData.url;\n            this.courseValue = tupleData;\n            this.prepareAdvancedTrackingData();\n            window.location.href = this.url;\n            //this.setState({courseValue: tupleData, openCourseDropdown : false});\n        }\n    }, {\n        key: \"prepareCourseData\",\n        value: function prepareCourseData() {\n            var _this5 = this;\n\n            if (!this.state.streamValue || !this.state.streamValue.subSuggestions) return;\n            var courseTuples = this.state.streamValue.subSuggestions;\n            var courseList = courseTuples.map(function (tuple, i) {\n                return _react2.default.createElement(\n                    \"li\",\n                    { key: 'courseTuple_' + i, className: _this5.state.activeIndexCourse === i ? 'active-advanced courseTuple' : '',\n                        onMouseOver: _this5.setCourseOver(i),\n                        onClick: _this5.selectCourse.bind(_this5, tuple) },\n                    _react2.default.createElement(\n                        \"span\",\n                        { className: \"courseTuple\" },\n                        tuple.name,\n                        tuple.subName ? ',' : '',\n                        \" \",\n                        tuple.subName\n                    )\n                );\n            });\n            return _react2.default.createElement(\n                \"ul\",\n                { className: \"ul-list\", key: \"courseList\" },\n                courseList\n            );\n        }\n    }, {\n        key: \"generateAdvancedSearch\",\n        value: function generateAdvancedSearch() {\n            return _react2.default.createElement(\n                \"div\",\n                { className: \"advance-col\" },\n                _react2.default.createElement(\n                    \"fieldset\",\n                    { className: \"subSection\" },\n                    _react2.default.createElement(\n                        \"legend\",\n                        { className: \"advanced-title\" },\n                        \"Advanced Search \",\n                        _react2.default.createElement(\n                            \"span\",\n                            null,\n                            \" (Optional) \"\n                        )\n                    ),\n                    _react2.default.createElement(\n                        \"div\",\n                        { className: \"refernce-txt\" },\n                        \"This college offers multiple courses and multiple streams. You may select stream/course from below:\"\n                    ),\n                    _react2.default.createElement(\n                        \"div\",\n                        { className: \"dropdownflex flex-row space-btwn\" },\n                        _react2.default.createElement(\n                            \"div\",\n                            { className: this.state.openStreamDropdown === true ? \"flexdropdwnbox active streamTuple\" : \"flexdropdwnbox streamTuple\" },\n                            _react2.default.createElement(\"a\", { id: \"tabIndex3\", tabIndex: \"3\", onFocus: this.openDropdownStreamFocus, onBlur: this.openDropdownStreamBlur }),\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"streamTuple\", onClick: this.openDropdownStream },\n                                _react2.default.createElement(\n                                    \"p\",\n                                    { className: this.state.streamValue ? \"changeTxt advanced-bold streamTuple\" : \"changeTxt streamTuple\" },\n                                    this.state.streamValue ? this.state.streamValue.name : 'Choose Stream'\n                                ),\n                                _react2.default.createElement(\"i\", { className: \"custm-arwico streamTuple\" })\n                            ),\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"showOptns streamTuple \" + (this.state.openStreamDropdown ? 'show-optns-block' : 'hide-optns') },\n                                this.prepareStreamData()\n                            )\n                        ),\n                        _react2.default.createElement(\n                            \"div\",\n                            { className: this.state.openCourseDropdown === true && this.state.streamValue ? \"flexdropdwnbox active courseTuple\" : this.state.streamValue ? \"flexdropdwnbox courseTuple\" : \"flexdropdwnbox notallowed\" },\n                            _react2.default.createElement(\"a\", { id: \"tabIndex4\", tabIndex: \"4\", onFocus: this.openDropdownCourseFocus, onBlur: this.openDropdownCourseBlur }),\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"courseTuple\", onClick: this.openDropdownCourse },\n                                _react2.default.createElement(\n                                    \"p\",\n                                    { className: this.state.courseValue ? \"changeTxt advanced-bold courseTuple\" : \"changeTxt courseTuple\" },\n                                    this.state.courseValue ? this.state.courseValue.name + (this.state.courseValue.subName ? ', ' + this.state.courseValue.subName : '') : 'Choose Course '\n                                ),\n                                _react2.default.createElement(\"i\", { className: \"custm-arwico courseTuple\" })\n                            ),\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"showOptns courseTuple \" + (this.state.openCourseDropdown && this.state.streamValue ? 'show-optns-block' : 'hide-optns') },\n                                this.prepareCourseData()\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }, {\n        key: \"getStreamCourseData\",\n        value: function getStreamCourseData(data, searchType) {\n            var _this6 = this;\n\n            this.advancedSearhTypedKeyword = this.state.typedKeyword;\n            this.numTuples = this.state.autosuggestorTuples.length;\n            this.setState({ showAdvancedLoader: true, disableInput: true, typedKeyword: data.name, autosuggestorTuples: [], activeIndex: -1,\n                showUserSearches: false, resetActive: true });\n            document.getElementById('searchInput').blur();\n            document.getElementById('tabIndex2').focus();\n            (0, _SearchAction.fetchCollegeData)(data).then(function (response) {\n                if (response.status !== 200) {\n                    return;\n                }\n                _this6.filtersData = response.data.data.advancedOptions;\n                _this6.searchType = searchType;\n                if (!_this6.state.showAdvancedLoader) {\n                    return;\n                }\n                _this6.setState({ showAdvancedLoader: false, showAdvancedSearchLayer: true });\n            }).catch(function (err) {});\n        }\n    }, {\n        key: \"redirectToPWAPage\",\n        value: function redirectToPWAPage(url) {\n            var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            this.closeLayerPopup(true);\n            if (state) {\n                this.props.history.push(url, state);\n            } else this.props.history.push(url);\n        }\n    }, {\n        key: \"setActiveIndex\",\n        value: function setActiveIndex(activeIndex) {\n            this.setState({ activeIndex: activeIndex });\n        }\n    }, {\n        key: \"generateHtml\",\n        value: function generateHtml() {\n            var _this7 = this;\n\n            var suggestorTuples = this.state.autosuggestorTuples;\n            var suggestorList = suggestorTuples.map(function (tuple, i) {\n                return _react2.default.createElement(\n                    \"li\",\n                    { key: 'suggestorTuple_' + i, onMouseOver: _this7.setActiveIndex.bind(_this7, i),\n                        className: _this7.state.activeIndex === i ? 'active-tuple mainTuple' : 'mainTuple',\n                        onClick: _this7.onClickSuggestion.bind(_this7, tuple.data, tuple.bucket, 'close', tuple.keyword) },\n                    _react2.default.createElement(\n                        \"span\",\n                        { className: \"getName mainTuple\" },\n                        _react2.default.createElement(\"span\", { className: \"getsearchname mainTuple\", dangerouslySetInnerHTML: (0, _searchUtils.highlightTypedKeyword)(tuple.data.name, tuple.keyword) }),\n                        tuple.bucket === _SearchConfig2.default.TOPIC_BUCKET && tuple.data.questionCount && tuple.data.questionCount > 0 ? _react2.default.createElement(\n                            \"span\",\n                            { className: \"stats mainTuple\" },\n                            _react2.default.createElement(\n                                \"span\",\n                                { className: \"statsCount mainTuple\" },\n                                (0, _MathUtils.numberFormatter)(tuple.data.questionCount),\n                                tuple.data.questionCount > 1 ? ' Questions' : ' Question'\n                            ),\n                            tuple.data.answerCount && tuple.data.answerCount > 0 ? _react2.default.createElement(\n                                \"span\",\n                                { className: \"statsCount mainTuple\" },\n                                \", \",\n                                (0, _MathUtils.numberFormatter)(tuple.data.answerCount),\n                                \" \",\n                                tuple.data.answerCount > 1 ? ' Answers' : ' Answer'\n                            ) : null\n                        ) : null\n                    ),\n                    _react2.default.createElement(\n                        \"span\",\n                        { className: \"srchType mainTuple\" },\n                        \" \",\n                        tuple.bucket,\n                        \" \"\n                    )\n                );\n            });\n            return _react2.default.createElement(\n                \"ul\",\n                { className: \"sugstrUl\" },\n                suggestorList\n            );\n        }\n    }, {\n        key: \"displayOpenSRP\",\n        value: function displayOpenSRP(searchedString) {\n            if (searchedString.length === 0) return;\n            var queryParams = '?q=' + encodeURIComponent(searchedString) + '&rf=' + encodeURIComponent('searchWidget');\n            this.textLoader();\n            var self = this;\n            (0, _SearchAction.fetchIntegratedSRPData)(searchedString).then(function (response) {\n                if (!(response.status === 200 && response && response.data && response.data.data && response.data.data.tabs)) {\n                    return;\n                }\n                var tabsData = response.data.data.tabs;\n                var landingPathname = void 0;\n                if (!Array.isArray(tabsData) || tabsData.length === 0) {\n                    landingPathname = \"/search\";\n                } else {\n                    landingPathname = tabsData[0].url;\n                }\n                self.prepareTrackingData({ 'typedKeyword': searchedString, 'searchedKeyword': searchedString, 'searchType': 'open',\n                    'landingUrl': landingPathname + queryParams });\n                var tupleData = { \"url\": landingPathname + queryParams, \"name\": searchedString };\n                self.updateRecentSearchesCookie(tupleData);\n                self.textLoader(true);\n                self.redirectToPWAPage(landingPathname + queryParams, { 'tabsData': { 'searchedKeyword': searchedString, 'tabsData': tabsData } });\n            }).catch(function (thrown) {\n                //console.log(thrown);\n            });\n        }\n    }, {\n        key: \"performSearch\",\n        value: function performSearch(searchedString) {\n            if (!searchedString) {\n                this.setState({ showErrorMessage: true });\n                return;\n            }\n            if (this.exactMatch) {\n                var tuple = this.exactMatch;\n                this.onClickSuggestion(tuple.data, tuple.bucket, 'autopick', tuple.keyword);\n            } else {\n                searchedString = searchedString.trim();\n                this.displayOpenSRP(searchedString);\n            }\n        }\n    }, {\n        key: \"render\",\n        value: function render() {\n            if (typeof window === 'undefined') {\n                return null;\n            }\n            if (this.props.isSearchLayerOpen === false) {\n                return null;\n            }\n            if (this.state.showLoader) return _reactDom2.default.createPortal(_react2.default.createElement(_Loader2.default, { show: this.state.showLoader }), document.getElementById('searchLayer'));\n            return _reactDom2.default.createPortal(_react2.default.createElement(\n                \"div\",\n                { id: \"searchPopup\", className: this.props.searchPage ? 'search-popup active' : 'search-popup ' + this.state.searchPopupAnimClass },\n                _react2.default.createElement(\"a\", { className: \"close-layer\", onClick: this.closeLayerPopup.bind(this, false) }),\n                _react2.default.createElement(\n                    \"div\",\n                    { className: \"searchContent\" },\n                    _react2.default.createElement(\n                        \"div\",\n                        { className: \"searchcolumn\" },\n                        _react2.default.createElement(\n                            \"div\",\n                            { className: \"sugstrbox\" },\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"inputDiv\" },\n                                this.state.resetActive ? _react2.default.createElement(\"div\", { className: \"input-cls\", onClick: this.onReset }) : '',\n                                _react2.default.createElement(\"input\", { type: \"text\", value: this.state.typedKeyword, id: \"searchInput\",\n                                    onChange: this.OnChangeSearchString, autoComplete: \"off\",\n                                    placeholder: \"Search Colleges, Courses, Exams, QnA, & Articles\", autoFocus: \"autofocus\",\n                                    className: \"desktop-input mainTuple\" + (this.state.disableInput ? ' disable-input ' : ''), tabIndex: \"1\" }),\n                                this.state.showErrorMessage ? _react2.default.createElement(\n                                    \"span\",\n                                    { className: \"srch-err-msg\" },\n                                    \"Please enter search term\"\n                                ) : '',\n                                !this.state.disableInput && !this.state.blurSuggestor ? _react2.default.createElement(\n                                    \"div\",\n                                    { className: \"showsuggestorBox\" },\n                                    this.generateHtml()\n                                ) : ''\n                            ),\n                            _react2.default.createElement(\n                                \"button\",\n                                { type: \"submit\", tabIndex: \"2\", onClick: this.onSearchPress, className: \"pwabtn pwaprime-btn\",\n                                    id: \"tabIndex2\" },\n                                this.state.searchButtonText,\n                                _react2.default.createElement(\n                                    \"span\",\n                                    null,\n                                    this.state.visibleDots\n                                )\n                            )\n                        ),\n                        _react2.default.createElement(\n                            \"div\",\n                            { className: \"recentBlock flex-row space-btwn\" + (this.state.showUserSearches ? \"\" : \" hide\") },\n                            _react2.default.createElement(\n                                \"div\",\n                                null,\n                                this.state.showUserSearches && this.generateRecentSearches(),\n                                this.state.showUserSearches && this.generateUserSearches()\n                            ),\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"sponsor-adcol\" },\n                                _react2.default.createElement(_DFPBannerAd.DFPBannerTempalte, { bannerPlace: \"searchLayer\" })\n                            )\n                        ),\n                        this.state.showAdvancedLoader && DesktopSearchLayer.generateAdvancedLoader(),\n                        this.state.showAdvancedSearchLayer && this.generateAdvancedSearch()\n                    )\n                )\n            ), document.getElementById('searchLayer'));\n        }\n    }, {\n        key: \"updateRecentSearchesCookie\",\n        value: function updateRecentSearchesCookie(tupleData) {\n            var bucket = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            var cookieObject = void 0;\n            cookieObject = { 'tupleData': tupleData, 'bucket': bucket };\n            var recentSearchesData = (0, _commonHelper.getCookie)('recentSearches') ? JSON.parse(atob((0, _commonHelper.getCookie)('recentSearches'))) : null;\n            if (!recentSearchesData || recentSearchesData.length <= 0) {\n                recentSearchesData = [];\n                recentSearchesData[0] = cookieObject;\n            } else {\n                var index = -1;\n                for (var curr = 0; curr < recentSearchesData.length; curr++) {\n                    if (!this.differentSearches(recentSearchesData[curr], cookieObject)) {\n                        index = curr;\n                        break;\n                    }\n                }\n                if (index === 0) {//do nothing\n                } else if (index === -1 || index === recentSearchesData.length - 1) {\n                    recentSearchesData.unshift(cookieObject);\n                    if (index === -1 && recentSearchesData.length > 5 || index > -1) recentSearchesData.pop();\n                } else {\n                    recentSearchesData.splice(index, 1);\n                    recentSearchesData.unshift(cookieObject);\n                }\n            }\n            var string = btoa(JSON.stringify(recentSearchesData));\n            (0, _commonHelper.setCookie)('recentSearches', string, 30);\n        }\n    }, {\n        key: \"differentSearches\",\n        value: function differentSearches(searchA, searchB) {\n            if (searchA.bucket !== searchB.bucket) {\n                return true;\n            }\n            if (searchA.bucket && searchA.tupleData.name === searchB.tupleData.name && searchA.tupleData.id === searchB.tupleData.id && searchA.tupleData.type === searchB.tupleData.type) {\n                return false;\n            }\n            return !(!searchA.bucket && searchA.tupleData.url === searchB.tupleData.url);\n        }\n    }, {\n        key: \"onOpenRecentSearch\",\n        value: function onOpenRecentSearch(tupleData) {\n            this.trackEvent('Recent Search', 'click');\n            this.updateRecentSearchesCookie(tupleData);\n            this.prepareTrackingData({ 'typedKeyword': tupleData.name, 'searchedKeyword': tupleData.name, 'searchType': 'open',\n                'isRecent': true, 'landingUrl': tupleData.url });\n            this.redirectToPWAPage(tupleData.url);\n        }\n    }, {\n        key: \"prepareTrackingData\",\n        value: function prepareTrackingData(dataObj) {\n            var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n            if (window.referrer) dataObj.referrerUrl = window.referrer;else if (document.referrer) {\n                dataObj.referrerUrl = document.referrer;\n            }\n            if (data) {\n                dataObj.searchedKeyword = data.name;\n                dataObj.selectedKeywordId = data.id;\n                dataObj.landingUrl = data.url;\n                dataObj.selectedKeywordType = data.type + (data.subType ? '-' + data.subType : '');\n            }\n            if (this.state.autosuggestorTuples) {\n                dataObj.numOfSuggestionsShown = this.state.autosuggestorTuples.length;\n            }\n            dataObj.device = 'desktop';\n            dataObj.isRecent = false;\n            (0, _SearchAction.trackSearch)(dataObj);\n        }\n    }, {\n        key: \"prepareAdvancedTrackingData\",\n        value: function prepareAdvancedTrackingData() {\n            var dataObj = {};\n            var data = this.collegeData;\n            if (!data) return;\n            if (window.referrer) {\n                dataObj.referrerUrl = window.referrer;\n            } else if (document.referrer) {\n                dataObj.referrerUrl = document.referrer;\n            }\n            dataObj.searchedKeyword = data.name;\n            dataObj.selectedKeywordId = data.id;\n            dataObj.selectedKeywordType = data.type;\n            if (this.state.streamValue) {\n                dataObj.selectedKeywordType += '-' + 'stream';\n                if (this.courseValue) {\n                    dataObj.selectedKeywordType += '-' + 'course';\n                }\n            }\n            dataObj.landingUrl = this.url;\n            dataObj.typedKeyword = this.advancedSearhTypedKeyword;\n            dataObj.isRecent = this.searchType === 'recentSearch';\n            dataObj.isTrending = this.searchType === 'trendingSearch';\n            dataObj.searchType = this.searchType === 'recentSearch' ? 'close' : this.searchType;\n            dataObj.searchType = this.searchType === 'trendingSearch' ? 'close' : this.searchType;\n            dataObj.numOfSuggestionsShown = this.numTuples;\n            dataObj.device = 'desktop';\n            (0, _SearchAction.trackSearch)(dataObj);\n        }\n    }, {\n        key: \"canUseDOM\",\n        value: function canUseDOM() {\n            return !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n        }\n    }, {\n        key: \"textLoader\",\n        value: function textLoader() {\n            var stopFlag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n            var dots = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 3;\n            var interval = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 800;\n\n            if (stopFlag) {\n                clearInterval(this.myInter);\n                this.setState({ visibleDots: '', searchButtonText: 'Search' });\n                return;\n            }\n            var self = this;\n            this.myInter = window.setInterval(function () {\n                var visibleDots = self.state.visibleDots;\n                if (visibleDots.length >= dots) visibleDots = '';else visibleDots += '.';\n                self.setState({ visibleDots: visibleDots, searchButtonText: 'Searching' });\n            }, interval);\n        }\n    }], [{\n        key: \"generateAdvancedLoader\",\n        value: function generateAdvancedLoader() {\n            return _react2.default.createElement(\n                \"div\",\n                { className: \"advance-col content-loader\" },\n                _react2.default.createElement(\n                    \"fieldset\",\n                    { className: \"subSection\" },\n                    _react2.default.createElement(\n                        \"legend\",\n                        { className: \"advanced-title\" },\n                        _react2.default.createElement(\n                            \"span\",\n                            { className: \"loader-line shimmer\", style: { 'top': '3px' } },\n                            \"Advanced Search (Optional)\"\n                        )\n                    ),\n                    _react2.default.createElement(\n                        \"div\",\n                        { className: \"refernce-txt\" },\n                        _react2.default.createElement(\"span\", { className: \"loader-line shimmer\" }),\n                        _react2.default.createElement(\"span\", { className: \"loader-line shimmer wdt85\" })\n                    ),\n                    _react2.default.createElement(\n                        \"div\",\n                        { className: \"dropdownflex flex-row space-btwn\" },\n                        _react2.default.createElement(\n                            \"a\",\n                            { href: \"javascript:void(0);\" },\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"flexdropdwnbox streamTuple\", style: { 'border': 'none' } },\n                                _react2.default.createElement(\"span\", { className: \"loader-line shimmer wdt85\" })\n                            )\n                        ),\n                        _react2.default.createElement(\n                            \"a\",\n                            { href: \"javascript:void(0);\" },\n                            _react2.default.createElement(\n                                \"div\",\n                                { className: \"flexdropdwnbox notallowed\", style: { 'border': 'none' } },\n                                _react2.default.createElement(\"span\", { className: \"loader-line shimmer wdt85\" })\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n\n    return DesktopSearchLayer;\n}(_react.Component);\n\nDesktopSearchLayer.defaultProps = {\n    isSearchLayerOpen: true\n};\n\nfunction mapStateToProps(state) {\n    return {\n        trendingData: state.trendingData,\n        config: state.config\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return (0, _redux.bindActionCreators)({ fetchTrendingSearchesData: _SearchAction.fetchTrendingSearchesData, dfpBannerConfig: _commonAction.dfpBannerConfig, clearDfpBannerConfig: _commonAction.clearDfpBannerConfig }, dispatch);\n}\n\nexports.default = (0, _reactRedux.connect)(mapStateToProps, mapDispatchToProps)((0, _reactRouterDom.withRouter)(DesktopSearchLayer));\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../node_modules/buffer/index.js */ \"./node_modules/buffer/index.js\").Buffer))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./application/modules/search/components/DesktopSearchLayer.js\n");

/***/ }),

/***/ "./application/modules/search/components/DesktopSearchWrapper.js":
/*!***********************************************************************!*\
  !*** ./application/modules/search/components/DesktopSearchWrapper.js ***!
  \***********************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _DesktopSearchLayer = __webpack_require__(/*! ./DesktopSearchLayer */ \"./application/modules/search/components/DesktopSearchLayer.js\");\n\nvar _DesktopSearchLayer2 = _interopRequireDefault(_DesktopSearchLayer);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar DesktopSearchWrapper = function (_React$Component) {\n    _inherits(DesktopSearchWrapper, _React$Component);\n\n    function DesktopSearchWrapper() {\n        _classCallCheck(this, DesktopSearchWrapper);\n\n        return _possibleConstructorReturn(this, (DesktopSearchWrapper.__proto__ || Object.getPrototypeOf(DesktopSearchWrapper)).apply(this, arguments));\n    }\n\n    _createClass(DesktopSearchWrapper, [{\n        key: 'render',\n        value: function render() {\n            return _react2.default.createElement(_DesktopSearchLayer2.default, _extends({}, this.props, { searchPage: true, isSearchLayerOpen: true }));\n        }\n    }]);\n\n    return DesktopSearchWrapper;\n}(_react2.default.Component);\n\nexports.default = DesktopSearchWrapper;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBsaWNhdGlvbi9tb2R1bGVzL3NlYXJjaC9jb21wb25lbnRzL0Rlc2t0b3BTZWFyY2hXcmFwcGVyLmpzP2I2ZTMiXSwibmFtZXMiOlsiRGVza3RvcFNlYXJjaFdyYXBwZXIiLCJwcm9wcyIsIlJlYWN0IiwiQ29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUE7Ozs7QUFFQTs7Ozs7Ozs7Ozs7O0lBRU1BLG9COzs7Ozs7Ozs7OztpQ0FDTTtBQUNKLG1CQUFPLDhCQUFDLDRCQUFELGVBQXdCLEtBQUtDLEtBQTdCLElBQW9DLFlBQWMsSUFBbEQsRUFBd0QsbUJBQXFCLElBQTdFLElBQVA7QUFDSDs7OztFQUg4QkMsZ0JBQU1DLFM7O2tCQU0xQkgsb0IiLCJmaWxlIjoiLi9hcHBsaWNhdGlvbi9tb2R1bGVzL3NlYXJjaC9jb21wb25lbnRzL0Rlc2t0b3BTZWFyY2hXcmFwcGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcblxuaW1wb3J0IERlc2t0b3BTZWFyY2hMYXllciBmcm9tICcuL0Rlc2t0b3BTZWFyY2hMYXllcic7XG5cbmNsYXNzIERlc2t0b3BTZWFyY2hXcmFwcGVyIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKXtcbiAgICAgICAgcmV0dXJuIDxEZXNrdG9wU2VhcmNoTGF5ZXIgey4uLnRoaXMucHJvcHN9IHNlYXJjaFBhZ2UgPSB7dHJ1ZX0gaXNTZWFyY2hMYXllck9wZW4gPSB7dHJ1ZX0vPlxuICAgIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgRGVza3RvcFNlYXJjaFdyYXBwZXI7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./application/modules/search/components/DesktopSearchWrapper.js\n");

/***/ }),

/***/ "./application/modules/search/config/SearchConfig.js":
/*!***********************************************************!*\
  !*** ./application/modules/search/config/SearchConfig.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _config = __webpack_require__(/*! ./../../../../config/config */ \"./config/config.js\");\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nmodule.exports = Object.freeze({\n    COLLEGE_BUCKET: 'College',\n    UNIV_BUCKET: 'University',\n    COURSE_BUCKET: 'Course',\n    NO_URL: 'NA',\n    TOPIC_BUCKET: 'Topic',\n    CLOSED_SEARCH_URL: (0, _config2.default)().SHIKSHA_HOME + '/msearch5/MsearchV3/pwaClosedSearchUrl',\n    OPEN_SEARCH_URL: (0, _config2.default)().SHIKSHA_HOME + '/msearch5/MsearchV3/pwaOpenSearchUrl',\n    BUCKET_IGN_LIST: ['Question', 'Article', 'Topic'],\n    typeUrlMapping: { 'stream': 's[]', 'base_course': 'bc[]', 'substream': 'sb[]', 'specialization': 'sp[]' },\n    filterCHPMapping: { 'stream': 's[]', 'base_course': 'bc[]', 'substream': 'sb[]', 'specialization': 'sp[]', 'credential': 'cr[]', 'delivery_method': 'dm[]', 'education_type': 'et[]' }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBsaWNhdGlvbi9tb2R1bGVzL3NlYXJjaC9jb25maWcvU2VhcmNoQ29uZmlnLmpzPzM1MjQiXSwibmFtZXMiOlsibW9kdWxlIiwiZXhwb3J0cyIsIk9iamVjdCIsImZyZWV6ZSIsIkNPTExFR0VfQlVDS0VUIiwiVU5JVl9CVUNLRVQiLCJDT1VSU0VfQlVDS0VUIiwiTk9fVVJMIiwiVE9QSUNfQlVDS0VUIiwiQ0xPU0VEX1NFQVJDSF9VUkwiLCJTSElLU0hBX0hPTUUiLCJPUEVOX1NFQVJDSF9VUkwiLCJCVUNLRVRfSUdOX0xJU1QiLCJ0eXBlVXJsTWFwcGluZyIsImZpbHRlckNIUE1hcHBpbmciXSwibWFwcGluZ3MiOiI7O0FBQUE7Ozs7OztBQUNBQSxPQUFPQyxPQUFQLEdBQWlCQyxPQUFPQyxNQUFQLENBQ2I7QUFDSUMsb0JBQXFCLFNBRHpCO0FBRUlDLGlCQUFxQixZQUZ6QjtBQUdJQyxtQkFBcUIsUUFIekI7QUFJSUMsWUFBcUIsSUFKekI7QUFLSUMsa0JBQXFCLE9BTHpCO0FBTUlDLHVCQUFxQix3QkFBU0MsWUFBVCxHQUF3Qix3Q0FOakQ7QUFPSUMscUJBQXFCLHdCQUFTRCxZQUFULEdBQXdCLHNDQVBqRDtBQVFJRSxxQkFBaUIsQ0FBQyxVQUFELEVBQWEsU0FBYixFQUF3QixPQUF4QixDQVJyQjtBQVNJQyxvQkFBaUIsRUFBQyxVQUFXLEtBQVosRUFBbUIsZUFBZSxNQUFsQyxFQUEwQyxhQUFjLE1BQXhELEVBQWdFLGtCQUFtQixNQUFuRixFQVRyQjtBQVVJQyxzQkFBbUIsRUFBQyxVQUFXLEtBQVosRUFBbUIsZUFBZSxNQUFsQyxFQUEwQyxhQUFjLE1BQXhELEVBQWdFLGtCQUFtQixNQUFuRixFQUEwRixjQUFhLE1BQXZHLEVBQStHLG1CQUFrQixNQUFqSSxFQUF3SSxrQkFBaUIsTUFBeko7QUFWdkIsQ0FEYSxDQUFqQiIsImZpbGUiOiIuL2FwcGxpY2F0aW9uL21vZHVsZXMvc2VhcmNoL2NvbmZpZy9TZWFyY2hDb25maWcuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY29uZmlnIGZyb20gJy4vLi4vLi4vLi4vLi4vY29uZmlnL2NvbmZpZyc7XG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5mcmVlemUoXG4gICAge1xuICAgICAgICBDT0xMRUdFX0JVQ0tFVDogICAgICAnQ29sbGVnZScsXG4gICAgICAgIFVOSVZfQlVDS0VUOiAgICAgICAgICdVbml2ZXJzaXR5JyxcbiAgICAgICAgQ09VUlNFX0JVQ0tFVCA6ICAgICAgJ0NvdXJzZScsXG4gICAgICAgIE5PX1VSTDogICAgICAgICAgICAgICdOQScsXG4gICAgICAgIFRPUElDX0JVQ0tFVDogICAgICAgICdUb3BpYycsXG4gICAgICAgIENMT1NFRF9TRUFSQ0hfVVJMOiAgIGNvbmZpZygpLlNISUtTSEFfSE9NRSArICcvbXNlYXJjaDUvTXNlYXJjaFYzL3B3YUNsb3NlZFNlYXJjaFVybCcsXG4gICAgICAgIE9QRU5fU0VBUkNIX1VSTDogICAgIGNvbmZpZygpLlNISUtTSEFfSE9NRSArICcvbXNlYXJjaDUvTXNlYXJjaFYzL3B3YU9wZW5TZWFyY2hVcmwnLFxuICAgICAgICBCVUNLRVRfSUdOX0xJU1Q6IFsnUXVlc3Rpb24nLCAnQXJ0aWNsZScsICdUb3BpYyddLFxuICAgICAgICB0eXBlVXJsTWFwcGluZyA6IHsnc3RyZWFtJyA6ICdzW10nLCAnYmFzZV9jb3Vyc2UnOiAnYmNbXScsICdzdWJzdHJlYW0nIDogJ3NiW10nLCAnc3BlY2lhbGl6YXRpb24nIDogJ3NwW10nfSxcbiAgICAgICAgZmlsdGVyQ0hQTWFwcGluZyA6IHsnc3RyZWFtJyA6ICdzW10nLCAnYmFzZV9jb3Vyc2UnOiAnYmNbXScsICdzdWJzdHJlYW0nIDogJ3NiW10nLCAnc3BlY2lhbGl6YXRpb24nIDogJ3NwW10nLCdjcmVkZW50aWFsJzonY3JbXScsICdkZWxpdmVyeV9tZXRob2QnOidkbVtdJywnZWR1Y2F0aW9uX3R5cGUnOidldFtdJ30sXG4gICAgfSk7Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./application/modules/search/config/SearchConfig.js\n");

/***/ }),

/***/ "./application/modules/search/utils/searchUtils.js":
/*!*********************************************************!*\
  !*** ./application/modules/search/utils/searchUtils.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.trackEvent = trackEvent;\nexports.highlightTypedKeyword = highlightTypedKeyword;\nexports.reformatLoadMoreCourses = reformatLoadMoreCourses;\n\nvar _AnalyticsTracking = __webpack_require__(/*! ../../reusable/utils/AnalyticsTracking */ \"./application/modules/reusable/utils/AnalyticsTracking.js\");\n\nvar _AnalyticsTracking2 = _interopRequireDefault(_AnalyticsTracking);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction trackEvent(actionLabel, label) {\n    _AnalyticsTracking2.default.event({ category: 'SEARCH_MOBILE', action: actionLabel, label: label });\n}\n\nfunction highlightTypedKeyword(result, keyword) {\n    var keywordLen = keyword.length;\n    if (keywordLen == 0) {\n        return;\n    }\n    keyword = keyword.toLowerCase();\n    var caseInsensitiveResultArray = result.split(' ');\n    var newString = '';\n    var keywordArray = keyword.split(' ');\n    var caseInsensitiveResultCount = [];\n    var stopWords = ['is', 'in', 'am', 'as', 'it'];\n    for (var i = 0; i < caseInsensitiveResultArray.length; i++) {\n        var caseInsensitiveResult = caseInsensitiveResultArray[i];\n        for (var j = 0; j < keywordArray.length; j++) {\n            var currKeyword = keywordArray[j];\n            if (currKeyword.indexOf('.') > -1) currKeyword = currKeyword.replace(/\\./g, '');\n            if (currKeyword.indexOf('\\'') > -1) currKeyword = currKeyword.replace(/'/g, '');\n            if (stopWords.indexOf(currKeyword) > -1) continue;\n            if (caseInsensitiveResultCount[i] && caseInsensitiveResultCount[i] > currKeyword.length) continue;\n            var matchIndex = caseInsensitiveResult.toLowerCase().indexOf(currKeyword);\n            if (matchIndex > -1) {\n                caseInsensitiveResultArray[i] = caseInsensitiveResult.substr(0, matchIndex) + '<b class=\"mainTuple\">' + caseInsensitiveResult.substr(matchIndex, currKeyword.length) + '</b>';\n                if (matchIndex + currKeyword.length <= caseInsensitiveResult.length - 1) {\n                    caseInsensitiveResultArray[i] += caseInsensitiveResult.substr(matchIndex + currKeyword.length);\n                }\n                caseInsensitiveResultCount[i] = currKeyword.length;\n            } else if (caseInsensitiveResult.indexOf('.') > -1 || caseInsensitiveResult.indexOf('\\'') > -1) {\n                var punLessResult = caseInsensitiveResult.toLowerCase();\n                if (punLessResult.indexOf('.') > -1) punLessResult = punLessResult.replace(/\\./g, '');\n                if (punLessResult.indexOf('\\'') > -1) punLessResult = punLessResult.replace(/'/g, '');\n                var matchIndexNew = punLessResult.indexOf(currKeyword);\n                if (matchIndexNew > -1) {\n                    caseInsensitiveResultArray[i] = getHighlightedString(caseInsensitiveResult, currKeyword);\n                    caseInsensitiveResultCount[i] = currKeyword.length;\n                }\n            }\n            /* while ((index = caseInsensitiveResult.indexOf(currKeyword, startIndex)) > -1) {\n                 newString += result.substr(startIndex, (index - startIndex)) + '<b class=\"mainTuple\">' + result.substr(index, keywordLen) + '</b>';\n                 startIndex = index + keywordLen;\n             }*/\n        }\n    }\n    for (var _i = 0; _i < caseInsensitiveResultArray.length - 1; _i++) {\n        newString += caseInsensitiveResultArray[_i] + ' ';\n    }\n    newString += caseInsensitiveResultArray[caseInsensitiveResultArray.length - 1];\n    return createHTMLObj(newString);\n}\n\nfunction createHTMLObj(html) {\n    return { __html: html };\n}\nfunction getHighlightedString(suggestorString, keyword) {\n    var start = -1,\n        end = -1,\n        notFound = false;\n    var lowerCaseSuggestorString = suggestorString.toLowerCase();\n    var suggestorLen = lowerCaseSuggestorString.length;\n    var keywordLen = keyword.length;\n    for (var i = 0; i <= suggestorLen - keywordLen; i++) {\n        if (lowerCaseSuggestorString[i] === '.' || lowerCaseSuggestorString[i] === '\\'') continue;\n        var index = i,\n            j = void 0;\n        for (j = 0; j < keywordLen; j++) {\n            if (index >= suggestorLen) {\n                notFound = true;\n                break;\n            }\n            if (lowerCaseSuggestorString[index] !== keyword[j]) {\n                break;\n            }\n            index++;\n            while (lowerCaseSuggestorString[index] === '.' || lowerCaseSuggestorString[index] === '\\'') {\n                index++;\n            }\n        }\n        if (j === keywordLen) {\n            start = i;\n            end = index;\n            break;\n        }\n        if (notFound) {\n            break;\n        }\n    }\n    if (start === -1 || end === -1) {\n        return suggestorString;\n    }\n    var updatedString = suggestorString.substring(0, start) + '<b class=\"mainTuple\">' + suggestorString.substring(start, end) + '</b>';\n    if (end < suggestorLen) updatedString += suggestorString.substring(end, suggestorLen);\n    return updatedString;\n}\n\nfunction reformatLoadMoreCourses(loadMoreCourses) {\n    var formattedLoadMoreCourses = {};\n    for (var index in loadMoreCourses) {\n        if (!loadMoreCourses.hasOwnProperty(index)) continue;\n        formattedLoadMoreCourses[loadMoreCourses[index].instituteId] = loadMoreCourses[index].courseIds;\n    }\n    return formattedLoadMoreCourses;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./application/modules/search/utils/searchUtils.js\n");

/***/ }),

/***/ "./application/utils/MathUtils.js":
/*!****************************************!*\
  !*** ./application/utils/MathUtils.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.round = round;\nexports.numberFormatter = numberFormatter;\nfunction round(value, precision) {\n    var multiplier = Math.pow(10, precision || 0);\n    return Math.round(value * multiplier) / multiplier;\n}\n\nfunction numberFormatter(number) {\n    var wholeNumber = number;\n    if (number <= 999) {\n        return number;\n    }\n    var power = 0;\n    var quotient = 1000;\n    var multipliers = [{ key: \"K\", value: 1000 }, { key: \"M\", value: Math.pow(10, 6) }, { key: \"B\", value: Math.pow(10, 9) }, { key: \"T\", value: Math.pow(10, 12) }, { key: \"Q\", value: Math.pow(10, 15) }];\n    while (Math.floor(number / quotient) > 0 && power < 6) {\n        number = Math.floor(number / quotient);\n        power++;\n    }\n    var numeral = round(wholeNumber / multipliers[power - 1].value, 1);\n    return numeral + multipliers[power - 1].key;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBsaWNhdGlvbi91dGlscy9NYXRoVXRpbHMuanM/MDdmMiJdLCJuYW1lcyI6WyJyb3VuZCIsIm51bWJlckZvcm1hdHRlciIsInZhbHVlIiwicHJlY2lzaW9uIiwibXVsdGlwbGllciIsIk1hdGgiLCJwb3ciLCJudW1iZXIiLCJ3aG9sZU51bWJlciIsInBvd2VyIiwicXVvdGllbnQiLCJtdWx0aXBsaWVycyIsImtleSIsImZsb29yIiwibnVtZXJhbCJdLCJtYXBwaW5ncyI6Ijs7Ozs7UUFDZ0JBLEssR0FBQUEsSztRQUtBQyxlLEdBQUFBLGU7QUFMVCxTQUFTRCxLQUFULENBQWVFLEtBQWYsRUFBc0JDLFNBQXRCLEVBQWlDO0FBQ3BDLFFBQUlDLGFBQWFDLEtBQUtDLEdBQUwsQ0FBUyxFQUFULEVBQWFILGFBQWEsQ0FBMUIsQ0FBakI7QUFDQSxXQUFPRSxLQUFLTCxLQUFMLENBQVdFLFFBQVFFLFVBQW5CLElBQWlDQSxVQUF4QztBQUNIOztBQUVNLFNBQVNILGVBQVQsQ0FBeUJNLE1BQXpCLEVBQWlDO0FBQ3BDLFFBQUlDLGNBQWNELE1BQWxCO0FBQ0EsUUFBR0EsVUFBVSxHQUFiLEVBQWlCO0FBQ2IsZUFBT0EsTUFBUDtBQUNIO0FBQ0QsUUFBSUUsUUFBUSxDQUFaO0FBQ0EsUUFBTUMsV0FBVyxJQUFqQjtBQUNBLFFBQU1DLGNBQWMsQ0FDaEIsRUFBQ0MsS0FBSyxHQUFOLEVBQVdWLE9BQU8sSUFBbEIsRUFEZ0IsRUFFaEIsRUFBQ1UsS0FBSyxHQUFOLEVBQVdWLE9BQU9HLEtBQUtDLEdBQUwsQ0FBUyxFQUFULEVBQWEsQ0FBYixDQUFsQixFQUZnQixFQUdoQixFQUFDTSxLQUFLLEdBQU4sRUFBV1YsT0FBT0csS0FBS0MsR0FBTCxDQUFTLEVBQVQsRUFBYSxDQUFiLENBQWxCLEVBSGdCLEVBSWhCLEVBQUNNLEtBQUssR0FBTixFQUFXVixPQUFPRyxLQUFLQyxHQUFMLENBQVMsRUFBVCxFQUFhLEVBQWIsQ0FBbEIsRUFKZ0IsRUFLaEIsRUFBQ00sS0FBSyxHQUFOLEVBQVdWLE9BQU9HLEtBQUtDLEdBQUwsQ0FBUyxFQUFULEVBQWEsRUFBYixDQUFsQixFQUxnQixDQUFwQjtBQU9BLFdBQU1ELEtBQUtRLEtBQUwsQ0FBV04sU0FBT0csUUFBbEIsSUFBOEIsQ0FBOUIsSUFBbUNELFFBQU0sQ0FBL0MsRUFBaUQ7QUFDN0NGLGlCQUFTRixLQUFLUSxLQUFMLENBQVdOLFNBQU9HLFFBQWxCLENBQVQ7QUFDQUQ7QUFDSDtBQUNELFFBQUlLLFVBQVVkLE1BQU1RLGNBQWFHLFlBQVlGLFFBQU0sQ0FBbEIsRUFBcUJQLEtBQXhDLEVBQWdELENBQWhELENBQWQ7QUFDQSxXQUFRWSxVQUFVSCxZQUFZRixRQUFNLENBQWxCLEVBQXFCRyxHQUF2QztBQUNIIiwiZmlsZSI6Ii4vYXBwbGljYXRpb24vdXRpbHMvTWF0aFV0aWxzLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5leHBvcnQgZnVuY3Rpb24gcm91bmQodmFsdWUsIHByZWNpc2lvbikge1xuICAgIGxldCBtdWx0aXBsaWVyID0gTWF0aC5wb3coMTAsIHByZWNpc2lvbiB8fCAwKTtcbiAgICByZXR1cm4gTWF0aC5yb3VuZCh2YWx1ZSAqIG11bHRpcGxpZXIpIC8gbXVsdGlwbGllcjtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG51bWJlckZvcm1hdHRlcihudW1iZXIpIHtcbiAgICBsZXQgd2hvbGVOdW1iZXIgPSBudW1iZXI7XG4gICAgaWYobnVtYmVyIDw9IDk5OSl7XG4gICAgICAgIHJldHVybiBudW1iZXI7XG4gICAgfVxuICAgIGxldCBwb3dlciA9IDA7XG4gICAgY29uc3QgcXVvdGllbnQgPSAxMDAwO1xuICAgIGNvbnN0IG11bHRpcGxpZXJzID0gW1xuICAgICAgICB7a2V5OiBcIktcIiwgdmFsdWU6IDEwMDB9LFxuICAgICAgICB7a2V5OiBcIk1cIiwgdmFsdWU6IE1hdGgucG93KDEwLCA2KX0sXG4gICAgICAgIHtrZXk6IFwiQlwiLCB2YWx1ZTogTWF0aC5wb3coMTAsIDkpfSxcbiAgICAgICAge2tleTogXCJUXCIsIHZhbHVlOiBNYXRoLnBvdygxMCwgMTIpfSxcbiAgICAgICAge2tleTogXCJRXCIsIHZhbHVlOiBNYXRoLnBvdygxMCwgMTUpfVxuICAgIF07XG4gICAgd2hpbGUoTWF0aC5mbG9vcihudW1iZXIvcXVvdGllbnQpID4gMCAmJiBwb3dlcjw2KXtcbiAgICAgICAgbnVtYmVyID0gTWF0aC5mbG9vcihudW1iZXIvcXVvdGllbnQpO1xuICAgICAgICBwb3dlcisrO1xuICAgIH1cbiAgICBsZXQgbnVtZXJhbCA9IHJvdW5kKHdob2xlTnVtYmVyLyhtdWx0aXBsaWVyc1twb3dlci0xXS52YWx1ZSksIDEpO1xuICAgIHJldHVybiAobnVtZXJhbCArIG11bHRpcGxpZXJzW3Bvd2VyLTFdLmtleSk7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./application/utils/MathUtils.js\n");

/***/ })

}]);