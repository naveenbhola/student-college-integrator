(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["desktopQNALayer"],{

/***/ "./application/modules/common/assets/anaLayer.css":
/*!********************************************************!*\
  !*** ./application/modules/common/assets/anaLayer.css ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBsaWNhdGlvbi9tb2R1bGVzL2NvbW1vbi9hc3NldHMvYW5hTGF5ZXIuY3NzP2U3ZjUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiLi9hcHBsaWNhdGlvbi9tb2R1bGVzL2NvbW1vbi9hc3NldHMvYW5hTGF5ZXIuY3NzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./application/modules/common/assets/anaLayer.css\n");

/***/ }),

/***/ "./application/modules/common/components/desktop/QNALayer.js":
/*!*******************************************************************!*\
  !*** ./application/modules/common/components/desktop/QNALayer.js ***!
  \*******************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRedux = __webpack_require__(/*! react-redux */ \"./node_modules/react-redux/es/index.js\");\n\n__webpack_require__(/*! ./../../assets/anaLayer.css */ \"./application/modules/common/assets/anaLayer.css\");\n\nvar _anaHelper = __webpack_require__(/*! ../../../../utils/anaHelper */ \"./application/utils/anaHelper.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar QNALayer = function (_Component) {\n  _inherits(QNALayer, _Component);\n\n  function QNALayer(props) {\n    _classCallCheck(this, QNALayer);\n\n    var _this = _possibleConstructorReturn(this, (QNALayer.__proto__ || Object.getPrototypeOf(QNALayer)).call(this, props));\n\n    _this.state = {\n      isLayerOpen: false\n    };\n    _this.closeLayer = _this.closeLayer.bind(_this);\n    return _this;\n  }\n\n  _createClass(QNALayer, [{\n    key: 'closeLayer',\n    value: function closeLayer() {\n      this.setState({ isLayerOpen: false });\n      this.props.closeModal();\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var initConfig = { postingForPage: this.props.postingForPage, postingType: this.props.postingType };\n      (0, _anaHelper.initANALayer)(initConfig);\n      if (this.props.isLayerOpen) {\n        this.setState({ isLayerOpen: true });\n      }\n      window.removedTagsFromAddMoreLayer = [];\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      if (this.state.isLayerOpen) {\n        (0, _anaHelper.bindElementsAndInitialize)(this.props.postingForType);\n        (0, _anaHelper.openQuestionPostingLayer)();\n      }\n    }\n  }, {\n    key: 'askCourseSelectionWrap',\n    value: function askCourseSelectionWrap(cId, cName, obj) {\n      (0, _anaHelper.askCourseSelection)(cId, cName);\n      (0, _anaHelper.showAskCoursesDropdown)();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var layer = null,\n          courseDropDownHtml = null;\n      if (this.props.courseViewFlag && this.props.instituteCourses.length > 0) {\n        var courseList = [];\n        for (var i = 0; i < this.props.instituteCourses.length; i++) {\n          if (this.props.instituteCourses[i]['course_id'] > 0) {\n            courseList.push(_react2.default.createElement(\n              'li',\n              { key: 'crs' + i, className: 'course-li' },\n              _react2.default.createElement(\n                'a',\n                { onClick: this.askCourseSelectionWrap.bind(this, this.props.instituteCourses[i]['course_id'], this.props.instituteCourses[i]['course_name']), 'data-id': this.props.instituteCourses[i]['course_id'] },\n                this.props.instituteCourses[i]['course_name']\n              )\n            ));\n          }\n        }\n        courseDropDownHtml = _react2.default.createElement(\n          _react2.default.Fragment,\n          null,\n          _react2.default.createElement(\n            'div',\n            { className: 'slct-box', id: 'courseSelectionTab' },\n            _react2.default.createElement('input', { type: 'text', id: 'askCourseSelected', placeholder: 'Select a course on which you want to ask this question', autoComplete: 'off' }),\n            _react2.default.createElement(\n              'div',\n              { className: 'box-dwn', id: 'ask_courses' },\n              _react2.default.createElement(\n                'ul',\n                { className: 'course-ul', id: 'cLst' },\n                _react2.default.createElement(\n                  'div',\n                  { id: 'courseSelectionTiny' },\n                  _react2.default.createElement(\n                    'div',\n                    { className: 'scrollbar' },\n                    _react2.default.createElement(\n                      'div',\n                      { className: 'track' },\n                      _react2.default.createElement(\n                        'div',\n                        { className: 'thumb' },\n                        _react2.default.createElement('div', { className: 'end' })\n                      )\n                    )\n                  ),\n                  _react2.default.createElement(\n                    'div',\n                    { className: 'viewport' },\n                    _react2.default.createElement(\n                      'div',\n                      { id: 'mainOvLst', className: 'overview list' },\n                      courseList\n                    )\n                  )\n                )\n              )\n            )\n          ),\n          _react2.default.createElement(\n            'div',\n            { style: { display: \"none\" }, id: 'cLst_error' },\n            _react2.default.createElement(\n              'p',\n              { className: 'err0r-msg' },\n              'Please select a course from drop down list.'\n            )\n          )\n        );\n      }\n      if (this.state.isLayerOpen == true) {\n        layer = _react2.default.createElement(\n          _react2.default.Fragment,\n          null,\n          _react2.default.createElement(\n            'div',\n            { className: 'an-layer an-layer-inner', id: 'an-layer' },\n            _react2.default.createElement(\n              'form',\n              { id: 'anaPostFormQues', action: '', acceptCharset: 'utf-8', method: 'post', noValidate: 'novalidate', name: 'anaPostFormQues' },\n              _react2.default.createElement(\n                'div',\n                { id: 'qsn-post', className: 'post-col' },\n                _react2.default.createElement(\n                  'div',\n                  { className: 'opacticy-col' },\n                  _react2.default.createElement('img', { border: '0', src: 'https://images.shiksha.ws/pwa/public/images/desktop/ShikshaMobileLoader.gif', id: 'loadingImageNew', alt: '', className: 'small-loader' })\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { className: 'post-qstn' },\n                  _react2.default.createElement(\n                    'h3',\n                    { className: 'post-h2' },\n                    this.props.qPostingTitle\n                  ),\n                  _react2.default.createElement(\n                    'p',\n                    { className: 'txt-count', id: 'qstn-input_counter_outer' },\n                    'Characters ',\n                    _react2.default.createElement(\n                      'span',\n                      { id: 'qstn-input_counter' },\n                      ' 0'\n                    ),\n                    '/140'\n                  ),\n                  _react2.default.createElement('textarea', { type: 'text', minLength: '20', maxLength: '140', name: 'question', placeholder: \"Type Your \" + this.props.postingForType, caption: 'Question', validate: 'validateStr', required: true, className: 'qstn-input', id: 'qstn-input' }),\n                  _react2.default.createElement(\n                    'div',\n                    { style: { display: 'none' } },\n                    _react2.default.createElement(\n                      'p',\n                      { className: 'err0r-msg', id: 'qstn-input_error' },\n                      'The Answer must contain atleast 20 characters.'\n                    )\n                  ),\n                  courseDropDownHtml,\n                  _react2.default.createElement('input', { type: 'hidden', id: 'instituteCoursesQP', name: 'instituteCoursesQP', value: this.props.courseIdQP }),\n                  _react2.default.createElement('input', { type: 'hidden', id: 'instituteIdQP', name: 'instituteIdQP', value: this.props.instituteId }),\n                  _react2.default.createElement('input', { type: 'hidden', id: 'responseActionTypeQP', name: 'responseActionTypeQP', value: this.props.responseAction })\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { id: 'more-qstns-posting', className: 'more-qstns' },\n                  _react2.default.createElement(\n                    'a',\n                    { id: 'lnk-add-more', className: 'h2-blue ', href: 'javascript:void(0);' },\n                    _react2.default.createElement('i', { className: 'before', id: 'plus-minus-icon', nextclass: 'after' }),\n                    'Add more details'\n                  ),\n                  _react2.default.createElement(\n                    'div',\n                    { id: 'more-ques-posting' },\n                    _react2.default.createElement(\n                      'p',\n                      { className: 'txt-count', id: 'more-input-posting_counter_outer' },\n                      'Characters ',\n                      _react2.default.createElement(\n                        'span',\n                        { className: '', id: 'more-input-posting_counter' },\n                        ' 0'\n                      ),\n                      '/300'\n                    ),\n                    _react2.default.createElement('textarea', { className: 'more-input', id: 'more-input-posting', minLength: '20', maxLength: '300', required: this.props.postingForType == \"discussion\" ? true : false, caption: 'Description', validate: 'validateStr', placeholder: 'Give Information like score, education background etc.' }),\n                    _react2.default.createElement(\n                      'div',\n                      { style: { display: 'none' } },\n                      _react2.default.createElement(\n                        'p',\n                        { className: 'err0r-msg', id: 'more-input-posting_error' },\n                        'The Answer must contain atleast 20 characters.'\n                      )\n                    )\n                  ),\n                  _react2.default.createElement(\n                    'div',\n                    { className: 'btns-col' },\n                    _react2.default.createElement(\n                      'span',\n                      { className: 'tag-note' },\n                      'Keep it short & simple. Type complete word. Avoid abusive language.'\n                    ),\n                    _react2.default.createElement(\n                      'span',\n                      { className: 'right-box' },\n                      _react2.default.createElement(\n                        'a',\n                        { className: 'exit-btn', href: 'javascript:void(0);', onClick: this.closeLayer, id: 'cancelButtonPosting' },\n                        'Cancel'\n                      ),\n                      _react2.default.createElement(\n                        'a',\n                        { className: 'prime-btn', href: 'javascript:void(0);', id: 'nextButtonPosting' },\n                        'Next'\n                      )\n                    ),\n                    _react2.default.createElement('p', { className: 'clr' })\n                  )\n                )\n              )\n            ),\n            _react2.default.createElement(\n              'div',\n              { id: 'qsn-prvw', className: 'post-col' },\n              _react2.default.createElement(\n                'div',\n                { className: 'opacticy-col' },\n                _react2.default.createElement('img', { border: '0', src: 'https://images.shiksha.ws/pwa/public/images/desktop/ShikshaMobileLoader.gif', id: 'loadingImageNew', className: 'small-loader' })\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'post-qstn' },\n                _react2.default.createElement(\n                  'h3',\n                  { className: 'post-h2 qdTitle-l2' },\n                  'Your  Question'\n                ),\n                _react2.default.createElement(\n                  'p',\n                  { className: 'qstn-title', id: 'qstn-title-posting' },\n                  _react2.default.createElement('span', null),\n                  _react2.default.createElement(\n                    'a',\n                    { href: 'javascript:void(0);', className: 'edit-qstn', id: 'edit-qstn' },\n                    'Edit'\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'more-qstns' },\n                _react2.default.createElement('div', { id: 'slctd-tags', className: 'tags-slctd' }),\n                _react2.default.createElement(\n                  'div',\n                  { className: 'btns-col' },\n                  _react2.default.createElement(\n                    'span',\n                    { className: 'tag-note' },\n                    'Add relevant tags to get quick responses.'\n                  ),\n                  _react2.default.createElement(\n                    'span',\n                    { className: 'right-box' },\n                    _react2.default.createElement(\n                      'a',\n                      { className: 'exit-btn', href: 'javascript:void(0);', onClick: this.closeLayer, id: 'cancelButtonSecondLayer' },\n                      'Cancel'\n                    ),\n                    _react2.default.createElement(\n                      'a',\n                      { className: 'prime-btn', href: 'javascript:void(0);', id: 'finalButtonPosting' },\n                      'Post'\n                    )\n                  ),\n                  _react2.default.createElement('p', { className: 'clr' })\n                ),\n                _react2.default.createElement(\n                  'div',\n                  { id: 'similar_ques_outer', className: 'similar_ques_outer' },\n                  _react2.default.createElement('br', null),\n                  _react2.default.createElement('br', null),\n                  _react2.default.createElement('br', null),\n                  _react2.default.createElement('img', { border: '0', src: 'https://images.shiksha.ws/pwa/public/images/desktop/ShikshaMobileLoader.gif', id: 'loadingImageNew', className: 'small-loader' })\n                )\n              ),\n              _react2.default.createElement('input', { type: 'hidden', id: 'tracking_keyid_ques', value: this.props.qtrackingPageKeyId }),\n              _react2.default.createElement('input', { type: 'hidden', id: 'tracking_keyid_disc', value: this.props.dtrackingPageKeyId }),\n              _react2.default.createElement('input', { type: 'hidden', id: 'entityId', value: this.props.entityId }),\n              _react2.default.createElement('input', { type: 'hidden', id: 'examResponseId', value: this.props.examResponseId }),\n              _react2.default.createElement('input', { type: 'hidden', id: 'tagEntityType', value: this.props.tagEntityType }),\n              _react2.default.createElement('input', { type: 'hidden', id: 'quesDiscKeyId', value: this.props.quesDiscKeyId })\n            ),\n            _react2.default.createElement('div', { id: 'addMoreTagsLayer' })\n          )\n        );\n      }\n      return layer;\n    }\n  }]);\n\n  return QNALayer;\n}(_react.Component);\n\nfunction mapStateToProps(store) {\n  return {\n    config: store.config\n  };\n}\nexports.default = (0, _reactRedux.connect)(mapStateToProps)(QNALayer);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./application/modules/common/components/desktop/QNALayer.js\n");

/***/ }),

/***/ "./application/utils/anaHelper.js":
/*!****************************************!*\
  !*** ./application/utils/anaHelper.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.initANALayer = initANALayer;\nexports.openQuestionPostingLayer = openQuestionPostingLayer;\nexports.handleQuestionFieldKeyUp = handleQuestionFieldKeyUp;\nexports.handleQuestionFieldFocus = handleQuestionFieldFocus;\nexports.handleQuestionDescFieldKeyPress = handleQuestionDescFieldKeyPress;\nexports.handleQuestionDescFieldKeyUp = handleQuestionDescFieldKeyUp;\nexports.onclickHandlerForAddLink = onclickHandlerForAddLink;\nexports.bindElementsAndInitialize = bindElementsAndInitialize;\nexports.showAskCoursesDropdown = showAskCoursesDropdown;\nexports.askCourseSelection = askCourseSelection;\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _commonHelper = __webpack_require__(/*! ./commonHelper */ \"./application/utils/commonHelper.js\");\n\nvar _anaValidationHelper = __webpack_require__(/*! ./anaValidationHelper */ \"./application/utils/anaValidationHelper.js\");\n\nvar _ApiCalls = __webpack_require__(/*! ./ApiCalls */ \"./application/utils/ApiCalls.js\");\n\nvar _config = __webpack_require__(/*! ./../../config/config */ \"./config/config.js\");\n\nvar _config2 = _interopRequireDefault(_config);\n\nvar _regnHelper = __webpack_require__(/*! ./regnHelper */ \"./application/utils/regnHelper.js\");\n\nvar _autosuggestorConfig = __webpack_require__(/*! ./autosuggestorConfig */ \"./application/utils/autosuggestorConfig.js\");\n\nvar _searchHelper = __webpack_require__(/*! ./searchHelper */ \"./application/utils/searchHelper.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar supportsKeys = false;\nvar whichCase = \"posting\";\nvar alreadyIntitialized = 0;\nvar typeForQPost = '',\n    actualType = '';\n//let removedTagsFromAddMoreLayer = [];\nvar params = {\n  titleTextField: \"qstn-input\",\n  descriptionTextField: \"more-input-posting\",\n  postingForPage: \"anaHomePage\",\n  postingType: \"default\",\n  courseField: \"instituteCoursesQP\",\n  instituteField: \"instituteIdQP\"\n};\n\nfunction initANALayer(extraParams) {\n  params = (0, _commonHelper.extend)(params, extraParams);\n  params.postingDomain = (0, _config2.default)().SHIKSHA_HOME;\n}\n\nfunction openQuestionPostingLayer() {\n  if (document.querySelector('#askCourseSelected') != null) {\n    document.querySelector('#askCourseSelected').value = '';\n  }\n  openLyeredQDPosting();\n}\n\nfunction openLyeredQDPosting(titleText, descriptionText) {\n  //document.querySelector(\"#tags-layer\").style.display = 'block';\n  //document.querySelector(\"#an-layer\").style.display = 'block';\n\n  //document.querySelector('html').style.overflow = 'hidden';\n  //document.querySelector('#tags-head-post-q').style.display = 'block';\n\n  if (typeof titleText != \"undefined\" && titleText != \"\") {\n    document.querySelector(\"#\" + params.titleTextField).value = titleText;\n  }\n\n  if (typeof descriptionText != \"undefined\" && descriptionText != \"\") {\n    document.querySelector(\"#\" + params.descriptionTextField).value = descriptionText;\n  }\n\n  setTimeout(function () {\n    document.getElementById(params.titleTextField).focus();\n    (0, _commonHelper.triggerEvent)(document.getElementById(params.titleTextField), 'keyup');\n    (0, _commonHelper.triggerEvent)(document.getElementById(params.descriptionTextField), 'keyup');\n  }, 100);\n}\n\nfunction handleQuestionFieldKeyUp(event) {\n  var thisObj = event.target;\n  autoGrowField(thisObj, 200);\n  textKey(thisObj);\n}\nfunction handleQuestionFieldFocus(type, event) {\n  typeForQPost = type;\n  document.querySelector(\"#more-qstns-posting\").style.display = 'block';\n  var descriptionText = document.querySelector(\"#\" + params.descriptionTextField).value.trim();\n\n  if (typeForQPost == \"discussion\") {\n    onclickHandlerForAddLink(null, 'normal', true);\n    document.querySelector(\"#plus-minus-icon\").style.display = 'none';\n    document.querySelector(\"#lnk-add-more\").style.paddingLeft = \"2px\";\n  } else if (descriptionText != \"\") {\n    onclickHandlerForAddLink(null, 'normal');\n    document.querySelector(\"#plus-minus-icon\").style.display = 'block';\n    document.querySelector(\"#lnk-add-more\").style.paddingLeft = \"20px\";\n  } else {\n    document.querySelector(\"#plus-minus-icon\").style.display = 'block';\n    document.querySelector(\"#lnk-add-more\").style.paddingLeft = \"20px\";\n  }\n}\n\nfunction handleQuestionDescFieldKeyPress(event) {\n  handleCharacterInTextField(event);\n}\n\nfunction handleQuestionDescFieldKeyUp(event) {\n  var thisObj = event.target;\n  autoGrowField(thisObj, 300);\n  textKey(thisObj);\n}\n\nfunction onclickHandlerForAddLink(event, state, isDirectCall) {\n  if (typeof isDirectCall == \"undefined\") {\n    isDirectCall = false;\n  }\n\n  if (typeForQPost == \"discussion\" && !isDirectCall) return;\n\n  if (typeof state == \"undefined\") {\n    state = \"toggle\";\n  }\n  var nextState = document.querySelector(\"#plus-minus-icon\").getAttribute('nextClass');\n  if (nextState == \"after\") {\n    document.querySelector(\"#\" + params.descriptionTextField).style.display = 'block';\n    document.querySelector(\"#more-ques-posting\").style.display = 'block';\n    document.querySelector(\"#plus-minus-icon\").classList.remove('before');\n    document.querySelector(\"#plus-minus-icon\").classList.add('after');\n    document.querySelector(\"#plus-minus-icon\").setAttribute('nextClass', 'before');\n  } else if (nextState == \"before\" && state == \"toggle\") {\n    document.querySelector(\"#more-ques-posting\").style.display = 'none';\n    document.querySelector(\"#plus-minus-icon\").classList.remove('after');\n    document.querySelector(\"#plus-minus-icon\").classList.add('before');\n    document.querySelector(\"#plus-minus-icon\").setAttribute('nextClass', 'after');\n  }\n}\n\nfunction bindElementsAndInitialize(pageType) {\n  document.querySelector(\"#\" + params.titleTextField).value = '';\n  document.querySelector(\"#\" + params.descriptionTextField).value = '';\n  document.querySelector('#nextButtonPosting').addEventListener('click', handleNextBtnClick);\n  if (pageType == \"discussion\") {\n    typeForQPost = \"discussion\";\n    actualType = \"discussion\";\n  } else {\n    typeForQPost = \"question\";\n    actualType = \"question\";\n  }\n  document.addEventListener('click', handleDocumentClick);\n\n  document.querySelector('#' + params.titleTextField).addEventListener('keyup', handleQuestionFieldKeyUp);\n  document.querySelector('#' + params.titleTextField).addEventListener('focus', handleQuestionFieldFocus(pageType));\n  document.querySelector('#more-input-posting').addEventListener('keyup', handleQuestionDescFieldKeyUp);\n  document.querySelector('#more-input-posting').addEventListener('keypress', handleQuestionDescFieldKeyPress);\n  document.querySelector('#lnk-add-more').addEventListener('click', onclickHandlerForAddLink);\n  document.querySelector('#cancelButtonSecondLayer').addEventListener('click', handleCancelButtonSecondLayer);\n  document.querySelector('#finalButtonPosting').addEventListener('click', handleFinalButtonPosting);\n  document.querySelector('#edit-qstn').addEventListener('click', editQuestionWhilePosting);\n\n  if (document.querySelector('#askCourseSelected') != null) {\n    document.querySelector('#askCourseSelected').addEventListener('focus', showAskCoursesDropdown);\n    document.querySelector('#askCourseSelected').addEventListener('keyup', inputSearchList);\n  }\n}\n\nfunction handleDocumentClick(e) {\n  if (e.target == document.querySelector(\"#askCourseSelected\")) {\n    return;\n  } else {\n    if (document.querySelector('#ask_courses') != null) {\n      document.querySelector('#ask_courses').style.display = 'none';\n      document.querySelector(\"#more-qstns-posting\").style.overflow = 'hidden';\n    }\n  }\n}\n\nfunction showAskCoursesDropdown() {\n  document.querySelector(\"#ask_courses\").style.display = 'block';\n  document.querySelector('#mainOvLst li').style.display = 'block';\n  if (document.querySelector('#ncf') != null) {\n    document.querySelector('#ncf').parentNode.removeChild(document.querySelector('#ncf'));\n  }\n  //updateTinyCourseSelection('courseSelectionTiny');\n  if (document.querySelector(\"#ask_courses\").style.display != 'none') {\n    document.querySelector('#more-qstns-posting').style.overflow = '';\n  } else {\n    document.querySelector(\"#more-qstns-posting\").style.overflow = 'hidden';\n  }\n}\n\nfunction updateTinyCourseSelection() {}\n\nfunction inputSearchList() {\n  var input = void 0,\n      filter = void 0,\n      ul = void 0,\n      li = void 0,\n      a = void 0,\n      i = void 0;\n  input = document.getElementById(\"askCourseSelected\");\n  filter = input.value.toUpperCase().trim();\n  ul = document.getElementById(\"cLst\");\n  li = ul.getElementsByTagName(\"li\");\n  document.querySelector('.box-dwn').style.display = 'block';\n  if (document.querySelector('#ncf') != null) {\n    document.querySelector('#ncf').parentNode.removeChild(document.querySelector('#ncf'));\n  }\n  for (i = 0; i < li.length; i++) {\n    a = li[i].getElementsByTagName(\"a\")[0];\n    if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {\n      li[i].style.display = \"\";\n    } else {\n      li[i].style.display = \"none\";\n    }\n  }\n  var courseCount = document.querySelectorAll('#cLst li').length;\n  var courseHidden = 0;\n  document.querySelectorAll('#cLst li').forEach(function (currObj) {\n    if (currObj.style.display == 'none') {\n      courseHidden++;\n    }\n  });\n  if (courseHidden == courseCount) {\n    var ncfNode = document.createElement(\"li\");\n    ncfNode.className = 'course-li';\n    ncfNode.id = 'ncf';\n    ncfNode.style.marginTop = '5px';\n    ncfNode.style.marginLeft = '9px';\n\n    var textNode = document.createTextNode(\"Sorry, no courses found.\");\n    ncfNode.appendChild(textNode);\n    document.querySelector('#mainOvLst').appendChild(ncfNode);\n  }\n}\n\nfunction askCourseSelection(courseId, courseName) {\n  document.querySelector('#instituteCoursesQP').value = courseId;\n  document.querySelector('#askCourseSelected').value = courseName;\n}\n\nfunction editQuestionWhilePosting() {\n  document.querySelector(\"#qsn-post\").style.display = 'block';\n  document.querySelector(\"#qsn-prvw\").style.display = 'none';\n}\n\nfunction handleFinalButtonPosting() {\n  var trackingPageKeyId = document.querySelector('#quesDiscKeyId').value;\n  var courseId = 0;\n  var entityId = 0;\n  var examResponseId = 0;\n  var tagEntityType = '';\n  var instituteId = 0;\n  var listingType = '',\n      actionType = '';\n\n  if (params.courseField != \"\" && document.querySelector(\"#\" + params.courseField) != null) {\n    courseId = document.querySelector(\"#\" + params.courseField).value;\n    actionType = document.querySelector('#responseActionTypeQP').value;\n  }\n  if (params.instituteField != '' && document.querySelector(\"#\" + params.instituteField) != null) {\n    instituteId = document.querySelector(\"#\" + params.instituteField).value;\n    listingType = 'institute';\n  }\n\n  if (document.querySelector('#entityId') != null && document.querySelector('#entityId').value != '') {\n    entityId = document.querySelector('#entityId').value.trim();\n  }\n  if (document.querySelector('#examResponseId') != null && document.querySelector('#examResponseId').value != '') {\n    examResponseId = document.querySelector('#examResponseId').value.trim();\n  }\n\n  if (document.querySelector('#tagEntityType') != null && document.querySelector('#tagEntityType').value != '') {\n    tagEntityType = document.querySelector('#tagEntityType').value.trim();\n  }\n  var isCreateResponse = courseId > 0 ? true : false;\n\n  var callbackData = {};\n\n  if (courseId == 0 && instituteId == 0) {\n    callbackData = { 'trackingPageKeyId': trackingPageKeyId, 'entityId': entityId, 'tagEntityType': tagEntityType, 'anaConfig': params, 'typeForQPost': typeForQPost, 'whichCase': whichCase };\n  } else {\n    callbackData = { 'trackingPageKeyId': trackingPageKeyId, 'courseId': courseId, 'instituteId': instituteId, 'listingType': listingType, 'actionType': actionType, 'isCreateResponse': isCreateResponse, 'cta': 'ask', 'anaConfig': params, 'typeForQPost': typeForQPost, 'whichCase': whichCase };\n  }\n  if (examResponseId > 0) {\n    callbackData = { 'trackingPageKeyId': trackingPageKeyId, 'entityId': entityId, 'tagEntityType': tagEntityType, 'anaConfig': params, 'typeForQPost': typeForQPost, 'whichCase': whichCase, isCreateResponse: true, 'listingId': examResponseId, listingType: 'exam', actionType: 'exam_ask_question' };\n  }\n  prepareRegistrationForm(callbackData, tagEntityType);\n}\n\nfunction prepareRegistrationForm(callbackData, formType) {\n  if (typeof formType == 'undefined' || formType == '') {\n    formType = 'default';\n  }\n  switch (formType) {\n    case 'Exams':\n      //examRegisterUserCallWrapAnA(\"finalButtonPostingCallback\",callbackData);\n      registerUserCallWrapAnA(\"finalButtonANAPostingCallback\", callbackData);\n      break;\n    default:\n      registerUserCallWrapAnA(\"finalButtonANAPostingCallback\", callbackData);\n  }\n}\n\nfunction registerUserCallWrapAnA(callbackFunction, callBackData) {\n  if (typeof registrationIdentifier === 'undefined') {\n    var _registrationIdentifier = '';\n  }\n  var listingType = 'course';\n  if (typeof callBackData.listingType !== 'undefined' && callBackData.listingType !== '') {\n    listingType = callBackData.listingType;\n  }\n\n  var formData = {\n    'trackingKeyId': callBackData.trackingPageKeyId,\n    'cta': callBackData.cta,\n    'callbackFunction': callbackFunction,\n    'callbackFunctionParams': callBackData\n  };\n\n  var createResponse = false;\n  if (typeof callBackData.isCreateResponse != \"undefined\" && callBackData.isCreateResponse == true) {\n    createResponse = true;\n  }\n\n  if (createResponse) {\n    if (listingType === 'exam') {\n      (0, _regnHelper.showResponseFormWrapper)(callBackData.listingId, callBackData.actionType, listingType, formData);\n    } else {\n      (0, _regnHelper.showResponseFormWrapper)(callBackData.courseId, callBackData.actionType, listingType, formData);\n    }\n  } else {\n    if (!(0, _commonHelper.isUserLoggedIn)() && (0, _commonHelper.getCookie)('user').trim() == '') {\n      //registrationForm.showRegistrationForm(formdata);\n      (0, _regnHelper.showRegistrationFormWrapper)(formData);\n    } else {\n      callBackData.userAlreadyLoggedIn = true;\n      window[callbackFunction]({}, callBackData);\n    }\n  }\n}\n\nfunction handleCancelButtonSecondLayer() {\n  //clickHandlerForCancelSecLayer();\n}\n\nfunction clickHandlerForCancelSecLayer() {\n  document.querySelector(\"#qsn-prvw\").style.display = 'none';\n\n  document.querySelector(\"#qsn-post\").style.display = 'block';\n  //document.querySelector(\"#tags-head-post-q\").style.display = 'block';\n  resetQuestionDiscPostngLayer();\n}\n\nfunction handleNextBtnClick() {\n  var result = true;\n  result = (0, _anaValidationHelper.validateAnAField)(document.querySelector(\"#\" + params.titleTextField));\n  if (result && window.getComputedStyle(document.querySelector('#more-ques-posting')).display != 'none') {\n    result = (0, _anaValidationHelper.validateAnAField)(document.querySelector(\"#\" + params.descriptionTextField));\n  }\n  if (result) {\n    var titleVal = document.querySelector(\"#\" + params.titleTextField).value.trim();\n    var descVal = document.querySelector(\"#\" + params.descriptionTextField).value.trim();\n\n    var caption = \"\";\n    if (typeForQPost == \"question\") {\n      caption = \"Question\";\n    } else {\n      caption = \"Discussion\";\n    }\n    var courseErrFlag = (0, _anaValidationHelper.validateAnAQuesCourse)();\n    if (document.querySelector('#askCourseSelected') != null && courseErrFlag == false) {\n      document.querySelector('#cLst_error').style.display = 'none';\n      return;\n    }\n\n    result = (0, _anaValidationHelper.validateAnAPostTextCustomValidations)(true, true, titleVal, caption);\n    if (result == true) {\n      result = (0, _anaValidationHelper.validateAnAPostTextCustomValidations)(true, true, descVal, caption);\n      if (result == true) {\n        document.querySelectorAll(\"#qsn-post .opacticy-col\").forEach(function (currObj) {\n          return currObj.style.display = 'block';\n        });\n\n        var title = titleVal;\n        var entityDesc = descVal;\n        var entityThreadId = 0; // Handle this in case of edit question\n        var action = whichCase;\n\n        if (action == \"editing\" || action == \"editTag\") {\n          entityThreadId = document.querySelector(\"#threadId\").value;\n        }\n\n        var type = typeForQPost;\n\n        document.querySelector(\"#qstn-title-posting span\").innerHTML = title;\n\n        // Tags Ajax\n        var ajaxURL = (0, _config2.default)().SHIKSHA_HOME + \"/messageBoard/AnAPostDesktop/postingIntermediatePageTagsData\";\n        var ajaxData = { 'entityType': type, 'entityText': title, 'entityDesc': entityDesc, 'editEntityId': entityThreadId, 'action': action };\n        var axiosConfig = {\n          headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n          withCredentials: false\n        };\n        (0, _ApiCalls.postRequest)(ajaxURL, ajaxData, 'desktop', axiosConfig).then(function (res) {\n          tagsForIntermediatePageSuccess(res.data);\n          if (action == \"posting\" && typeForQPost == 'question') {\n            // Similar Questions Ajax\n            document.querySelector(\"#similar_ques_outer\").style.display = 'block';\n            ajaxURL = (0, _config2.default)().SHIKSHA_HOME + \"/messageBoard/AnAPostDesktop/postingIntermediatePageSimilarQuestionsData\";\n            ajaxData = { 'entityType': type, 'entityText': title, 'shiksha_auth_token': document.querySelector('#shiksha_auth_token').value };\n            (0, _ApiCalls.postRequest)(ajaxURL, ajaxData, 'desktop', axiosConfig).then(function (similarRes) {\n              similarQuestionIntermediatePageSuccess(similarRes.data);\n            });\n          } else {\n            document.querySelector(\"#similar_ques_outer\").style.display = 'none';\n          }\n        });\n      } else {\n        var descErrDiv = document.querySelector(\"#\" + params.descriptionTextField + \"_error\");\n        descErrDiv.innerHTML = result;\n        descErrDiv.style.display = 'block';\n        descErrDiv.parentElement.style.display = 'block';\n      }\n    } else {\n      var textErrDiv = document.querySelector(\"#\" + params.titleTextField + \"_error\");\n      textErrDiv.innerHTML = result;\n      textErrDiv.style.display = 'block';\n      textErrDiv.parentElement.style.display = 'block';\n    }\n  }\n}\n\nfunction similarQuestionIntermediatePageSuccess(response) {\n  document.querySelector(\"#similar_ques_outer\").innerHTML = response;\n}\n\nfunction addMoreTagsLinkClick() {\n  document.querySelector(\"#posting-layer\").style.display = 'block';\n  //document.querySelector(\"#tags-layer\").style.display = 'block';\n\n  if (params.postingType == \"layer\") {\n    document.querySelector(\"#qsn-prvw\").style.display = 'none';\n    //document.querySelector(\"#tags-head-post-q\").style.display = 'none';\n  }\n  var tagHtml = \"\";\n  document.querySelectorAll(\"#slctd-tags .choosen-tag\").forEach(function (currObj) {\n    var status = currObj.getAttribute('status');\n    if (status == 'checked') {\n      var tagId = currObj.getAttribute('tagId');\n      var tagName = currObj.text;\n      var classificType = currObj.getAttribute('classification');\n      if (classificType == 'undefined' || classificType.trim() == '') {\n        classificType = 'manual';\n      }\n      tagHtml += \"<a class='choosen-tag' status='checked' href='javascript:void(0);' tagId ='\" + tagId + \"' classification='\" + classificType + \"'><span><i></i></span><span class='i-s'>\" + tagName + \"</span></a>\";\n    }\n  });\n  document.querySelector(\"#tags-selctd-links\").innerHTML = tagHtml;\n  setTimeout(function () {\n    document.querySelectorAll('#tags-selctd-links .choosen-tag').forEach(function (currObj) {\n      currObj.addEventListener('click', function (event) {\n        removedTagsFromAddMoreLayer.push(currObj.getAttribute('tagId'));\n        currObj.parentNode.removeChild(currObj);\n      });\n    });\n  }, 200);\n}\n\nfunction tagsForIntermediatePageSuccess(response) {\n  document.querySelector(\"#qsn-post\").style.display = 'none';\n  document.querySelector(\"#qsn-post .opacticy-col\").style.display = 'none';\n  document.querySelector(\"#qsn-prvw .opacticy-col\").style.display = 'none';\n\n  if (whichCase == 'editTag') {\n    document.querySelector(\"#edit-qstn\").style.display = 'block';\n  }\n  document.querySelector(\"#qsn-prvw\").style.display = 'block';\n  //document.querySelector(\"#tags-head-post-q\").style.display = 'block';\n  document.querySelector(\"#slctd-tags\").innerHTML = response;\n  attachClickHandlerToTags();\n  document.querySelector('#add-more-tag').addEventListener('click', addMoreTagsLinkClick);\n  if (alreadyIntitialized == 0) {\n    alreadyIntitialized = 1;\n    var ajaxURL = (0, _config2.default)().SHIKSHA_HOME + \"/messageBoard/AnAPostDesktop/fetchAddMoreLayer\";\n    var ajaxData = { 'entityType': typeForQPost };\n    var axiosConfig = {\n      headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n      withCredentials: false\n    };\n    (0, _ApiCalls.postRequest)(ajaxURL, ajaxData, 'desktop', axiosConfig).then(function (moreTagResponse) {\n      initializeAddMoreTags(moreTagResponse.data);\n    });\n  } else {\n    if (document.querySelector(\"#add_tags_layer_head\") != null) {\n      document.querySelector(\"#add_tags_layer_head\").innerHTML = typeForQPost.charAt(0).toUpperCase() + typeForQPost.slice(1);\n    }\n  }\n}\n\nfunction initializeAddMoreTags(response) {\n  document.querySelector('#addMoreTagsLayer').innerHTML = response;\n  document.querySelector('#cls-add-tags').addEventListener('click', closeAddMoreTagsLayer);\n  document.querySelector('#ext-add-tags').addEventListener('click', closeAddMoreTagsLayer);\n  if (params.postingType == 'default') {\n    document.querySelector('#tags-layer').addEventListener('click', closeAddMoreTagsLayer);\n  }\n  document.querySelector('#done-add-tags').addEventListener('click', doneAddTagsClick);\n  (0, _searchHelper.initializeAutoSuggestorInstanceSearchV2)(_autosuggestorConfig.tagAutosuggestorConfig.options);\n}\n\nfunction closeAddMoreTagsLayer() {\n  document.querySelector(\"#posting-layer\").style.display = 'none';\n\n  if (params.postingType == 'default') {\n    document.querySelector(\"#tags-layer\").style.display = 'none';\n  } else {\n    document.querySelector(\"#qsn-prvw\").style.display = 'block';\n    //document.querySelector(\"#tags-head-post-q\").style.display = 'block';\n  }\n\n  document.querySelector(\"#tagSearch_error\").style.display = 'none';\n  document.querySelector(\"#tagSearch\").value = \"\";\n}\n\nfunction doneAddTagsClick() {\n  closeAddMoreTagsLayer();\n  var SelectedTagsArray = [],\n      PreviousTagsArray = [];\n  var item = {};\n  document.querySelectorAll(\"#tags-selctd-links .choosen-tag\").forEach(function (currObj) {\n    item = {};\n    item['tagId'] = currObj.getAttribute('tagId');\n    item['tagName'] = currObj.textContent;\n    item['tagType'] = currObj.getAttribute('classification');\n    SelectedTagsArray.push(item);\n  });\n  document.querySelectorAll(\"#slctd-tags .choosen-tag\").forEach(function (currObj) {\n    return PreviousTagsArray.push(currObj.getAttribute('tagId'));\n  });\n  //UnSelect The removed Tags If Present\n  for (var i = 0; i < removedTagsFromAddMoreLayer.length; i++) {\n    obj = document.querySelector('#selected-tags .choosen-tag[tagId=\"' + removedTagsFromAddMoreLayer[i] + '\"]');\n    if (obj != null && obj.length != 0) {\n      obj.setAttribute('status', 'unchecked');\n      obj.classList.add('un-tag');\n    }\n  }\n\n  // Finally Select / Add the tags present\n  for (var i = 0; i < SelectedTagsArray.length; i++) {\n    var obj = document.querySelector('#selected-tags .choosen-tag[tagId=\"' + SelectedTagsArray[i].tagId + '\"]');\n    if (obj != null && obj.length != 0) {\n      obj.setAttribute('status', 'checked');\n      obj.classList.remove('un-tag');\n    } else {\n      var classification = \"manual\";\n\n      if (typeof SelectedTagsArray[i].tagType != 'undefined' && SelectedTagsArray[i].tagType.trim() != '') {\n        classification = SelectedTagsArray[i].tagType;\n      }\n      //tagHtml = \"<a class='choosen-tag' status='checked' href='javascript:void(0);' tagId ='\"+SelectedTagsArray[i].tagId+\"' classification='\"+classification+\"'><span><i></i></span><span class='i-s'>\"+SelectedTagsArray[i].tagName+\"</span></a>\";\n      var aNode = document.createElement(\"a\");\n      aNode.className = 'choosen-tag';\n      aNode.href = 'javascript:void(0);';\n      //aNode.status = 'checked';\n      //aNode.tagId= SelectedTagsArray[i].tagId;\n      //aNode.classification = classification;\n\n      var att = document.createAttribute(\"status\");\n      att.value = 'checked';\n      aNode.setAttributeNode(att);\n\n      att = document.createAttribute(\"tagId\");\n      att.value = SelectedTagsArray[i].tagId;\n      aNode.setAttributeNode(att);\n\n      att = document.createAttribute(\"classification\");\n      att.value = classification;\n      aNode.setAttributeNode(att);\n      aNode.innerHTML = \"<span><i></i></span><span class='i-s'>\" + SelectedTagsArray[i].tagName + \"</span>\";\n      //let textNode = document.createTextNode(\"\");\n      //aNode.appendChild(textNode);\n      document.querySelector(\"#selected-tags\").appendChild(aNode);\n    }\n  }\n  removedTagsFromAddMoreLayer = [];\n  attachClickHandlerToTags();\n}\n\nfunction attachClickHandlerToTags() {\n  if (document.querySelector(\"#slctd-tags .choosen-tag\") != null) {\n    document.querySelectorAll(\"#slctd-tags .choosen-tag\").forEach(function (currObj) {\n      return currObj.addEventListener('click', clickHandlerForTags);\n    });\n  }\n}\n\nfunction clickHandlerForTags(e) {\n  var object = e.currentTarget;\n  var status = object.getAttribute('status');\n  //GA track more code here\n  if (status == \"checked\") {\n    object.classList.add('un-tag');\n    object.setAttribute('status', 'unchecked');\n  } else if (status == \"unchecked\") {\n    object.classList.remove('un-tag');\n    object.setAttribute('status', 'checked');\n  }\n}\n\nfunction resetQuestionDiscPostngLayer() {\n  document.querySelector(\"#more-ques-posting\").style.display = 'none';\n  document.querySelector(\"#more-qstns-posting\").style.display = 'none';\n  document.querySelector(\"#plus-minus-icon\").classList.remove('after');\n  document.querySelector(\"#plus-minus-icon\").classList.add('before');\n  document.querySelector(\"#plus-minus-icon\").setAttribute('nextClass', 'after');\n\n  // Hide Error Messages\n  var textErrDiv = document.querySelector(\"#\" + params.titleTextField + \"_error\");\n  textErrDiv.style.display = 'none';\n  textErrDiv.parentElement.style.display = 'none';\n\n  var descErrDiv = document.querySelector(\"#\" + params.descriptionTextField + \"_error\");\n  descErrDiv.style.display = 'none';\n  descErrDiv.parentElement.style.display = 'none';\n\n  var textField = document.querySelector(\"#\" + params.titleTextField);\n  textField.value = \"\";\n  (0, _commonHelper.triggerEvent)(textField, 'keyup');\n\n  var descField = document.querySelector(\"#\" + params.descriptionTextField);\n  descField.value = \"\";\n  (0, _commonHelper.triggerEvent)(descField, 'keyup');\n\n  textField.style.height = '40px';\n  descField.style.height = '120px';\n\n  if (document.querySelector('#courseSelectionTab') != null) {\n    document.querySelector(\"#\" + params.courseField).value = '';\n  }\n\n  if (document.querySelector(\"#askCourseSelected\") != null) {\n    document.querySelector(\"#askCourseSelected\").value = '';\n  }\n\n  whichCase = \"posting\";\n  //document.querySelector(\"#tags-head-post-q span\").innerHTML = \"Ask your Question\";\n  document.querySelectorAll(\"#qsn-prvw .opacticy-col\").forEach(function (currObj) {\n    return currObj.style.display = 'none';\n  });\n  typeForQPost = actualType;\n  populateQuesDiscPostingLayer(actualType);\n}\n\nfunction closeAddMoreTagsForLayerPost() {\n  //document.querySelector(\"#tags-layer\").style.display = 'none';\n  //document.querySelector(\"#an-layer\").style.display = 'none';\n}\n\nfunction populateQuesDiscPostingLayer(type) {\n  if (type == undefined) {\n    type = \"question\";\n  }\n\n  if (type == \"discussion\") {\n    document.querySelector(\".qdTitle-l2\").innerHTML = \"Your Discussion\";\n    document.querySelector(\"#\" + params.titleTextField).setAttribute(\"placeholder\", \"Type Your Discussion\");\n    document.querySelector(\"#\" + params.titleTextField).setAttribute(\"caption\", \"Discussion\");\n\n    document.querySelector(\"#\" + params.titleTextField + \"_counter_outer\").innerHTML = \"Characters <span id='\" + params.titleTextField + \"_counter'>0</span>/100\";\n\n    setTimeout(function () {\n      document.querySelector(\"#\" + params.titleTextField).setAttribute(\"maxlength\", \"100\");\n      document.querySelector(\"#\" + params.titleTextField).setAttribute(\"minlength\", \"20\");\n      document.querySelector(\"#\" + params.descriptionTextField).setAttribute(\"maxlength\", \"2500\");\n      document.querySelector(\"#\" + params.descriptionTextField).setAttribute(\"minlength\", \"20\");\n    }, 100);\n\n    document.querySelector(\"#\" + params.descriptionTextField + \"_counter_outer\").innerHTML = \"Characters <span id='\" + params.descriptionTextField + \"_counter'>0</span>/2500\";\n\n    document.querySelector(\"#\" + params.descriptionTextField).setAttribute(\"caption\", \"Description\");\n  } else {\n    document.querySelector(\".qdTitle-l2\").innerHTML = \"Your Question\";\n    document.querySelector(\"#\" + params.titleTextField).setAttribute(\"placeholder\", \"Type Your Question\");\n    document.querySelector(\"#\" + params.titleTextField).setAttribute(\"caption\", \"Question\");\n\n    setTimeout(function () {\n      document.querySelector(\"#\" + params.titleTextField).setAttribute(\"maxlength\", \"140\");\n      document.querySelector(\"#\" + params.titleTextField).setAttribute(\"minlength\", \"20\");\n      document.querySelector(\"#\" + params.descriptionTextField).setAttribute(\"maxlength\", \"300\");\n      document.querySelector(\"#\" + params.descriptionTextField).setAttribute(\"minlength\", \"20\");\n    }, 100);\n    document.querySelector(\"#\" + params.titleTextField + \"_counter_outer\").innerHTML = \"Characters <span id='\" + params.titleTextField + \"_counter'>0</span>/140\";\n    document.querySelector(\"#\" + params.descriptionTextField + \"_counter_outer\").innerHTML = \"Characters <span id='\" + params.descriptionTextField + \"_counter'>0</span>/300\";\n    document.querySelector(\"#\" + params.descriptionTextField).setAttribute(\"caption\", \"Description\");\n  }\n}\n\nfunction handleCharacterInTextField(event, isEnterAllowed) {\n  var regex = new RegExp(\"^[- a-zA-Z0-9?=.*!@#$%^&*\\\"'>~`()-+_|:;?/,\\\\\\\\{}\\\\[\\\\]]+$\");\n  var actualEvent = event.which || event.keyCode || event.charCode;\n  //46 -> Delete, 36 -> Home, 35-> End,37-40 -> Arrow Keys 112-123 -> Function Keys , 9 - Tab\n\n  var defaultAllowedArray = [9, 46, 36, 35, 37, 38, 39, 40, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123];\n\n  if (defaultAllowedArray.indexOf(actualEvent) != -1) {\n    return true;\n  }\n\n  if (typeof isEnterAllowed != \"undefined\" && isEnterAllowed == true && actualEvent == 13) {\n    return true;\n  }\n  if (actualEvent != 8) {\n    var key = String.fromCharCode(event.charCode ? event.which : event.charCode);\n    if (!regex.test(key)) {\n      event.preventDefault();\n      return false;\n    }\n  }\n}\n\nfunction autoGrowField(f, maxHeight) {\n  if (f.style.overflowY != 'hidden') {\n    f.style.overflowY = 'hidden';\n  }\n  if (maxHeight == undefined) {\n    var maxHeight = 300;\n  }\n  var id = f;\n  var text = id && id.style ? id : document.getElementById(id);\n  if (!text) return;\n\n  var adjustedHeight = text.clientHeight;\n  if (!maxHeight || maxHeight >= adjustedHeight) {\n    adjustedHeight = Math.max(text.scrollHeight, adjustedHeight);\n    if (maxHeight) {\n      adjustedHeight = Math.min(maxHeight, adjustedHeight);\n    }\n    if (adjustedHeight >= maxHeight) {\n      f.style.overflowY = 'scroll';\n      text.style.height = adjustedHeight + \"px\";\n    } else if (adjustedHeight > text.clientHeight) {\n      text.style.height = adjustedHeight + \"px\";\n    }\n  }\n}\n\nfunction textKey(Object) {\n  supportsKeys = true;\n  calcCharLeft(Object);\n}\n\nfunction calcCharLeft(Object) {\n  var clipped = false;\n  var lenUSig = 0;\n  var maxLength = 1000;\n  try {\n    if (Object.getAttribute('maxlength')) {\n      maxLength = parseInt(Object.getAttribute('maxlength'));\n    }\n  } catch (e) {}\n  var charUsed;\n  var textBoxVal = Object.value.trim();\n  if (textBoxVal.length > maxLength) {\n    Object.value = textBoxVal.substring(0, maxLength);\n    charUsed = maxLength;\n    clipped = true;\n  } else {\n    charUsed = textBoxVal.length;\n  }\n  document.getElementById(Object.id + '_counter').innerHTML = charUsed;\n  return clipped;\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBsaWNhdGlvbi91dGlscy9hbmFIZWxwZXIuanM/NDA3OCJdLCJuYW1lcyI6WyJpbml0QU5BTGF5ZXIiLCJvcGVuUXVlc3Rpb25Qb3N0aW5nTGF5ZXIiLCJoYW5kbGVRdWVzdGlvbkZpZWxkS2V5VXAiLCJoYW5kbGVRdWVzdGlvbkZpZWxkRm9jdXMiLCJoYW5kbGVRdWVzdGlvbkRlc2NGaWVsZEtleVByZXNzIiwiaGFuZGxlUXVlc3Rpb25EZXNjRmllbGRLZXlVcCIsIm9uY2xpY2tIYW5kbGVyRm9yQWRkTGluayIsImJpbmRFbGVtZW50c0FuZEluaXRpYWxpemUiLCJzaG93QXNrQ291cnNlc0Ryb3Bkb3duIiwiYXNrQ291cnNlU2VsZWN0aW9uIiwic3VwcG9ydHNLZXlzIiwid2hpY2hDYXNlIiwiYWxyZWFkeUludGl0aWFsaXplZCIsInR5cGVGb3JRUG9zdCIsImFjdHVhbFR5cGUiLCJwYXJhbXMiLCJ0aXRsZVRleHRGaWVsZCIsImRlc2NyaXB0aW9uVGV4dEZpZWxkIiwicG9zdGluZ0ZvclBhZ2UiLCJwb3N0aW5nVHlwZSIsImNvdXJzZUZpZWxkIiwiaW5zdGl0dXRlRmllbGQiLCJleHRyYVBhcmFtcyIsInBvc3RpbmdEb21haW4iLCJTSElLU0hBX0hPTUUiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ2YWx1ZSIsIm9wZW5MeWVyZWRRRFBvc3RpbmciLCJ0aXRsZVRleHQiLCJkZXNjcmlwdGlvblRleHQiLCJzZXRUaW1lb3V0IiwiZ2V0RWxlbWVudEJ5SWQiLCJmb2N1cyIsImV2ZW50IiwidGhpc09iaiIsInRhcmdldCIsImF1dG9Hcm93RmllbGQiLCJ0ZXh0S2V5IiwidHlwZSIsInN0eWxlIiwiZGlzcGxheSIsInRyaW0iLCJwYWRkaW5nTGVmdCIsImhhbmRsZUNoYXJhY3RlckluVGV4dEZpZWxkIiwic3RhdGUiLCJpc0RpcmVjdENhbGwiLCJuZXh0U3RhdGUiLCJnZXRBdHRyaWJ1dGUiLCJjbGFzc0xpc3QiLCJyZW1vdmUiLCJhZGQiLCJzZXRBdHRyaWJ1dGUiLCJwYWdlVHlwZSIsImFkZEV2ZW50TGlzdGVuZXIiLCJoYW5kbGVOZXh0QnRuQ2xpY2siLCJoYW5kbGVEb2N1bWVudENsaWNrIiwiaGFuZGxlQ2FuY2VsQnV0dG9uU2Vjb25kTGF5ZXIiLCJoYW5kbGVGaW5hbEJ1dHRvblBvc3RpbmciLCJlZGl0UXVlc3Rpb25XaGlsZVBvc3RpbmciLCJpbnB1dFNlYXJjaExpc3QiLCJlIiwib3ZlcmZsb3ciLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJ1cGRhdGVUaW55Q291cnNlU2VsZWN0aW9uIiwiaW5wdXQiLCJmaWx0ZXIiLCJ1bCIsImxpIiwiYSIsImkiLCJ0b1VwcGVyQ2FzZSIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibGVuZ3RoIiwiaW5uZXJIVE1MIiwiaW5kZXhPZiIsImNvdXJzZUNvdW50IiwicXVlcnlTZWxlY3RvckFsbCIsImNvdXJzZUhpZGRlbiIsImZvckVhY2giLCJjdXJyT2JqIiwibmNmTm9kZSIsImNyZWF0ZUVsZW1lbnQiLCJjbGFzc05hbWUiLCJpZCIsIm1hcmdpblRvcCIsIm1hcmdpbkxlZnQiLCJ0ZXh0Tm9kZSIsImNyZWF0ZVRleHROb2RlIiwiYXBwZW5kQ2hpbGQiLCJjb3Vyc2VJZCIsImNvdXJzZU5hbWUiLCJ0cmFja2luZ1BhZ2VLZXlJZCIsImVudGl0eUlkIiwiZXhhbVJlc3BvbnNlSWQiLCJ0YWdFbnRpdHlUeXBlIiwiaW5zdGl0dXRlSWQiLCJsaXN0aW5nVHlwZSIsImFjdGlvblR5cGUiLCJpc0NyZWF0ZVJlc3BvbnNlIiwiY2FsbGJhY2tEYXRhIiwicHJlcGFyZVJlZ2lzdHJhdGlvbkZvcm0iLCJmb3JtVHlwZSIsInJlZ2lzdGVyVXNlckNhbGxXcmFwQW5BIiwiY2FsbGJhY2tGdW5jdGlvbiIsImNhbGxCYWNrRGF0YSIsInJlZ2lzdHJhdGlvbklkZW50aWZpZXIiLCJmb3JtRGF0YSIsImN0YSIsImNyZWF0ZVJlc3BvbnNlIiwibGlzdGluZ0lkIiwidXNlckFscmVhZHlMb2dnZWRJbiIsIndpbmRvdyIsImNsaWNrSGFuZGxlckZvckNhbmNlbFNlY0xheWVyIiwicmVzZXRRdWVzdGlvbkRpc2NQb3N0bmdMYXllciIsInJlc3VsdCIsImdldENvbXB1dGVkU3R5bGUiLCJ0aXRsZVZhbCIsImRlc2NWYWwiLCJjYXB0aW9uIiwiY291cnNlRXJyRmxhZyIsInRpdGxlIiwiZW50aXR5RGVzYyIsImVudGl0eVRocmVhZElkIiwiYWN0aW9uIiwiYWpheFVSTCIsImFqYXhEYXRhIiwiYXhpb3NDb25maWciLCJoZWFkZXJzIiwid2l0aENyZWRlbnRpYWxzIiwidGhlbiIsInJlcyIsInRhZ3NGb3JJbnRlcm1lZGlhdGVQYWdlU3VjY2VzcyIsImRhdGEiLCJzaW1pbGFyUmVzIiwic2ltaWxhclF1ZXN0aW9uSW50ZXJtZWRpYXRlUGFnZVN1Y2Nlc3MiLCJkZXNjRXJyRGl2IiwicGFyZW50RWxlbWVudCIsInRleHRFcnJEaXYiLCJyZXNwb25zZSIsImFkZE1vcmVUYWdzTGlua0NsaWNrIiwidGFnSHRtbCIsInN0YXR1cyIsInRhZ0lkIiwidGFnTmFtZSIsInRleHQiLCJjbGFzc2lmaWNUeXBlIiwicmVtb3ZlZFRhZ3NGcm9tQWRkTW9yZUxheWVyIiwicHVzaCIsImF0dGFjaENsaWNrSGFuZGxlclRvVGFncyIsIm1vcmVUYWdSZXNwb25zZSIsImluaXRpYWxpemVBZGRNb3JlVGFncyIsImNoYXJBdCIsInNsaWNlIiwiY2xvc2VBZGRNb3JlVGFnc0xheWVyIiwiZG9uZUFkZFRhZ3NDbGljayIsInRhZ0F1dG9zdWdnZXN0b3JDb25maWciLCJvcHRpb25zIiwiU2VsZWN0ZWRUYWdzQXJyYXkiLCJQcmV2aW91c1RhZ3NBcnJheSIsIml0ZW0iLCJ0ZXh0Q29udGVudCIsIm9iaiIsImNsYXNzaWZpY2F0aW9uIiwidGFnVHlwZSIsImFOb2RlIiwiaHJlZiIsImF0dCIsImNyZWF0ZUF0dHJpYnV0ZSIsInNldEF0dHJpYnV0ZU5vZGUiLCJjbGlja0hhbmRsZXJGb3JUYWdzIiwib2JqZWN0IiwiY3VycmVudFRhcmdldCIsInRleHRGaWVsZCIsImRlc2NGaWVsZCIsImhlaWdodCIsInBvcHVsYXRlUXVlc0Rpc2NQb3N0aW5nTGF5ZXIiLCJjbG9zZUFkZE1vcmVUYWdzRm9yTGF5ZXJQb3N0IiwidW5kZWZpbmVkIiwiaXNFbnRlckFsbG93ZWQiLCJyZWdleCIsIlJlZ0V4cCIsImFjdHVhbEV2ZW50Iiwid2hpY2giLCJrZXlDb2RlIiwiY2hhckNvZGUiLCJkZWZhdWx0QWxsb3dlZEFycmF5Iiwia2V5IiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwidGVzdCIsInByZXZlbnREZWZhdWx0IiwiZiIsIm1heEhlaWdodCIsIm92ZXJmbG93WSIsImFkanVzdGVkSGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwiTWF0aCIsIm1heCIsInNjcm9sbEhlaWdodCIsIm1pbiIsIk9iamVjdCIsImNhbGNDaGFyTGVmdCIsImNsaXBwZWQiLCJsZW5VU2lnIiwibWF4TGVuZ3RoIiwicGFyc2VJbnQiLCJjaGFyVXNlZCIsInRleHRCb3hWYWwiLCJzdWJzdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7O1FBdUJnQkEsWSxHQUFBQSxZO1FBS0FDLHdCLEdBQUFBLHdCO1FBNkJBQyx3QixHQUFBQSx3QjtRQUtBQyx3QixHQUFBQSx3QjtRQW1CQUMsK0IsR0FBQUEsK0I7UUFJQUMsNEIsR0FBQUEsNEI7UUFNQUMsd0IsR0FBQUEsd0I7UUEyQkFDLHlCLEdBQUFBLHlCO1FBdUNBQyxzQixHQUFBQSxzQjtRQXdEQUMsa0IsR0FBQUEsa0I7O0FBck5oQjs7OztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQSxJQUFJQyxlQUFlLEtBQW5CO0FBQ0EsSUFBSUMsWUFBWSxTQUFoQjtBQUNBLElBQUlDLHNCQUFzQixDQUExQjtBQUNBLElBQUlDLGVBQWUsRUFBbkI7QUFBQSxJQUF1QkMsYUFBYSxFQUFwQztBQUNBO0FBQ0EsSUFBSUMsU0FBUztBQUNHQyxrQkFBdUIsWUFEMUI7QUFFR0Msd0JBQXVCLG9CQUYxQjtBQUdH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QUFxQixDQUFyQixFQUF1QkosU0FBdkIsQ0FBZjtBQUNBRSxlQUFXRixTQUFYO0FBQ0FGLGNBQVUsSUFBVjtBQUNELEdBSkQsTUFJTztBQUNMSSxlQUFXQyxXQUFXdkksTUFBdEI7QUFDRDtBQUNEakQsV0FBU08sY0FBVCxDQUF3QjBLLE9BQU9ySCxFQUFQLEdBQVUsVUFBbEMsRUFBOENWLFNBQTlDLEdBQTBEcUksUUFBMUQ7QUFDQSxTQUFPSixPQUFQO0FBQ0QiLCJmaWxlIjoiLi9hcHBsaWNhdGlvbi91dGlscy9hbmFIZWxwZXIuanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHt0cmlnZ2VyRXZlbnQsIGV4dGVuZCwgdG9nZ2xlLCBpc1VzZXJMb2dnZWRJbiwgZ2V0Q29va2llfSBmcm9tICcuL2NvbW1vbkhlbHBlcic7XG5pbXBvcnQge3ZhbGlkYXRlQW5BRmllbGQsIHZhbGlkYXRlQW5BUG9zdFRleHRDdXN0b21WYWxpZGF0aW9ucywgdmFsaWRhdGVBbkFRdWVzQ291cnNlfSBmcm9tICcuL2FuYVZhbGlkYXRpb25IZWxwZXInO1xuaW1wb3J0IHtwb3N0UmVxdWVzdH0gZnJvbSAnLi9BcGlDYWxscyc7XG5pbXBvcnQgY29uZmlnIGZyb20gJy4vLi4vLi4vY29uZmlnL2NvbmZpZyc7XG5pbXBvcnQge3Nob3dSZXNwb25zZUZvcm1XcmFwcGVyLCBzaG93UmVnaXN0cmF0aW9uRm9ybVdyYXBwZXJ9IGZyb20gJy4vcmVnbkhlbHBlcic7XG5pbXBvcnQge3RhZ0F1dG9zdWdnZXN0b3JDb25maWd9IGZyb20gJy4vYXV0b3N1Z2dlc3RvckNvbmZpZyc7XG5pbXBvcnQge2luaXRpYWxpemVBdXRvU3VnZ2VzdG9ySW5zdGFuY2VTZWFyY2hWMn0gZnJvbSAnLi9zZWFyY2hIZWxwZXInO1xuXG5sZXQgc3VwcG9ydHNLZXlzID0gZmFsc2U7XG5sZXQgd2hpY2hDYXNlID0gXCJwb3N0aW5nXCI7XG5sZXQgYWxyZWFkeUludGl0aWFsaXplZCA9IDA7XG5sZXQgdHlwZUZvclFQb3N0ID0gJycsIGFjdHVhbFR5cGUgPSAnJztcbi8vbGV0IHJlbW92ZWRUYWdzRnJvbUFkZE1vcmVMYXllciA9IFtdO1xubGV0IHBhcmFtcyA9IHtcbiAgICAgICAgICAgICAgICB0aXRsZVRleHRGaWVsZCAgICAgICA6IFwicXN0bi1pbnB1dFwiICxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvblRleHRGaWVsZCA6IFwibW9yZS1pbnB1dC1wb3N0aW5nXCIsXG4gICAgICAgICAgICAgICAgcG9zdGluZ0ZvclBhZ2UgICAgICAgOiBcImFuYUhvbWVQYWdlXCIsXG4gICAgICAgICAgICAgICAgcG9zdGluZ1R5cGUgICAgICAgICAgOiBcImRlZmF1bHRcIixcbiAgICAgICAgICAgICAgICBjb3Vyc2VGaWVsZCAgICAgICAgICA6IFwiaW5zdGl0dXRlQ291cnNlc1FQXCIsXG4gICAgICAgICAgICAgICAgaW5zdGl0dXRlRmllbGQgICAgICAgOiBcImluc3RpdHV0ZUlkUVBcIlxuICAgICAgICAgICAgICB9O1xuXG5leHBvcnQgZnVuY3Rpb24gaW5pdEFOQUxheWVyKGV4dHJhUGFyYW1zKXtcbiAgcGFyYW1zID0gZXh0ZW5kKHBhcmFtcywgZXh0cmFQYXJhbXMpO1xuICBwYXJhbXMucG9zdGluZ0RvbWFpbiA9IGNvbmZpZygpLlNISUtTSEFfSE9NRTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5RdWVzdGlvblBvc3RpbmdMYXllcigpe1xuICBpZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXNrQ291cnNlU2VsZWN0ZWQnKSAhPSBudWxsKXtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXNrQ291cnNlU2VsZWN0ZWQnKS52YWx1ZSA9ICcnO1xuICB9XG4gIG9wZW5MeWVyZWRRRFBvc3RpbmcoKTtcbn1cblxuZnVuY3Rpb24gb3Blbkx5ZXJlZFFEUG9zdGluZyh0aXRsZVRleHQsIGRlc2NyaXB0aW9uVGV4dCl7XG4gIC8vZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YWdzLWxheWVyXCIpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAvL2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYW4tbGF5ZXJcIikuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cbiAgLy9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdodG1sJykuc3R5bGUub3ZlcmZsb3cgPSAnaGlkZGVuJztcbiAgLy9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFncy1oZWFkLXBvc3QtcScpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuXG4gIGlmKHR5cGVvZih0aXRsZVRleHQpICE9IFwidW5kZWZpbmVkXCIgJiYgdGl0bGVUZXh0ICE9IFwiXCIpe1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLnRpdGxlVGV4dEZpZWxkKS52YWx1ZSA9IHRpdGxlVGV4dDtcbiAgfVxuXG4gIGlmKHR5cGVvZihkZXNjcmlwdGlvblRleHQpICE9IFwidW5kZWZpbmVkXCIgJiYgZGVzY3JpcHRpb25UZXh0ICE9IFwiXCIpe1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLmRlc2NyaXB0aW9uVGV4dEZpZWxkKS52YWx1ZSA9IGRlc2NyaXB0aW9uVGV4dDtcbiAgfVxuXG4gIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwYXJhbXMudGl0bGVUZXh0RmllbGQpLmZvY3VzKCk7XG4gICAgdHJpZ2dlckV2ZW50KGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHBhcmFtcy50aXRsZVRleHRGaWVsZCksICdrZXl1cCcpO1xuICAgIHRyaWdnZXJFdmVudChkb2N1bWVudC5nZXRFbGVtZW50QnlJZChwYXJhbXMuZGVzY3JpcHRpb25UZXh0RmllbGQpLCAna2V5dXAnKTtcbiAgfSwxMDApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlUXVlc3Rpb25GaWVsZEtleVVwKGV2ZW50KXtcbiAgbGV0IHRoaXNPYmogPSBldmVudC50YXJnZXQ7XG4gIGF1dG9Hcm93RmllbGQodGhpc09iaiwyMDApO1xuICB0ZXh0S2V5KHRoaXNPYmopO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhhbmRsZVF1ZXN0aW9uRmllbGRGb2N1cyh0eXBlLCBldmVudCl7XG4gIHR5cGVGb3JRUG9zdCA9IHR5cGU7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbW9yZS1xc3Rucy1wb3N0aW5nXCIpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICB2YXIgZGVzY3JpcHRpb25UZXh0ICA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLmRlc2NyaXB0aW9uVGV4dEZpZWxkKS52YWx1ZS50cmltKCk7XG5cbiAgaWYodHlwZUZvclFQb3N0ID09IFwiZGlzY3Vzc2lvblwiKXtcbiAgICBvbmNsaWNrSGFuZGxlckZvckFkZExpbmsobnVsbCwgJ25vcm1hbCcsIHRydWUpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcGx1cy1taW51cy1pY29uXCIpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNsbmstYWRkLW1vcmVcIikuc3R5bGUucGFkZGluZ0xlZnQgPSBcIjJweFwiO1xuICB9ZWxzZSBpZihkZXNjcmlwdGlvblRleHQgIT0gXCJcIil7XG4gICAgb25jbGlja0hhbmRsZXJGb3JBZGRMaW5rKG51bGwsICdub3JtYWwnKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BsdXMtbWludXMtaWNvblwiKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2xuay1hZGQtbW9yZVwiKS5zdHlsZS5wYWRkaW5nTGVmdCA9IFwiMjBweFwiO1xuICB9ZWxzZXtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BsdXMtbWludXMtaWNvblwiKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2xuay1hZGQtbW9yZVwiKS5zdHlsZS5wYWRkaW5nTGVmdCA9IFwiMjBweFwiO1xuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBoYW5kbGVRdWVzdGlvbkRlc2NGaWVsZEtleVByZXNzKGV2ZW50KXtcbiAgaGFuZGxlQ2hhcmFjdGVySW5UZXh0RmllbGQoZXZlbnQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gaGFuZGxlUXVlc3Rpb25EZXNjRmllbGRLZXlVcChldmVudCl7XG4gIGxldCB0aGlzT2JqID0gZXZlbnQudGFyZ2V0O1xuICBhdXRvR3Jvd0ZpZWxkKHRoaXNPYmosMzAwKTtcbiAgdGV4dEtleSh0aGlzT2JqKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIG9uY2xpY2tIYW5kbGVyRm9yQWRkTGluayhldmVudCwgc3RhdGUsIGlzRGlyZWN0Q2FsbCl7XG4gIGlmKHR5cGVvZihpc0RpcmVjdENhbGwpID09IFwidW5kZWZpbmVkXCIpe1xuICAgIGlzRGlyZWN0Q2FsbCA9IGZhbHNlO1xuICB9XG5cbiAgaWYodHlwZUZvclFQb3N0ID09IFwiZGlzY3Vzc2lvblwiICYmICFpc0RpcmVjdENhbGwpXG4gICAgICByZXR1cm47XG5cbiAgaWYodHlwZW9mKHN0YXRlKSA9PSBcInVuZGVmaW5lZFwiKXtcbiAgICAgIHN0YXRlID0gXCJ0b2dnbGVcIjtcbiAgfVxuICBsZXQgbmV4dFN0YXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwbHVzLW1pbnVzLWljb25cIikuZ2V0QXR0cmlidXRlKCduZXh0Q2xhc3MnKTtcbiAgaWYobmV4dFN0YXRlID09IFwiYWZ0ZXJcIiApe1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLmRlc2NyaXB0aW9uVGV4dEZpZWxkKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vcmUtcXVlcy1wb3N0aW5nXCIpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcGx1cy1taW51cy1pY29uXCIpLmNsYXNzTGlzdC5yZW1vdmUoJ2JlZm9yZScpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcGx1cy1taW51cy1pY29uXCIpLmNsYXNzTGlzdC5hZGQoJ2FmdGVyJyk7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwbHVzLW1pbnVzLWljb25cIikuc2V0QXR0cmlidXRlKCduZXh0Q2xhc3MnLCAnYmVmb3JlJyk7XG4gIH1cbiAgZWxzZSBpZihuZXh0U3RhdGUgPT0gXCJiZWZvcmVcIiAmJiBzdGF0ZSA9PSBcInRvZ2dsZVwiKXtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vcmUtcXVlcy1wb3N0aW5nXCIpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwbHVzLW1pbnVzLWljb25cIikuY2xhc3NMaXN0LnJlbW92ZSgnYWZ0ZXInKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BsdXMtbWludXMtaWNvblwiKS5jbGFzc0xpc3QuYWRkKCdiZWZvcmUnKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BsdXMtbWludXMtaWNvblwiKS5zZXRBdHRyaWJ1dGUoJ25leHRDbGFzcycsJ2FmdGVyJyk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGJpbmRFbGVtZW50c0FuZEluaXRpYWxpemUocGFnZVR5cGUpe1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy50aXRsZVRleHRGaWVsZCkudmFsdWUgPSAnJztcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMuZGVzY3JpcHRpb25UZXh0RmllbGQpLnZhbHVlID0gJyc7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuZXh0QnV0dG9uUG9zdGluZycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlTmV4dEJ0bkNsaWNrKTtcbiAgaWYocGFnZVR5cGUgPT0gXCJkaXNjdXNzaW9uXCIpe1xuICAgIHR5cGVGb3JRUG9zdCA9IFwiZGlzY3Vzc2lvblwiO1xuICAgIGFjdHVhbFR5cGUgPSBcImRpc2N1c3Npb25cIjtcbiAgfWVsc2V7XG4gICAgdHlwZUZvclFQb3N0ID0gXCJxdWVzdGlvblwiO1xuICAgIGFjdHVhbFR5cGUgPSBcInF1ZXN0aW9uXCI7XG4gIH1cbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVEb2N1bWVudENsaWNrKTtcblxuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjJytwYXJhbXMudGl0bGVUZXh0RmllbGQpLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgaGFuZGxlUXVlc3Rpb25GaWVsZEtleVVwKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignIycrcGFyYW1zLnRpdGxlVGV4dEZpZWxkKS5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIGhhbmRsZVF1ZXN0aW9uRmllbGRGb2N1cyggcGFnZVR5cGUpKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI21vcmUtaW5wdXQtcG9zdGluZycpLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgaGFuZGxlUXVlc3Rpb25EZXNjRmllbGRLZXlVcCk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtb3JlLWlucHV0LXBvc3RpbmcnKS5hZGRFdmVudExpc3RlbmVyKCdrZXlwcmVzcycsIGhhbmRsZVF1ZXN0aW9uRGVzY0ZpZWxkS2V5UHJlc3MpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbG5rLWFkZC1tb3JlJykuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBvbmNsaWNrSGFuZGxlckZvckFkZExpbmspO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY2FuY2VsQnV0dG9uU2Vjb25kTGF5ZXInKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGhhbmRsZUNhbmNlbEJ1dHRvblNlY29uZExheWVyKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZpbmFsQnV0dG9uUG9zdGluZycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlRmluYWxCdXR0b25Qb3N0aW5nKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2VkaXQtcXN0bicpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZWRpdFF1ZXN0aW9uV2hpbGVQb3N0aW5nKTtcblxuICBpZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXNrQ291cnNlU2VsZWN0ZWQnKSAhPSBudWxsKXtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXNrQ291cnNlU2VsZWN0ZWQnKS5hZGRFdmVudExpc3RlbmVyKCdmb2N1cycsIHNob3dBc2tDb3Vyc2VzRHJvcGRvd24pO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhc2tDb3Vyc2VTZWxlY3RlZCcpLmFkZEV2ZW50TGlzdGVuZXIoJ2tleXVwJywgaW5wdXRTZWFyY2hMaXN0KTtcbiAgfVxufVxuXG5mdW5jdGlvbiBoYW5kbGVEb2N1bWVudENsaWNrKGUpe1xuICBpZihlLnRhcmdldCA9PSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Fza0NvdXJzZVNlbGVjdGVkXCIpKXtcbiAgICByZXR1cm47XG4gIH1lbHNle1xuICAgIGlmKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhc2tfY291cnNlcycpICE9IG51bGwpe1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Fza19jb3Vyc2VzJykuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbW9yZS1xc3Rucy1wb3N0aW5nXCIpLnN0eWxlLm92ZXJmbG93ID0gJ2hpZGRlbic7XG4gICAgfVxuICB9XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBzaG93QXNrQ291cnNlc0Ryb3Bkb3duKCl7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXNrX2NvdXJzZXNcIikuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtYWluT3ZMc3QgbGknKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgaWYoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI25jZicpICE9IG51bGwpe1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuY2YnKS5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNuY2YnKSk7XG4gIH1cbiAgLy91cGRhdGVUaW55Q291cnNlU2VsZWN0aW9uKCdjb3Vyc2VTZWxlY3Rpb25UaW55Jyk7XG4gIGlmKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXNrX2NvdXJzZXNcIikuc3R5bGUuZGlzcGxheSAhPSAnbm9uZScpe1xuICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtb3JlLXFzdG5zLXBvc3RpbmcnKS5zdHlsZS5vdmVyZmxvdyA9ICcnO1xuICB9ZWxzZXtcbiAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vcmUtcXN0bnMtcG9zdGluZ1wiKS5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xuICB9XG59XG5cbmZ1bmN0aW9uIHVwZGF0ZVRpbnlDb3Vyc2VTZWxlY3Rpb24oKXt9XG5cbmZ1bmN0aW9uIGlucHV0U2VhcmNoTGlzdCgpe1xuICBsZXQgaW5wdXQsIGZpbHRlciwgdWwsIGxpLCBhLCBpO1xuICBpbnB1dCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiYXNrQ291cnNlU2VsZWN0ZWRcIik7XG4gIGZpbHRlciA9IGlucHV0LnZhbHVlLnRvVXBwZXJDYXNlKCkudHJpbSgpO1xuICB1bCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY0xzdFwiKTtcbiAgbGkgPSB1bC5nZXRFbGVtZW50c0J5VGFnTmFtZShcImxpXCIpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuYm94LWR3bicpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICBpZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbmNmJykgIT0gbnVsbCl7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI25jZicpLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI25jZicpKTtcbiAgfVxuICBmb3IgKGkgPSAwOyBpIDwgbGkubGVuZ3RoOyBpKyspIHtcbiAgICAgIGEgPSBsaVtpXS5nZXRFbGVtZW50c0J5VGFnTmFtZShcImFcIilbMF07XG4gICAgICBpZiAoYS5pbm5lckhUTUwudG9VcHBlckNhc2UoKS5pbmRleE9mKGZpbHRlcikgPiAtMSkge1xuICAgICAgICAgIGxpW2ldLnN0eWxlLmRpc3BsYXkgPSBcIlwiO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBsaVtpXS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XG4gICAgICB9XG4gIH1cbiAgbGV0IGNvdXJzZUNvdW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnI2NMc3QgbGknKS5sZW5ndGg7XG4gIGxldCBjb3Vyc2VIaWRkZW4gPSAwO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjY0xzdCBsaScpLmZvckVhY2goXG4gICAgY3Vyck9iaiA9PiB7XG4gICAgICBpZihjdXJyT2JqLnN0eWxlLmRpc3BsYXkgPT0gJ25vbmUnKXtcbiAgICAgICAgY291cnNlSGlkZGVuKys7XG4gICAgICB9XG4gICAgfVxuICApO1xuICBpZihjb3Vyc2VIaWRkZW4gPT0gY291cnNlQ291bnQpe1xuICAgIGxldCBuY2ZOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImxpXCIpO1xuICAgIG5jZk5vZGUuY2xhc3NOYW1lID0gJ2NvdXJzZS1saSc7XG4gICAgbmNmTm9kZS5pZCA9ICduY2YnO1xuICAgIG5jZk5vZGUuc3R5bGUubWFyZ2luVG9wID0gJzVweCc7XG4gICAgbmNmTm9kZS5zdHlsZS5tYXJnaW5MZWZ0ID0gJzlweCc7XG5cbiAgICBsZXQgdGV4dE5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlNvcnJ5LCBubyBjb3Vyc2VzIGZvdW5kLlwiKTtcbiAgICBuY2ZOb2RlLmFwcGVuZENoaWxkKHRleHROb2RlKTtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbWFpbk92THN0JykuYXBwZW5kQ2hpbGQobmNmTm9kZSk7XG4gIH1cbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGFza0NvdXJzZVNlbGVjdGlvbihjb3Vyc2VJZCwgY291cnNlTmFtZSl7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNpbnN0aXR1dGVDb3Vyc2VzUVAnKS52YWx1ZSA9IGNvdXJzZUlkO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjYXNrQ291cnNlU2VsZWN0ZWQnKS52YWx1ZSA9IGNvdXJzZU5hbWU7XG59XG5cbmZ1bmN0aW9uIGVkaXRRdWVzdGlvbldoaWxlUG9zdGluZygpe1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Fzbi1wb3N0XCIpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Fzbi1wcnZ3XCIpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUZpbmFsQnV0dG9uUG9zdGluZygpe1xuICBsZXQgdHJhY2tpbmdQYWdlS2V5SWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcXVlc0Rpc2NLZXlJZCcpLnZhbHVlO1xuICBsZXQgY291cnNlSWQgPSAwO1xuICBsZXQgZW50aXR5SWQgICA9IDA7XG4gIGxldCBleGFtUmVzcG9uc2VJZCA9IDA7XG4gIGxldCB0YWdFbnRpdHlUeXBlID0gJyc7XG4gIGxldCBpbnN0aXR1dGVJZCA9IDA7XG4gIGxldCBsaXN0aW5nVHlwZSA9ICcnLCBhY3Rpb25UeXBlID0gJyc7XG5cbiAgaWYocGFyYW1zLmNvdXJzZUZpZWxkICE9IFwiXCIgJiYgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMuY291cnNlRmllbGQpICE9IG51bGwpe1xuICAgIGNvdXJzZUlkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMuY291cnNlRmllbGQpLnZhbHVlO1xuICAgIGFjdGlvblR5cGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcmVzcG9uc2VBY3Rpb25UeXBlUVAnKS52YWx1ZTtcbiAgfVxuICBpZihwYXJhbXMuaW5zdGl0dXRlRmllbGQgIT0gJycgJiYgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMuaW5zdGl0dXRlRmllbGQpICE9IG51bGwpe1xuICAgIGluc3RpdHV0ZUlkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMuaW5zdGl0dXRlRmllbGQpLnZhbHVlO1xuICAgIGxpc3RpbmdUeXBlID0gJ2luc3RpdHV0ZSc7XG4gIH1cblxuICBpZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZW50aXR5SWQnKSAhPSBudWxsICYmIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlbnRpdHlJZCcpLnZhbHVlICE9ICcnKXtcbiAgICBlbnRpdHlJZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNlbnRpdHlJZCcpLnZhbHVlLnRyaW0oKTtcbiAgfVxuICBpZihkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZXhhbVJlc3BvbnNlSWQnKSAhPSBudWxsICYmIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNleGFtUmVzcG9uc2VJZCcpLnZhbHVlICE9ICcnKXtcbiAgICBleGFtUmVzcG9uc2VJZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNleGFtUmVzcG9uc2VJZCcpLnZhbHVlLnRyaW0oKTtcbiAgfVxuXG4gIGlmKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YWdFbnRpdHlUeXBlJykgIT0gbnVsbCAmJiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGFnRW50aXR5VHlwZScpLnZhbHVlIT0nJyl7XG4gICAgdGFnRW50aXR5VHlwZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0YWdFbnRpdHlUeXBlJykudmFsdWUudHJpbSgpO1xuICB9XG4gIGxldCBpc0NyZWF0ZVJlc3BvbnNlID0gKGNvdXJzZUlkPjApP3RydWU6ZmFsc2U7XG5cbiAgbGV0IGNhbGxiYWNrRGF0YSA9IHt9O1xuXG4gIGlmKGNvdXJzZUlkID09IDAgJiYgaW5zdGl0dXRlSWQgPT0gMCl7XG4gICAgICBjYWxsYmFja0RhdGEgPSAgeyd0cmFja2luZ1BhZ2VLZXlJZCc6dHJhY2tpbmdQYWdlS2V5SWQsICdlbnRpdHlJZCc6ZW50aXR5SWQsICd0YWdFbnRpdHlUeXBlJzp0YWdFbnRpdHlUeXBlLCAnYW5hQ29uZmlnJzpwYXJhbXMsICd0eXBlRm9yUVBvc3QnOnR5cGVGb3JRUG9zdCwgJ3doaWNoQ2FzZSc6d2hpY2hDYXNlfTtcbiAgfWVsc2V7XG4gICAgICBjYWxsYmFja0RhdGEgPSB7J3RyYWNraW5nUGFnZUtleUlkJzp0cmFja2luZ1BhZ2VLZXlJZCwgJ2NvdXJzZUlkJyA6IGNvdXJzZUlkICwnaW5zdGl0dXRlSWQnOiBpbnN0aXR1dGVJZCAsICdsaXN0aW5nVHlwZSc6bGlzdGluZ1R5cGUsICdhY3Rpb25UeXBlJyA6IGFjdGlvblR5cGUsICdpc0NyZWF0ZVJlc3BvbnNlJzppc0NyZWF0ZVJlc3BvbnNlLCAnY3RhJzonYXNrJywgJ2FuYUNvbmZpZyc6cGFyYW1zLCAndHlwZUZvclFQb3N0Jzp0eXBlRm9yUVBvc3QsICd3aGljaENhc2UnOndoaWNoQ2FzZX07XG4gIH1cbiAgaWYoZXhhbVJlc3BvbnNlSWQgPiAwKXtcbiAgICBjYWxsYmFja0RhdGEgPSAgeyd0cmFja2luZ1BhZ2VLZXlJZCc6dHJhY2tpbmdQYWdlS2V5SWQsICdlbnRpdHlJZCc6ZW50aXR5SWQsICd0YWdFbnRpdHlUeXBlJzp0YWdFbnRpdHlUeXBlLCAnYW5hQ29uZmlnJzpwYXJhbXMsICd0eXBlRm9yUVBvc3QnOnR5cGVGb3JRUG9zdCwgJ3doaWNoQ2FzZSc6d2hpY2hDYXNlLCBpc0NyZWF0ZVJlc3BvbnNlIDogdHJ1ZSwgJ2xpc3RpbmdJZCcgOiBleGFtUmVzcG9uc2VJZCwgbGlzdGluZ1R5cGUgOiAnZXhhbScsIGFjdGlvblR5cGU6J2V4YW1fYXNrX3F1ZXN0aW9uJ307XG4gIH1cbiAgcHJlcGFyZVJlZ2lzdHJhdGlvbkZvcm0oY2FsbGJhY2tEYXRhLCB0YWdFbnRpdHlUeXBlKTtcbn1cblxuZnVuY3Rpb24gcHJlcGFyZVJlZ2lzdHJhdGlvbkZvcm0oY2FsbGJhY2tEYXRhLCBmb3JtVHlwZSl7XG4gIGlmKHR5cGVvZihmb3JtVHlwZSkgPT0gJ3VuZGVmaW5lZCcgfHwgZm9ybVR5cGUgPT0gJycpe1xuICAgIGZvcm1UeXBlID0gJ2RlZmF1bHQnO1xuICB9XG4gIHN3aXRjaChmb3JtVHlwZSl7XG4gICAgY2FzZSAnRXhhbXMnOlxuICAgICAgLy9leGFtUmVnaXN0ZXJVc2VyQ2FsbFdyYXBBbkEoXCJmaW5hbEJ1dHRvblBvc3RpbmdDYWxsYmFja1wiLGNhbGxiYWNrRGF0YSk7XG4gICAgICByZWdpc3RlclVzZXJDYWxsV3JhcEFuQShcImZpbmFsQnV0dG9uQU5BUG9zdGluZ0NhbGxiYWNrXCIsIGNhbGxiYWNrRGF0YSk7XG4gICAgICBicmVhaztcbiAgICBkZWZhdWx0OlxuICAgICAgcmVnaXN0ZXJVc2VyQ2FsbFdyYXBBbkEoXCJmaW5hbEJ1dHRvbkFOQVBvc3RpbmdDYWxsYmFja1wiLCBjYWxsYmFja0RhdGEpO1xuICB9XG59XG5cbmZ1bmN0aW9uIHJlZ2lzdGVyVXNlckNhbGxXcmFwQW5BKGNhbGxiYWNrRnVuY3Rpb24sIGNhbGxCYWNrRGF0YSl7XG4gIGlmKHR5cGVvZiByZWdpc3RyYXRpb25JZGVudGlmaWVyID09PSAndW5kZWZpbmVkJyl7XG5cdCAgICBsZXQgcmVnaXN0cmF0aW9uSWRlbnRpZmllciA9ICcnO1xuXHR9XG4gIGxldCBsaXN0aW5nVHlwZSA9ICdjb3Vyc2UnO1xuICBpZih0eXBlb2YgY2FsbEJhY2tEYXRhLmxpc3RpbmdUeXBlICE9PSAndW5kZWZpbmVkJyAmJiBjYWxsQmFja0RhdGEubGlzdGluZ1R5cGUgIT09ICcnKXtcbiAgICBsaXN0aW5nVHlwZSA9IGNhbGxCYWNrRGF0YS5saXN0aW5nVHlwZTtcbiAgfVxuXG4gIGxldCBmb3JtRGF0YSA9IHtcbiAgICAndHJhY2tpbmdLZXlJZCc6IGNhbGxCYWNrRGF0YS50cmFja2luZ1BhZ2VLZXlJZCxcbiAgICAnY3RhJzpjYWxsQmFja0RhdGEuY3RhLFxuICAgICdjYWxsYmFja0Z1bmN0aW9uJzogY2FsbGJhY2tGdW5jdGlvbixcbiAgICAnY2FsbGJhY2tGdW5jdGlvblBhcmFtcyc6Y2FsbEJhY2tEYXRhXG4gIH07XG5cbiAgbGV0IGNyZWF0ZVJlc3BvbnNlID0gZmFsc2U7XG4gIGlmKHR5cGVvZihjYWxsQmFja0RhdGEuaXNDcmVhdGVSZXNwb25zZSkgIT0gXCJ1bmRlZmluZWRcIiAmJiBjYWxsQmFja0RhdGEuaXNDcmVhdGVSZXNwb25zZSA9PSB0cnVlKXtcbiAgXHRjcmVhdGVSZXNwb25zZSA9IHRydWU7XG4gIH1cblxuICBpZihjcmVhdGVSZXNwb25zZSl7XG4gICAgaWYobGlzdGluZ1R5cGUgPT09ICdleGFtJyl7XG4gICAgICBzaG93UmVzcG9uc2VGb3JtV3JhcHBlcihjYWxsQmFja0RhdGEubGlzdGluZ0lkLCBjYWxsQmFja0RhdGEuYWN0aW9uVHlwZSwgbGlzdGluZ1R5cGUsIGZvcm1EYXRhKTtcbiAgICB9ZWxzZXtcbiAgICAgIHNob3dSZXNwb25zZUZvcm1XcmFwcGVyKGNhbGxCYWNrRGF0YS5jb3Vyc2VJZCwgY2FsbEJhY2tEYXRhLmFjdGlvblR5cGUsIGxpc3RpbmdUeXBlLCBmb3JtRGF0YSk7XG4gICAgfVxuICB9ZWxzZXtcbiAgICBpZighaXNVc2VyTG9nZ2VkSW4oKSAmJiBnZXRDb29raWUoJ3VzZXInKS50cmltKCkgPT0gJycpe1xuICBcdFx0Ly9yZWdpc3RyYXRpb25Gb3JtLnNob3dSZWdpc3RyYXRpb25Gb3JtKGZvcm1kYXRhKTtcbiAgICAgIHNob3dSZWdpc3RyYXRpb25Gb3JtV3JhcHBlcihmb3JtRGF0YSk7XG5cdFx0fVxuXHRcdGVsc2V7XG5cdCAgICBjYWxsQmFja0RhdGEudXNlckFscmVhZHlMb2dnZWRJbiA9IHRydWU7XG5cdCAgICB3aW5kb3dbY2FsbGJhY2tGdW5jdGlvbl0oe30sIGNhbGxCYWNrRGF0YSk7XG5cdFx0fVxuICB9XG59XG5cbmZ1bmN0aW9uIGhhbmRsZUNhbmNlbEJ1dHRvblNlY29uZExheWVyKCl7XG4gIC8vY2xpY2tIYW5kbGVyRm9yQ2FuY2VsU2VjTGF5ZXIoKTtcbn1cblxuZnVuY3Rpb24gY2xpY2tIYW5kbGVyRm9yQ2FuY2VsU2VjTGF5ZXIoKXtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNxc24tcHJ2d1wiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcXNuLXBvc3RcIikuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gIC8vZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YWdzLWhlYWQtcG9zdC1xXCIpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICByZXNldFF1ZXN0aW9uRGlzY1Bvc3RuZ0xheWVyKCk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU5leHRCdG5DbGljaygpIHtcbiAgbGV0IHJlc3VsdCA9IHRydWU7XG4gIHJlc3VsdCA9IHZhbGlkYXRlQW5BRmllbGQoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMudGl0bGVUZXh0RmllbGQpKTtcbiAgaWYocmVzdWx0ICYmIHdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNtb3JlLXF1ZXMtcG9zdGluZycpKS5kaXNwbGF5ICE9ICdub25lJyl7XG4gICAgcmVzdWx0ID0gdmFsaWRhdGVBbkFGaWVsZChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy5kZXNjcmlwdGlvblRleHRGaWVsZCkpO1xuICB9XG4gIGlmKHJlc3VsdCl7XG4gICAgdmFyIHRpdGxlVmFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMudGl0bGVUZXh0RmllbGQpLnZhbHVlLnRyaW0oKTtcbiAgICB2YXIgZGVzY1ZhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLmRlc2NyaXB0aW9uVGV4dEZpZWxkKS52YWx1ZS50cmltKCk7XG5cbiAgICB2YXIgY2FwdGlvbiA9IFwiXCI7XG4gICAgaWYodHlwZUZvclFQb3N0ID09IFwicXVlc3Rpb25cIil7XG4gICAgICAgIGNhcHRpb24gPSBcIlF1ZXN0aW9uXCI7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgY2FwdGlvbiA9IFwiRGlzY3Vzc2lvblwiO1xuICAgIH1cbiAgICB2YXIgY291cnNlRXJyRmxhZyA9IHZhbGlkYXRlQW5BUXVlc0NvdXJzZSgpO1xuICAgIGlmKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhc2tDb3Vyc2VTZWxlY3RlZCcpICE9IG51bGwgJiYgY291cnNlRXJyRmxhZyA9PSBmYWxzZSl7XG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjY0xzdF9lcnJvcicpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgcmVzdWx0ID0gdmFsaWRhdGVBbkFQb3N0VGV4dEN1c3RvbVZhbGlkYXRpb25zKHRydWUsIHRydWUsIHRpdGxlVmFsLCBjYXB0aW9uKTtcbiAgICBpZihyZXN1bHQgPT0gdHJ1ZSl7XG4gICAgICAgIHJlc3VsdCA9IHZhbGlkYXRlQW5BUG9zdFRleHRDdXN0b21WYWxpZGF0aW9ucyh0cnVlLCB0cnVlLCBkZXNjVmFsLCBjYXB0aW9uKTtcbiAgICAgICAgaWYocmVzdWx0ID09IHRydWUpe1xuICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI3Fzbi1wb3N0IC5vcGFjdGljeS1jb2xcIikuZm9yRWFjaChcbiAgICAgICAgICAgICAgICBjdXJyT2JqID0+IGN1cnJPYmouc3R5bGUuZGlzcGxheSA9ICdibG9jaydcbiAgICAgICAgICAgICAgKTtcblxuICAgICAgICAgICAgICB2YXIgdGl0bGUgPSB0aXRsZVZhbDtcbiAgICAgICAgICAgICAgdmFyIGVudGl0eURlc2MgPSBkZXNjVmFsO1xuICAgICAgICAgICAgICB2YXIgZW50aXR5VGhyZWFkSWQgPSAwOyAvLyBIYW5kbGUgdGhpcyBpbiBjYXNlIG9mIGVkaXQgcXVlc3Rpb25cbiAgICAgICAgICAgICAgdmFyIGFjdGlvbiA9IHdoaWNoQ2FzZTtcblxuICAgICAgICAgICAgICBpZihhY3Rpb24gPT0gXCJlZGl0aW5nXCIgfHwgYWN0aW9uID09IFwiZWRpdFRhZ1wiKXtcbiAgICAgICAgICAgICAgICAgIGVudGl0eVRocmVhZElkID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0aHJlYWRJZFwiKS52YWx1ZTtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIGxldCB0eXBlID0gdHlwZUZvclFQb3N0O1xuXG4gICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcXN0bi10aXRsZS1wb3N0aW5nIHNwYW5cIikuaW5uZXJIVE1MID0gdGl0bGU7XG5cbiAgICAgICAgICAgICAgLy8gVGFncyBBamF4XG4gICAgICAgICAgICAgIGxldCBhamF4VVJMID0gY29uZmlnKCkuU0hJS1NIQV9IT01FK1wiL21lc3NhZ2VCb2FyZC9BbkFQb3N0RGVza3RvcC9wb3N0aW5nSW50ZXJtZWRpYXRlUGFnZVRhZ3NEYXRhXCI7XG4gICAgICAgICAgICAgIGxldCBhamF4RGF0YSA9IHsnZW50aXR5VHlwZScgOiB0eXBlLCdlbnRpdHlUZXh0JyA6IHRpdGxlLCdlbnRpdHlEZXNjJyA6IGVudGl0eURlc2MsJ2VkaXRFbnRpdHlJZCcgOiBlbnRpdHlUaHJlYWRJZCwnYWN0aW9uJyA6YWN0aW9ufTtcbiAgICAgICAgICAgICAgbGV0IGF4aW9zQ29uZmlnID0ge1xuICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCd9LFxuICAgICAgICAgICAgICAgIHdpdGhDcmVkZW50aWFsczogZmFsc2VcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICBwb3N0UmVxdWVzdChhamF4VVJMLCBhamF4RGF0YSwgJ2Rlc2t0b3AnLCBheGlvc0NvbmZpZykudGhlbigocmVzKSA9PiB7XG4gICAgICAgICAgICAgICAgdGFnc0ZvckludGVybWVkaWF0ZVBhZ2VTdWNjZXNzKHJlcy5kYXRhKTtcbiAgICAgICAgICAgICAgICBpZihhY3Rpb24gPT0gXCJwb3N0aW5nXCIgJiYgdHlwZUZvclFQb3N0ID09ICdxdWVzdGlvbicpe1xuICAgICAgICAgICAgICAgICAgICAvLyBTaW1pbGFyIFF1ZXN0aW9ucyBBamF4XG4gICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2ltaWxhcl9xdWVzX291dGVyXCIpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICAgICAgICAgICAgICBhamF4VVJMID0gY29uZmlnKCkuU0hJS1NIQV9IT01FK1wiL21lc3NhZ2VCb2FyZC9BbkFQb3N0RGVza3RvcC9wb3N0aW5nSW50ZXJtZWRpYXRlUGFnZVNpbWlsYXJRdWVzdGlvbnNEYXRhXCI7XG4gICAgICAgICAgICAgICAgICAgIGFqYXhEYXRhID0geydlbnRpdHlUeXBlJyA6IHR5cGUsJ2VudGl0eVRleHQnIDogdGl0bGUsJ3NoaWtzaGFfYXV0aF90b2tlbic6ZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NoaWtzaGFfYXV0aF90b2tlbicpLnZhbHVlfTtcbiAgICAgICAgICAgICAgICAgICAgcG9zdFJlcXVlc3QoYWpheFVSTCwgYWpheERhdGEsICdkZXNrdG9wJywgYXhpb3NDb25maWcpLnRoZW4oKHNpbWlsYXJSZXMpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICBzaW1pbGFyUXVlc3Rpb25JbnRlcm1lZGlhdGVQYWdlU3VjY2VzcyhzaW1pbGFyUmVzLmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9ZWxzZXtcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzaW1pbGFyX3F1ZXNfb3V0ZXJcIikuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICB9ZWxzZXtcbiAgICAgICAgICB2YXIgZGVzY0VyckRpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLmRlc2NyaXB0aW9uVGV4dEZpZWxkK1wiX2Vycm9yXCIpO1xuICAgICAgICAgIGRlc2NFcnJEaXYuaW5uZXJIVE1MID0gcmVzdWx0O1xuICAgICAgICAgIGRlc2NFcnJEaXYuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgICAgZGVzY0VyckRpdi5wYXJlbnRFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICB9XG4gICAgfWVsc2V7XG4gICAgICAgIHZhciB0ZXh0RXJyRGl2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMudGl0bGVUZXh0RmllbGQrXCJfZXJyb3JcIik7XG4gICAgICAgIHRleHRFcnJEaXYuaW5uZXJIVE1MID0gcmVzdWx0O1xuICAgICAgICB0ZXh0RXJyRGl2LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICAgICAgICB0ZXh0RXJyRGl2LnBhcmVudEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIHNpbWlsYXJRdWVzdGlvbkludGVybWVkaWF0ZVBhZ2VTdWNjZXNzKHJlc3BvbnNlKXtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzaW1pbGFyX3F1ZXNfb3V0ZXJcIikuaW5uZXJIVE1MID0gcmVzcG9uc2U7XG59XG5cbmZ1bmN0aW9uIGFkZE1vcmVUYWdzTGlua0NsaWNrKCl7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcG9zdGluZy1sYXllclwiKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgLy9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RhZ3MtbGF5ZXJcIikuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG5cbiAgaWYocGFyYW1zLnBvc3RpbmdUeXBlID09IFwibGF5ZXJcIil7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNxc24tcHJ2d1wiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIC8vZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YWdzLWhlYWQtcG9zdC1xXCIpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIH1cbiAgbGV0IHRhZ0h0bWwgPSBcIlwiO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI3NsY3RkLXRhZ3MgLmNob29zZW4tdGFnXCIpLmZvckVhY2goXG4gICAgY3Vyck9iaiA9PiB7XG4gICAgICBsZXQgc3RhdHVzID0gY3Vyck9iai5nZXRBdHRyaWJ1dGUoJ3N0YXR1cycpO1xuICAgICAgaWYoc3RhdHVzID09ICdjaGVja2VkJyl7XG4gICAgICAgIGxldCB0YWdJZCA9IGN1cnJPYmouZ2V0QXR0cmlidXRlKCd0YWdJZCcpO1xuICAgICAgICBsZXQgdGFnTmFtZSA9IGN1cnJPYmoudGV4dDtcbiAgICAgICAgbGV0IGNsYXNzaWZpY1R5cGUgPSBjdXJyT2JqLmdldEF0dHJpYnV0ZSgnY2xhc3NpZmljYXRpb24nKTtcbiAgICAgICAgaWYoY2xhc3NpZmljVHlwZSA9PSAndW5kZWZpbmVkJyB8fCBjbGFzc2lmaWNUeXBlLnRyaW0oKSA9PSAnJyl7XG4gICAgICAgICAgY2xhc3NpZmljVHlwZSA9ICdtYW51YWwnO1xuICAgICAgICB9XG4gICAgICAgIHRhZ0h0bWwgKz0gXCI8YSBjbGFzcz0nY2hvb3Nlbi10YWcnIHN0YXR1cz0nY2hlY2tlZCcgaHJlZj0namF2YXNjcmlwdDp2b2lkKDApOycgdGFnSWQgPSdcIit0YWdJZCtcIicgY2xhc3NpZmljYXRpb249J1wiK2NsYXNzaWZpY1R5cGUrXCInPjxzcGFuPjxpPjwvaT48L3NwYW4+PHNwYW4gY2xhc3M9J2ktcyc+XCIrdGFnTmFtZStcIjwvc3Bhbj48L2E+XCI7XG4gICAgICB9XG4gICAgfVxuICApO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RhZ3Mtc2VsY3RkLWxpbmtzXCIpLmlubmVySFRNTCA9IHRhZ0h0bWw7XG4gIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCcjdGFncy1zZWxjdGQtbGlua3MgLmNob29zZW4tdGFnJykuZm9yRWFjaChcbiAgICAgIGN1cnJPYmogPT4ge1xuICAgICAgICBjdXJyT2JqLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGV2ZW50KT0+e1xuICAgICAgICAgIHJlbW92ZWRUYWdzRnJvbUFkZE1vcmVMYXllci5wdXNoKGN1cnJPYmouZ2V0QXR0cmlidXRlKCd0YWdJZCcpKTtcbiAgICAgICAgICBjdXJyT2JqLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoY3Vyck9iaik7XG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgKTtcbiAgfSwgMjAwKTtcbn1cblxuZnVuY3Rpb24gdGFnc0ZvckludGVybWVkaWF0ZVBhZ2VTdWNjZXNzKHJlc3BvbnNlKXtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNxc24tcG9zdFwiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3Fzbi1wb3N0IC5vcGFjdGljeS1jb2xcIikuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNxc24tcHJ2dyAub3BhY3RpY3ktY29sXCIpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG5cbiAgaWYod2hpY2hDYXNlID09ICdlZGl0VGFnJyl7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNlZGl0LXFzdG5cIikuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gIH1cbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNxc24tcHJ2d1wiKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJztcbiAgLy9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RhZ3MtaGVhZC1wb3N0LXFcIikuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjc2xjdGQtdGFnc1wiKS5pbm5lckhUTUwgPSByZXNwb25zZTtcbiAgYXR0YWNoQ2xpY2tIYW5kbGVyVG9UYWdzKCk7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNhZGQtbW9yZS10YWcnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFkZE1vcmVUYWdzTGlua0NsaWNrKTtcbiAgaWYoYWxyZWFkeUludGl0aWFsaXplZCA9PSAwKXtcbiAgICBhbHJlYWR5SW50aXRpYWxpemVkID0gMTtcbiAgICBsZXQgYWpheFVSTCA9IGNvbmZpZygpLlNISUtTSEFfSE9NRStcIi9tZXNzYWdlQm9hcmQvQW5BUG9zdERlc2t0b3AvZmV0Y2hBZGRNb3JlTGF5ZXJcIjtcbiAgICBsZXQgYWpheERhdGEgPSB7J2VudGl0eVR5cGUnIDogdHlwZUZvclFQb3N0fTtcbiAgICBsZXQgYXhpb3NDb25maWcgPSB7XG4gICAgICBoZWFkZXJzOiB7J0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfSxcbiAgICAgIHdpdGhDcmVkZW50aWFsczogZmFsc2VcbiAgICB9XG4gICAgcG9zdFJlcXVlc3QoYWpheFVSTCwgYWpheERhdGEsICdkZXNrdG9wJywgYXhpb3NDb25maWcpLnRoZW4oKG1vcmVUYWdSZXNwb25zZSkgPT4ge1xuICAgICAgaW5pdGlhbGl6ZUFkZE1vcmVUYWdzKG1vcmVUYWdSZXNwb25zZS5kYXRhKTtcbiAgICB9KTtcbiAgfWVsc2V7XG4gICAgaWYoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGRfdGFnc19sYXllcl9oZWFkXCIpICE9IG51bGwpe1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhZGRfdGFnc19sYXllcl9oZWFkXCIpLmlubmVySFRNTCA9IHR5cGVGb3JRUG9zdC5jaGFyQXQoMCkudG9VcHBlckNhc2UoKSArIHR5cGVGb3JRUG9zdC5zbGljZSgxKTtcbiAgICB9XG4gIH1cbn1cblxuZnVuY3Rpb24gaW5pdGlhbGl6ZUFkZE1vcmVUYWdzKHJlc3BvbnNlKXtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2FkZE1vcmVUYWdzTGF5ZXInKS5pbm5lckhUTUwgPSByZXNwb25zZTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2Nscy1hZGQtdGFncycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xvc2VBZGRNb3JlVGFnc0xheWVyKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2V4dC1hZGQtdGFncycpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY2xvc2VBZGRNb3JlVGFnc0xheWVyKTtcbiAgaWYocGFyYW1zLnBvc3RpbmdUeXBlID09ICdkZWZhdWx0Jyl7XG4gICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3RhZ3MtbGF5ZXInKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGNsb3NlQWRkTW9yZVRhZ3NMYXllcik7XG4gIH1cbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2RvbmUtYWRkLXRhZ3MnKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGRvbmVBZGRUYWdzQ2xpY2spO1xuICBpbml0aWFsaXplQXV0b1N1Z2dlc3Rvckluc3RhbmNlU2VhcmNoVjIodGFnQXV0b3N1Z2dlc3RvckNvbmZpZy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gY2xvc2VBZGRNb3JlVGFnc0xheWVyKCl7XG4gIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcG9zdGluZy1sYXllclwiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXG4gIGlmKHBhcmFtcy5wb3N0aW5nVHlwZSA9PSAnZGVmYXVsdCcpe1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3RhZ3MtbGF5ZXJcIikuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgfWVsc2V7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcXNuLXBydndcIikuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgICAgIC8vZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YWdzLWhlYWQtcG9zdC1xXCIpLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICB9XG5cbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YWdTZWFyY2hfZXJyb3JcIikuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YWdTZWFyY2hcIikudmFsdWUgPSBcIlwiO1xufVxuXG5mdW5jdGlvbiBkb25lQWRkVGFnc0NsaWNrKCl7XG4gIGNsb3NlQWRkTW9yZVRhZ3NMYXllcigpO1xuICBsZXQgU2VsZWN0ZWRUYWdzQXJyYXkgPSBbXSwgUHJldmlvdXNUYWdzQXJyYXkgPSBbXTtcbiAgbGV0IGl0ZW0gPSB7fTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIiN0YWdzLXNlbGN0ZC1saW5rcyAuY2hvb3Nlbi10YWdcIikuZm9yRWFjaChcbiAgICBjdXJyT2JqID0+IHtcbiAgICAgIGl0ZW0gPSB7fTtcbiAgICAgIGl0ZW1bJ3RhZ0lkJ10gPSBjdXJyT2JqLmdldEF0dHJpYnV0ZSgndGFnSWQnKTtcbiAgICAgIGl0ZW1bJ3RhZ05hbWUnXSA9IGN1cnJPYmoudGV4dENvbnRlbnQ7XG4gICAgICBpdGVtWyd0YWdUeXBlJ10gPSBjdXJyT2JqLmdldEF0dHJpYnV0ZSgnY2xhc3NpZmljYXRpb24nKTtcbiAgICAgIFNlbGVjdGVkVGFnc0FycmF5LnB1c2goaXRlbSk7XG4gICAgfVxuICApO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI3NsY3RkLXRhZ3MgLmNob29zZW4tdGFnXCIpLmZvckVhY2goXG4gICAgY3Vyck9iaiA9PiBQcmV2aW91c1RhZ3NBcnJheS5wdXNoKGN1cnJPYmouZ2V0QXR0cmlidXRlKCd0YWdJZCcpKVxuICApO1xuICAvL1VuU2VsZWN0IFRoZSByZW1vdmVkIFRhZ3MgSWYgUHJlc2VudFxuICBmb3IgKHZhciBpID0gMDsgaSA8IHJlbW92ZWRUYWdzRnJvbUFkZE1vcmVMYXllci5sZW5ndGg7IGkrKykge1xuICAgICAgb2JqID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NlbGVjdGVkLXRhZ3MgLmNob29zZW4tdGFnW3RhZ0lkPVwiJytyZW1vdmVkVGFnc0Zyb21BZGRNb3JlTGF5ZXJbaV0rJ1wiXScpO1xuICAgICAgaWYob2JqICE9IG51bGwgJiYgb2JqLmxlbmd0aCAhPSAwKXtcbiAgICAgICAgICBvYmouc2V0QXR0cmlidXRlKCdzdGF0dXMnLCd1bmNoZWNrZWQnKTtcbiAgICAgICAgICBvYmouY2xhc3NMaXN0LmFkZCgndW4tdGFnJyk7XG4gICAgICB9XG4gIH1cblxuICAvLyBGaW5hbGx5IFNlbGVjdCAvIEFkZCB0aGUgdGFncyBwcmVzZW50XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgU2VsZWN0ZWRUYWdzQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgb2JqID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3NlbGVjdGVkLXRhZ3MgLmNob29zZW4tdGFnW3RhZ0lkPVwiJytTZWxlY3RlZFRhZ3NBcnJheVtpXS50YWdJZCsnXCJdJyk7XG4gICAgaWYob2JqICE9IG51bGwgJiYgb2JqLmxlbmd0aCAhPSAwKXtcbiAgICAgIG9iai5zZXRBdHRyaWJ1dGUoJ3N0YXR1cycsJ2NoZWNrZWQnKTtcbiAgICAgIG9iai5jbGFzc0xpc3QucmVtb3ZlKCd1bi10YWcnKTtcbiAgICB9ZWxzZSB7XG4gICAgICBsZXQgY2xhc3NpZmljYXRpb24gPSBcIm1hbnVhbFwiO1xuXG4gICAgICBpZih0eXBlb2YgU2VsZWN0ZWRUYWdzQXJyYXlbaV0udGFnVHlwZSAgIT0gJ3VuZGVmaW5lZCcgJiYgU2VsZWN0ZWRUYWdzQXJyYXlbaV0udGFnVHlwZS50cmltKCkgIT0gJycpe1xuICAgICAgICBjbGFzc2lmaWNhdGlvbiA9IFNlbGVjdGVkVGFnc0FycmF5W2ldLnRhZ1R5cGU7XG4gICAgICB9XG4gICAgICAvL3RhZ0h0bWwgPSBcIjxhIGNsYXNzPSdjaG9vc2VuLXRhZycgc3RhdHVzPSdjaGVja2VkJyBocmVmPSdqYXZhc2NyaXB0OnZvaWQoMCk7JyB0YWdJZCA9J1wiK1NlbGVjdGVkVGFnc0FycmF5W2ldLnRhZ0lkK1wiJyBjbGFzc2lmaWNhdGlvbj0nXCIrY2xhc3NpZmljYXRpb24rXCInPjxzcGFuPjxpPjwvaT48L3NwYW4+PHNwYW4gY2xhc3M9J2ktcyc+XCIrU2VsZWN0ZWRUYWdzQXJyYXlbaV0udGFnTmFtZStcIjwvc3Bhbj48L2E+XCI7XG4gICAgICBsZXQgYU5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtcbiAgICAgIGFOb2RlLmNsYXNzTmFtZSA9ICdjaG9vc2VuLXRhZyc7XG4gICAgICBhTm9kZS5ocmVmID0gJ2phdmFzY3JpcHQ6dm9pZCgwKTsnO1xuICAgICAgLy9hTm9kZS5zdGF0dXMgPSAnY2hlY2tlZCc7XG4gICAgICAvL2FOb2RlLnRhZ0lkPSBTZWxlY3RlZFRhZ3NBcnJheVtpXS50YWdJZDtcbiAgICAgIC8vYU5vZGUuY2xhc3NpZmljYXRpb24gPSBjbGFzc2lmaWNhdGlvbjtcblxuICAgICAgbGV0IGF0dCA9IGRvY3VtZW50LmNyZWF0ZUF0dHJpYnV0ZShcInN0YXR1c1wiKTtcbiAgICAgIGF0dC52YWx1ZSA9ICdjaGVja2VkJztcbiAgICAgIGFOb2RlLnNldEF0dHJpYnV0ZU5vZGUoYXR0KTtcblxuICAgICAgYXR0ID0gZG9jdW1lbnQuY3JlYXRlQXR0cmlidXRlKFwidGFnSWRcIik7XG4gICAgICBhdHQudmFsdWUgPSBTZWxlY3RlZFRhZ3NBcnJheVtpXS50YWdJZDtcbiAgICAgIGFOb2RlLnNldEF0dHJpYnV0ZU5vZGUoYXR0KTtcblxuICAgICAgYXR0ID0gZG9jdW1lbnQuY3JlYXRlQXR0cmlidXRlKFwiY2xhc3NpZmljYXRpb25cIik7XG4gICAgICBhdHQudmFsdWUgPSBjbGFzc2lmaWNhdGlvbjtcbiAgICAgIGFOb2RlLnNldEF0dHJpYnV0ZU5vZGUoYXR0KTtcbiAgICAgIGFOb2RlLmlubmVySFRNTCA9IFwiPHNwYW4+PGk+PC9pPjwvc3Bhbj48c3BhbiBjbGFzcz0naS1zJz5cIitTZWxlY3RlZFRhZ3NBcnJheVtpXS50YWdOYW1lK1wiPC9zcGFuPlwiO1xuICAgICAgLy9sZXQgdGV4dE5vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShcIlwiKTtcbiAgICAgIC8vYU5vZGUuYXBwZW5kQ2hpbGQodGV4dE5vZGUpO1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzZWxlY3RlZC10YWdzXCIpLmFwcGVuZENoaWxkKGFOb2RlKTtcbiAgICB9XG4gIH1cbiAgcmVtb3ZlZFRhZ3NGcm9tQWRkTW9yZUxheWVyID0gW107XG4gIGF0dGFjaENsaWNrSGFuZGxlclRvVGFncygpO1xufVxuXG5mdW5jdGlvbiBhdHRhY2hDbGlja0hhbmRsZXJUb1RhZ3MoKXtcbiAgaWYoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNzbGN0ZC10YWdzIC5jaG9vc2VuLXRhZ1wiKSAhPSBudWxsKXtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI3NsY3RkLXRhZ3MgLmNob29zZW4tdGFnXCIpLmZvckVhY2goXG4gICAgICBjdXJyT2JqID0+IGN1cnJPYmouYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBjbGlja0hhbmRsZXJGb3JUYWdzKVxuICAgICk7XG4gIH1cbn1cblxuZnVuY3Rpb24gY2xpY2tIYW5kbGVyRm9yVGFncyhlKXtcbiAgbGV0IG9iamVjdCA9IGUuY3VycmVudFRhcmdldDtcbiAgbGV0IHN0YXR1cyA9IG9iamVjdC5nZXRBdHRyaWJ1dGUoJ3N0YXR1cycpO1xuICAvL0dBIHRyYWNrIG1vcmUgY29kZSBoZXJlXG4gIGlmKHN0YXR1cyA9PSBcImNoZWNrZWRcIil7XG4gICAgb2JqZWN0LmNsYXNzTGlzdC5hZGQoJ3VuLXRhZycpO1xuICAgIG9iamVjdC5zZXRBdHRyaWJ1dGUoJ3N0YXR1cycsJ3VuY2hlY2tlZCcpO1xuICB9XG4gIGVsc2UgaWYoc3RhdHVzID09IFwidW5jaGVja2VkXCIpe1xuICAgIG9iamVjdC5jbGFzc0xpc3QucmVtb3ZlKCd1bi10YWcnKTtcbiAgICBvYmplY3Quc2V0QXR0cmlidXRlKCdzdGF0dXMnLCdjaGVja2VkJyk7XG4gIH1cbn1cblxuZnVuY3Rpb24gcmVzZXRRdWVzdGlvbkRpc2NQb3N0bmdMYXllcigpIHtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNtb3JlLXF1ZXMtcG9zdGluZ1wiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI21vcmUtcXN0bnMtcG9zdGluZ1wiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BsdXMtbWludXMtaWNvblwiKS5jbGFzc0xpc3QucmVtb3ZlKCdhZnRlcicpO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3BsdXMtbWludXMtaWNvblwiKS5jbGFzc0xpc3QuYWRkKCdiZWZvcmUnKTtcbiAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwbHVzLW1pbnVzLWljb25cIikuc2V0QXR0cmlidXRlKCduZXh0Q2xhc3MnLCdhZnRlcicpO1xuXG4gIC8vIEhpZGUgRXJyb3IgTWVzc2FnZXNcbiAgdmFyIHRleHRFcnJEaXYgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy50aXRsZVRleHRGaWVsZCtcIl9lcnJvclwiKTtcbiAgdGV4dEVyckRpdi5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICB0ZXh0RXJyRGl2LnBhcmVudEVsZW1lbnQuc3R5bGUuZGlzcGxheSA9ICdub25lJztcblxuICB2YXIgZGVzY0VyckRpdiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLmRlc2NyaXB0aW9uVGV4dEZpZWxkK1wiX2Vycm9yXCIpO1xuICBkZXNjRXJyRGl2LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XG4gIGRlc2NFcnJEaXYucGFyZW50RWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuXG4gIHZhciB0ZXh0RmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy50aXRsZVRleHRGaWVsZCk7XG4gIHRleHRGaWVsZC52YWx1ZSA9IFwiXCI7XG4gIHRyaWdnZXJFdmVudCh0ZXh0RmllbGQsICdrZXl1cCcpO1xuXG4gIHZhciBkZXNjRmllbGQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy5kZXNjcmlwdGlvblRleHRGaWVsZCk7XG4gIGRlc2NGaWVsZC52YWx1ZSA9IFwiXCI7XG4gIHRyaWdnZXJFdmVudChkZXNjRmllbGQsICdrZXl1cCcpO1xuXG4gIHRleHRGaWVsZC5zdHlsZS5oZWlnaHQgPSAnNDBweCc7XG4gIGRlc2NGaWVsZC5zdHlsZS5oZWlnaHQgPSAnMTIwcHgnO1xuXG4gIGlmKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjb3Vyc2VTZWxlY3Rpb25UYWInKSAhPSBudWxsKXtcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLmNvdXJzZUZpZWxkKS52YWx1ZSA9ICcnO1xuICB9XG5cbiAgaWYoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhc2tDb3Vyc2VTZWxlY3RlZFwiKSAhPSBudWxsKXtcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYXNrQ291cnNlU2VsZWN0ZWRcIikudmFsdWUgPSAnJztcbiAgfVxuXG5cbiAgd2hpY2hDYXNlID0gXCJwb3N0aW5nXCI7XG4gIC8vZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiN0YWdzLWhlYWQtcG9zdC1xIHNwYW5cIikuaW5uZXJIVE1MID0gXCJBc2sgeW91ciBRdWVzdGlvblwiO1xuICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiI3Fzbi1wcnZ3IC5vcGFjdGljeS1jb2xcIikuZm9yRWFjaChcbiAgICBjdXJyT2JqID0+IGN1cnJPYmouc3R5bGUuZGlzcGxheSA9ICdub25lJ1xuICApO1xuICB0eXBlRm9yUVBvc3QgPSBhY3R1YWxUeXBlO1xuICBwb3B1bGF0ZVF1ZXNEaXNjUG9zdGluZ0xheWVyKGFjdHVhbFR5cGUpO1xufVxuXG5mdW5jdGlvbiBjbG9zZUFkZE1vcmVUYWdzRm9yTGF5ZXJQb3N0KCkge1xuICAvL2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjdGFncy1sYXllclwiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAvL2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYW4tbGF5ZXJcIikuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbn1cblxuZnVuY3Rpb24gcG9wdWxhdGVRdWVzRGlzY1Bvc3RpbmdMYXllcih0eXBlKXtcbiAgaWYodHlwZSA9PSB1bmRlZmluZWQpe1xuICAgIHR5cGUgPSBcInF1ZXN0aW9uXCI7XG4gIH1cblxuICBpZih0eXBlID09IFwiZGlzY3Vzc2lvblwiKXtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnFkVGl0bGUtbDJcIikuaW5uZXJIVE1MID0gXCJZb3VyIERpc2N1c3Npb25cIjtcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy50aXRsZVRleHRGaWVsZCkuc2V0QXR0cmlidXRlKFwicGxhY2Vob2xkZXJcIixcIlR5cGUgWW91ciBEaXNjdXNzaW9uXCIpO1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLnRpdGxlVGV4dEZpZWxkKS5zZXRBdHRyaWJ1dGUoXCJjYXB0aW9uXCIsXCJEaXNjdXNzaW9uXCIpO1xuXG5cbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy50aXRsZVRleHRGaWVsZCtcIl9jb3VudGVyX291dGVyXCIpLmlubmVySFRNTCA9IFwiQ2hhcmFjdGVycyA8c3BhbiBpZD0nXCIrcGFyYW1zLnRpdGxlVGV4dEZpZWxkK1wiX2NvdW50ZXInPjA8L3NwYW4+LzEwMFwiO1xuXG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy50aXRsZVRleHRGaWVsZCkuc2V0QXR0cmlidXRlKFwibWF4bGVuZ3RoXCIsXCIxMDBcIik7XG4gICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLnRpdGxlVGV4dEZpZWxkKS5zZXRBdHRyaWJ1dGUoXCJtaW5sZW5ndGhcIixcIjIwXCIpO1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy5kZXNjcmlwdGlvblRleHRGaWVsZCkuc2V0QXR0cmlidXRlKFwibWF4bGVuZ3RoXCIsXCIyNTAwXCIpO1xuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy5kZXNjcmlwdGlvblRleHRGaWVsZCkuc2V0QXR0cmlidXRlKFwibWlubGVuZ3RoXCIsXCIyMFwiKTtcbiAgICB9LDEwMCk7XG5cbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy5kZXNjcmlwdGlvblRleHRGaWVsZCtcIl9jb3VudGVyX291dGVyXCIpLmlubmVySFRNTCA9IFwiQ2hhcmFjdGVycyA8c3BhbiBpZD0nXCIrcGFyYW1zLmRlc2NyaXB0aW9uVGV4dEZpZWxkK1wiX2NvdW50ZXInPjA8L3NwYW4+LzI1MDBcIjtcblxuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLmRlc2NyaXB0aW9uVGV4dEZpZWxkKS5zZXRBdHRyaWJ1dGUoXCJjYXB0aW9uXCIsXCJEZXNjcmlwdGlvblwiKTtcblxuICB9IGVsc2Uge1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5xZFRpdGxlLWwyXCIpLmlubmVySFRNTCA9IFwiWW91ciBRdWVzdGlvblwiO1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMudGl0bGVUZXh0RmllbGQpLnNldEF0dHJpYnV0ZShcInBsYWNlaG9sZGVyXCIsXCJUeXBlIFlvdXIgUXVlc3Rpb25cIik7XG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy50aXRsZVRleHRGaWVsZCkuc2V0QXR0cmlidXRlKFwiY2FwdGlvblwiLFwiUXVlc3Rpb25cIik7XG5cbiAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy50aXRsZVRleHRGaWVsZCkuc2V0QXR0cmlidXRlKFwibWF4bGVuZ3RoXCIsXCIxNDBcIik7XG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMudGl0bGVUZXh0RmllbGQpLnNldEF0dHJpYnV0ZShcIm1pbmxlbmd0aFwiLFwiMjBcIik7XG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMuZGVzY3JpcHRpb25UZXh0RmllbGQpLnNldEF0dHJpYnV0ZShcIm1heGxlbmd0aFwiLFwiMzAwXCIpO1xuICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLmRlc2NyaXB0aW9uVGV4dEZpZWxkKS5zZXRBdHRyaWJ1dGUoXCJtaW5sZW5ndGhcIixcIjIwXCIpO1xuICAgICAgfSwxMDApO1xuICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNcIitwYXJhbXMudGl0bGVUZXh0RmllbGQrXCJfY291bnRlcl9vdXRlclwiKS5pbm5lckhUTUwgPSBcIkNoYXJhY3RlcnMgPHNwYW4gaWQ9J1wiK3BhcmFtcy50aXRsZVRleHRGaWVsZCtcIl9jb3VudGVyJz4wPC9zcGFuPi8xNDBcIjtcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjXCIrcGFyYW1zLmRlc2NyaXB0aW9uVGV4dEZpZWxkK1wiX2NvdW50ZXJfb3V0ZXJcIikuaW5uZXJIVE1MID0gXCJDaGFyYWN0ZXJzIDxzcGFuIGlkPSdcIitwYXJhbXMuZGVzY3JpcHRpb25UZXh0RmllbGQrXCJfY291bnRlcic+MDwvc3Bhbj4vMzAwXCI7XG4gICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI1wiK3BhcmFtcy5kZXNjcmlwdGlvblRleHRGaWVsZCkuc2V0QXR0cmlidXRlKFwiY2FwdGlvblwiLFwiRGVzY3JpcHRpb25cIik7XG4gIH1cbn1cblxuZnVuY3Rpb24gaGFuZGxlQ2hhcmFjdGVySW5UZXh0RmllbGQoZXZlbnQsIGlzRW50ZXJBbGxvd2VkKVxue1xuICAgIHZhciByZWdleCA9IG5ldyBSZWdFeHAoXCJeWy0gYS16QS1aMC05Pz0uKiFAIyQlXiYqXFxcIic+fmAoKS0rX3w6Oz8vLFxcXFxcXFxce31cXFxcW1xcXFxdXSskXCIpO1xuICAgIHZhciBhY3R1YWxFdmVudCA9IGV2ZW50LndoaWNoIHx8IGV2ZW50LmtleUNvZGUgfHwgZXZlbnQuY2hhckNvZGU7XG4gICAgLy80NiAtPiBEZWxldGUsIDM2IC0+IEhvbWUsIDM1LT4gRW5kLDM3LTQwIC0+IEFycm93IEtleXMgMTEyLTEyMyAtPiBGdW5jdGlvbiBLZXlzICwgOSAtIFRhYlxuXG4gICAgdmFyIGRlZmF1bHRBbGxvd2VkQXJyYXkgPSBbOSw0NiwzNiwzNSwzNywzOCwzOSw0MCwxMTIsMTEzLDExNCwxMTUsMTE2LDExNywxMTgsMTE5LDEyMCwxMjEsMTIyLDEyM107XG5cbiAgICBpZihkZWZhdWx0QWxsb3dlZEFycmF5LmluZGV4T2YoYWN0dWFsRXZlbnQpICE9IC0xKXtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgfVxuXG5cbiAgICBpZih0eXBlb2YoaXNFbnRlckFsbG93ZWQpICE9IFwidW5kZWZpbmVkXCIgJiYgaXNFbnRlckFsbG93ZWQgPT0gdHJ1ZSAmJiBhY3R1YWxFdmVudCA9PSAxMyl7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBpZihhY3R1YWxFdmVudCAhPSA4KXtcbiAgICAgICAgdmFyIGtleSA9IFN0cmluZy5mcm9tQ2hhckNvZGUoZXZlbnQuY2hhckNvZGUgPyBldmVudC53aGljaCA6IGV2ZW50LmNoYXJDb2RlKTtcbiAgICAgICAgaWYgKCFyZWdleC50ZXN0KGtleSkpIHtcbiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICB9XG59XG5cbmZ1bmN0aW9uIGF1dG9Hcm93RmllbGQoZiwgbWF4SGVpZ2h0KSB7XG4gIGlmIChmLnN0eWxlLm92ZXJmbG93WSAhPSAnaGlkZGVuJykgeyBmLnN0eWxlLm92ZXJmbG93WSA9ICdoaWRkZW4nIH1cbiAgaWYobWF4SGVpZ2h0ID09IHVuZGVmaW5lZCl7XG4gICAgICB2YXIgbWF4SGVpZ2h0ID0gMzAwO1xuICB9XG4gIHZhciBpZCA9IGY7XG4gIHZhciB0ZXh0ID0gaWQgJiYgaWQuc3R5bGUgPyBpZCA6IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTtcbiAgaWYgKCAhdGV4dCApXG4gICAgcmV0dXJuO1xuXG4gIHZhciBhZGp1c3RlZEhlaWdodCA9IHRleHQuY2xpZW50SGVpZ2h0O1xuICBpZiAoICFtYXhIZWlnaHQgfHwgbWF4SGVpZ2h0ID49IGFkanVzdGVkSGVpZ2h0IClcbiAge1xuICAgIGFkanVzdGVkSGVpZ2h0ID0gTWF0aC5tYXgodGV4dC5zY3JvbGxIZWlnaHQsIGFkanVzdGVkSGVpZ2h0KTtcbiAgICBpZiAoIG1heEhlaWdodCApe1xuICAgICAgYWRqdXN0ZWRIZWlnaHQgPSBNYXRoLm1pbihtYXhIZWlnaHQsIGFkanVzdGVkSGVpZ2h0KTtcbiAgICB9XG4gICAgaWYoYWRqdXN0ZWRIZWlnaHQgPj0gbWF4SGVpZ2h0KXtcbiAgICAgIGYuc3R5bGUub3ZlcmZsb3dZID0gJ3Njcm9sbCc7XG4gICAgICB0ZXh0LnN0eWxlLmhlaWdodCA9IGFkanVzdGVkSGVpZ2h0ICsgXCJweFwiO1xuICAgIH1cbiAgICBlbHNlIGlmICggYWRqdXN0ZWRIZWlnaHQgPiB0ZXh0LmNsaWVudEhlaWdodCApe1xuICAgICAgdGV4dC5zdHlsZS5oZWlnaHQgPSBhZGp1c3RlZEhlaWdodCArIFwicHhcIjtcbiAgICB9XG5cbiAgfVxufVxuXG5mdW5jdGlvbiB0ZXh0S2V5KE9iamVjdCkge1xuICBzdXBwb3J0c0tleXMgPSB0cnVlO1xuICBjYWxjQ2hhckxlZnQoT2JqZWN0KTtcbn1cblxuZnVuY3Rpb24gY2FsY0NoYXJMZWZ0KE9iamVjdCkge1xuICB2YXIgY2xpcHBlZCA9IGZhbHNlO1xuICB2YXIgbGVuVVNpZyA9IDA7XG4gIHZhciBtYXhMZW5ndGggPSAxMDAwO1xuICB0cnl7XG4gICAgaWYoT2JqZWN0LmdldEF0dHJpYnV0ZSgnbWF4bGVuZ3RoJykpe1xuICAgICAgbWF4TGVuZ3RoID0gcGFyc2VJbnQoT2JqZWN0LmdldEF0dHJpYnV0ZSgnbWF4bGVuZ3RoJykpO1xuICAgIH1cbiAgfWNhdGNoKGUpe31cbiAgdmFyIGNoYXJVc2VkO1xuICB2YXIgdGV4dEJveFZhbCA9IE9iamVjdC52YWx1ZS50cmltKCk7XG4gIGlmICh0ZXh0Qm94VmFsLmxlbmd0aCA+IG1heExlbmd0aCkge1xuICAgIE9iamVjdC52YWx1ZSA9IHRleHRCb3hWYWwuc3Vic3RyaW5nKDAsbWF4TGVuZ3RoKTtcbiAgICBjaGFyVXNlZCA9IG1heExlbmd0aDtcbiAgICBjbGlwcGVkID0gdHJ1ZTtcbiAgfSBlbHNlIHtcbiAgICBjaGFyVXNlZCA9IHRleHRCb3hWYWwubGVuZ3RoO1xuICB9XG4gIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKE9iamVjdC5pZCsnX2NvdW50ZXInKS5pbm5lckhUTUwgPSBjaGFyVXNlZDtcbiAgcmV0dXJuIGNsaXBwZWQ7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./application/utils/anaHelper.js\n");

/***/ }),

/***/ "./application/utils/anaValidationHelper.js":
/*!**************************************************!*\
  !*** ./application/utils/anaValidationHelper.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.validateAnAQuesCourse = exports.validateAnAPostTextCustomValidations = exports.validateAnAField = undefined;\n\nvar _react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar validateAnAField = exports.validateAnAField = function validateAnAField(obj) {\n  var boxValue = obj.value.trim();\n  var boxId = obj.id;\n  var valid = true;\n  if (boxValue.length == 0) {\n    document.querySelector('#' + obj.id + '_error').innerHTML = 'Please enter the ' + obj.getAttribute('caption');\n    valid = false;\n  } else if (boxValue.length < 20) {\n    document.querySelector('#' + obj.id + '_error').innerHTML = 'The ' + obj.getAttribute('caption') + ' must contain atleast 20 characters.';\n    valid = false;\n  }\n\n  if (!valid) {\n    document.querySelector('#' + obj.id + '_error').style.display = 'block';\n    document.querySelector('#' + obj.id + '_error').parentElement.style.display = 'inline';\n  } else {\n    document.querySelector('#' + obj.id + '_error').style.display = 'none';\n    document.querySelector('#' + obj.id + '_error').parentElement.style.display = 'none';\n  }\n  return valid;\n};\n\nvar validateAnAPostTextCustomValidations = exports.validateAnAPostTextCustomValidations = function validateAnAPostTextCustomValidations(phone, links, textToBeValidated, caption) {\n  if (textToBeValidated != \"\") {\n    var patt = \"\";\n    var result = false;\n    // Phone Numbers should not present in the title / Description1\n    if (phone == true) {\n      patt = /[0-9]{8,1000}/g;\n      result = patt.test(textToBeValidated);\n      if (result == true) {\n        return \"Mobile/Phone numbers are not allowed in \" + caption;\n      }\n    }\n\n    // Links should not be there in the string\n    if (links == true) {\n      patt = new RegExp(\"(http|ftp|https)://([\\\\w_-]+(?:(?:\\\\.[\\\\w_-]+)+))([\\\\w.,@?^=%&:/~+#-]*[\\\\w@?^=%&/~+#-])?\");\n      result = patt.test(textToBeValidated);\n      if (result == true) {\n        return \"Links are not allowed in \" + caption;\n      }\n\n      if (textToBeValidated.indexOf(\"www.\") != -1) {\n        return \"Links are not allowed in \" + caption;\n      }\n    }\n  } else if (caption.toLowerCase() == \"discussion\") {\n    return \"Please enter the description\";\n  }\n  return true;\n};\n\nvar validateAnAQuesCourse = exports.validateAnAQuesCourse = function validateAnAQuesCourse() {\n  var input = null,\n      ul,\n      li,\n      a,\n      i;\n  document.querySelector('#instituteCoursesQP').value = '';\n  if (document.querySelector('#cLst_error') != null) {\n    document.querySelector('#cLst_error').style.display = 'none';\n  }\n  if (document.querySelector('#askCourseSelected') != null) {\n    input = document.querySelector('#askCourseSelected').value.toLowerCase().trim();\n  }\n  if (input) {\n    ul = document.getElementById(\"cLst\");\n    li = ul.getElementsByTagName(\"a\");\n    for (i = 0; i < li.length; i++) {\n      var str = false;\n      var items = li[i].innerHTML.trim().toLowerCase();\n      var courseId = li[i].getAttribute('data-id');\n      if (input == items) {\n        str = true;\n        document.querySelector('#instituteCoursesQP').value = courseId;\n        break;\n      }\n    }\n    return str ? true : false;\n  }\n  return true;\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./application/utils/anaValidationHelper.js\n");

/***/ }),

/***/ "./application/utils/autosuggestorConfig.js":
/*!**************************************************!*\
  !*** ./application/utils/autosuggestorConfig.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.questionsAutosuggestorConfig = exports.examsAutosuggestorConfig = exports.careersAutosuggestorConfig = exports.courseInstituteAutosuggestorConfig = exports.tagAutosuggestorConfig = undefined;\n\nvar _config = __webpack_require__(/*! ./../../config/config */ \"./config/config.js\");\n\nvar _config2 = _interopRequireDefault(_config);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar tagAutosuggestorConfig = exports.tagAutosuggestorConfig = {\n  'options': {\n    'suggestionContainerClass': 'search-college-layer',\n    'bucketCount': 4,\n    'searchVersion': '2',\n    'enterPressedHandler': 'handleAutoSuggestorMouseClickedTags',\n    'mouseClickedHandler': 'handleAutoSuggestorMouseClickedTags',\n    'objectName': 'autoSuggestorInstanceForTags',\n    'searchBoxId': 'tagSearch',\n    'suggestionContainerId': 'tagSearch_container',\n    'typeAhead': 0,\n    'suggestionType': 'tag',\n    'suggestionCount': 7,\n    'autoSuggestorUrl': (0, _config2.default)().SHIKSHA_HOME + '/Tagging/TaggingDesktop/getAutoSuggestor',\n    'showGrouping': 1,\n    'disableCache': 1,\n    'removePartialMatch': 0\n  }\n};\n\nvar courseInstituteAutosuggestorConfig = exports.courseInstituteAutosuggestorConfig = {\n  'options': {\n    'suggestionContainerClass': 'search-college-layer',\n    'bucketCount': 4,\n    'searchVersion': '2',\n    'tabPressedHandler': 'handleAutoSuggestorTabPressed',\n    'enterPressedHandler': 'handleAutoSuggestorEnterPressedSearch',\n    'mouseClickedHandler': 'handleAutoSuggestorMouseClickedSearch',\n    'navigationKeysHandler': 'handleNavigationKeysHandler',\n    'objectName': 'autoSuggestorInstanceSearch',\n    'searchBoxId': 'searchby-college',\n    'suggestionContainerId': 'search-college-layer',\n    'typeAhead': 0,\n    'suggestionType': 'course_and_institute',\n    'suggestionCount': 8,\n    'autoSuggestorUrl': (0, _config2.default)().SHIKSHA_HOME + '/search/AutoSuggestorV2/getSuggestionsFromSolr/',\n    'isMobileSearch': 0,\n    'showGrouping': 1,\n    'getTrendingSuggestions': 1\n  }\n};\n\nvar careersAutosuggestorConfig = exports.careersAutosuggestorConfig = {\n  'options': {\n    'suggestionContainerClass': 'search-college-layer',\n    'bucketCount': 4,\n    'searchVersion': '2',\n    'tabPressedHandler': 'handleAutoSuggestorTabPressedCareers',\n    'enterPressedHandler': 'handleAutoSuggestorEnterPressedCareers',\n    'mouseClickedHandler': 'handleAutoSuggestorEnterPressedCareers',\n    'objectName': 'autoSuggestorInstanceCareer',\n    'searchBoxId': 'searchby-career',\n    'suggestionContainerId': 'search-career-layer',\n    'getTrendingSuggestions': 1,\n    'typeAhead': 0,\n    'disableCache': 1,\n    'suggestionType': 'career',\n    'suggestionCount': 8\n  }\n};\n\nvar examsAutosuggestorConfig = exports.examsAutosuggestorConfig = {\n  'options': {\n    'suggestionContainerClass': 'search-college-layer',\n    'bucketCount': 4,\n    'searchVersion': '2',\n    'tabPressedHandler': 'handleAutoSuggestorTabPressedExams',\n    'enterPressedHandler': 'handleAutoSuggestorEnterPressedExams',\n    'mouseClickedHandler': 'handleAutoSuggestorEnterPressedExams',\n    'backKeyHandler': 'handleAutoSuggestorBackKeyPressedExams',\n    'objectName': 'autoSuggestorInstanceExam',\n    'searchBoxId': 'searchby-exam',\n    'suggestionContainerId': 'search-exam-layer',\n    'suggestionType': 'exam',\n    'suggestionCount': 8,\n    'autoSuggestorUrl': (0, _config2.default)().SHIKSHA_HOME + '/search/AutoSuggestorV2/getSuggestionsFromSolr/',\n    'showGrouping': 1,\n    'getTrendingSuggestions': 1\n  }\n};\n\nvar questionsAutosuggestorConfig = exports.questionsAutosuggestorConfig = {\n  'options': {\n    'suggestionContainerClass': 'search-college-layer',\n    'bucketCount': 4,\n    'searchVersion': '2',\n    'tabPressedHandler': 'handleAutoSuggestorTabPressedQuestion',\n    'enterPressedHandler': 'handleAutoSuggestorEnterPressedQuestion',\n    'mouseClickedHandler': 'handleAutoSuggestorEnterPressedQuestion',\n    'mouseClickedHandlerLastElement': 'handleAutoSuggestorEnterPressedAskQuestion',\n    'askNewQuestionURL': (0, _config2.default)().SHIKSHA_ASK_HOME,\n    'mouseClickedHandlerCTA': 'handleAutoSuggestorEnterPressedCTA',\n    'backKeyHandler': 'handleAutoSuggestorBackKeyPressedQuestion',\n    'objectName': 'autoSuggestorInstanceQuestion',\n    'searchBoxId': 'searchby-question',\n    'suggestionContainerId': 'search-question-layer',\n    'removeExactMatch': 1,\n    'suggestionType': 'question',\n    'suggestionCount': 8,\n    'isMobileSearch': 0,\n    'autoSuggestorUrl': (0, _config2.default)().SHIKSHA_HOME + '/search/AutoSuggestorV2/getSuggestionsFromSolr/',\n    'showGrouping': 1,\n    'getTrendingSuggestions': 1\n  }\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./application/utils/autosuggestorConfig.js\n");

/***/ }),

/***/ "./application/utils/regnHelper.js":
/*!*****************************************!*\
  !*** ./application/utils/regnHelper.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\nWrapper functions for PWA desktop registration with jQuery.\nThis JS file will NOT be used when registration is moved to PWA.\n*/\n\nvar showRegistrationFormWrapper = exports.showRegistrationFormWrapper = function showRegistrationFormWrapper(formData) {\n  registrationForm.showRegistrationForm(formData);\n};\n\nvar showResponseFormWrapper = exports.showResponseFormWrapper = function showResponseFormWrapper(listingId, actionType, listingType, formData, extraParam) {\n  responseForm.showResponseForm(listingId, actionType, listingType, formData, extraParam);\n};\n\nvar showLoginFormWrapper = exports.showLoginFormWrapper = function showLoginFormWrapper(formData) {\n  registrationForm.showLoginLayer(formData);\n};\n\nvar signOutUserWrapper = exports.signOutUserWrapper = function signOutUserWrapper() {\n  SignOutUser();\n};\n\nvar showResetPasswordLayerWrapper = exports.showResetPasswordLayerWrapper = function showResetPasswordLayerWrapper(uname, uemail, rgrnContext, ugrp) {\n  registrationForm.showResetPasswordLayer(uname, uemail, rgrnContext, ugrp);\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9hcHBsaWNhdGlvbi91dGlscy9yZWduSGVscGVyLmpzPzQ0ZmEiXSwibmFtZXMiOlsic2hvd1JlZ2lzdHJhdGlvbkZvcm1XcmFwcGVyIiwiZm9ybURhdGEiLCJyZWdpc3RyYXRpb25Gb3JtIiwic2hvd1JlZ2lzdHJhdGlvbkZvcm0iLCJzaG93UmVzcG9uc2VGb3JtV3JhcHBlciIsImxpc3RpbmdJZCIsImFjdGlvblR5cGUiLCJsaXN0aW5nVHlwZSIsImV4dHJhUGFyYW0iLCJyZXNwb25zZUZvcm0iLCJzaG93UmVzcG9uc2VGb3JtIiwic2hvd0xvZ2luRm9ybVdyYXBwZXIiLCJzaG93TG9naW5MYXllciIsInNpZ25PdXRVc2VyV3JhcHBlciIsIlNpZ25PdXRVc2VyIiwic2hvd1Jlc2V0UGFzc3dvcmRMYXllcldyYXBwZXIiLCJ1bmFtZSIsInVlbWFpbCIsInJncm5Db250ZXh0IiwidWdycCIsInNob3dSZXNldFBhc3N3b3JkTGF5ZXIiXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7Ozs7O0FBS08sSUFBTUEsb0VBQThCLFNBQTlCQSwyQkFBOEIsQ0FBQ0MsUUFBRCxFQUFjO0FBQ3ZEQyxtQkFBaUJDLG9CQUFqQixDQUFzQ0YsUUFBdEM7QUFDRCxDQUZNOztBQUlBLElBQU1HLDREQUEwQixTQUExQkEsdUJBQTBCLENBQUNDLFNBQUQsRUFBWUMsVUFBWixFQUF3QkMsV0FBeEIsRUFBcUNOLFFBQXJDLEVBQStDTyxVQUEvQyxFQUE4RDtBQUNuR0MsZUFBYUMsZ0JBQWIsQ0FBOEJMLFNBQTlCLEVBQXlDQyxVQUF6QyxFQUFxREMsV0FBckQsRUFBa0VOLFFBQWxFLEVBQTRFTyxVQUE1RTtBQUNELENBRk07O0FBSUEsSUFBTUcsc0RBQXVCLFNBQXZCQSxvQkFBdUIsQ0FBQ1YsUUFBRCxFQUFjO0FBQ2hEQyxtQkFBaUJVLGNBQWpCLENBQWdDWCxRQUFoQztBQUNELENBRk07O0FBSUEsSUFBTVksa0RBQXFCLFNBQXJCQSxrQkFBcUIsR0FBTTtBQUN0Q0M7QUFDRCxDQUZNOztBQUlBLElBQU1DLHdFQUFnQyxTQUFoQ0EsNkJBQWdDLENBQUNDLEtBQUQsRUFBUUMsTUFBUixFQUFnQkMsV0FBaEIsRUFBNkJDLElBQTdCLEVBQXNDO0FBQ2pGakIsbUJBQWlCa0Isc0JBQWpCLENBQXdDSixLQUF4QyxFQUErQ0MsTUFBL0MsRUFBdURDLFdBQXZELEVBQW9FQyxJQUFwRTtBQUNELENBRk0iLCJmaWxlIjoiLi9hcHBsaWNhdGlvbi91dGlscy9yZWduSGVscGVyLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLypcbldyYXBwZXIgZnVuY3Rpb25zIGZvciBQV0EgZGVza3RvcCByZWdpc3RyYXRpb24gd2l0aCBqUXVlcnkuXG5UaGlzIEpTIGZpbGUgd2lsbCBOT1QgYmUgdXNlZCB3aGVuIHJlZ2lzdHJhdGlvbiBpcyBtb3ZlZCB0byBQV0EuXG4qL1xuXG5leHBvcnQgY29uc3Qgc2hvd1JlZ2lzdHJhdGlvbkZvcm1XcmFwcGVyID0gKGZvcm1EYXRhKSA9PiB7XG4gIHJlZ2lzdHJhdGlvbkZvcm0uc2hvd1JlZ2lzdHJhdGlvbkZvcm0oZm9ybURhdGEpO1xufVxuXG5leHBvcnQgY29uc3Qgc2hvd1Jlc3BvbnNlRm9ybVdyYXBwZXIgPSAobGlzdGluZ0lkLCBhY3Rpb25UeXBlLCBsaXN0aW5nVHlwZSwgZm9ybURhdGEsIGV4dHJhUGFyYW0pID0+IHtcbiAgcmVzcG9uc2VGb3JtLnNob3dSZXNwb25zZUZvcm0obGlzdGluZ0lkLCBhY3Rpb25UeXBlLCBsaXN0aW5nVHlwZSwgZm9ybURhdGEsIGV4dHJhUGFyYW0pO1xufVxuXG5leHBvcnQgY29uc3Qgc2hvd0xvZ2luRm9ybVdyYXBwZXIgPSAoZm9ybURhdGEpID0+IHtcbiAgcmVnaXN0cmF0aW9uRm9ybS5zaG93TG9naW5MYXllcihmb3JtRGF0YSk7XG59XG5cbmV4cG9ydCBjb25zdCBzaWduT3V0VXNlcldyYXBwZXIgPSAoKSA9PiB7XG4gIFNpZ25PdXRVc2VyKCk7XG59XG5cbmV4cG9ydCBjb25zdCBzaG93UmVzZXRQYXNzd29yZExheWVyV3JhcHBlciA9ICh1bmFtZSwgdWVtYWlsLCByZ3JuQ29udGV4dCwgdWdycCkgPT4ge1xuICByZWdpc3RyYXRpb25Gb3JtLnNob3dSZXNldFBhc3N3b3JkTGF5ZXIodW5hbWUsIHVlbWFpbCwgcmdybkNvbnRleHQsIHVncnApO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./application/utils/regnHelper.js\n");

/***/ }),

/***/ "./application/utils/searchHelper.js":
/*!*******************************************!*\
  !*** ./application/utils/searchHelper.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.initializeAutoSuggestorInstanceSearchV2 = initializeAutoSuggestorInstanceSearchV2;\n//let autoSuggestorInstanceArray = [];\nfunction initializeAutoSuggestorInstanceSearchV2(options) {\n    if (getObjectLength(options) == 0) {\n        return;\n    }\n\n    if (options.typeAhead == 1) {\n        options.typeAhead = true;\n    } else {\n        options.typeAhead = false;\n    }\n    autoSuggestorInstanceArray[options.objectName] = new AutoSuggestor(options.searchBoxId, options.suggestionContainerId, options.typeAhead, options.suggestionType, options.suggestionCount);\n    var AutoSuggestorCallbackInstance = new AutoSuggestorCallbackHandler(autoSuggestorInstanceArray[options.objectName]);\n    autoSuggestorInstanceArray[options.objectName].setAutoSuggestorConfigOptions(options);\n    autoSuggestorInstanceArray[options.objectName].callBackFunctionOnMouseClick = checkIfFunctionExist(options.mouseClickedHandler) ? eval(options.mouseClickedHandler) : '';\n    autoSuggestorInstanceArray[options.objectName].callBackFunctionOnMouseClickLastElement = checkIfFunctionExist(options.mouseClickedHandlerLastElement) ? eval(options.mouseClickedHandlerLastElement) : '';\n    autoSuggestorInstanceArray[options.objectName].callBackFunctionOnMouseClickCTA = checkIfFunctionExist(options.mouseClickedHandlerCTA) ? eval(options.mouseClickedHandlerCTA) : '';\n    autoSuggestorInstanceArray[options.objectName].callBackFunctionOnEnterPressed = checkIfFunctionExist(options.enterPressedHandler) ? eval(options.enterPressedHandler) : '';\n    autoSuggestorInstanceArray[options.objectName].callBackFunctionOnInputKeysPressed = checkIfFunctionExist(options.inputKeysHandler) ? eval(options.inputKeysHandler) : '';\n    autoSuggestorInstanceArray[options.objectName].callBackFunctionOnKeyPressed = checkIfFunctionExist(options.navigationKeysHandler) ? eval(options.navigationKeysHandler) : '';\n    autoSuggestorInstanceArray[options.objectName].callBackFunctionOnBackKeyPressed = checkIfFunctionExist(options.backKeyHandler) ? eval(options.backKeyHandler) : '';\n    autoSuggestorInstanceArray[options.objectName].callBackOnZeroResults = checkIfFunctionExist(options.callBackOnZeroResults) ? eval(options.callBackOnZeroResults) : '';\n    autoSuggestorInstanceArray[options.objectName].callBackFunctionOnRightKeyPressed = checkIfFunctionExist(options.rightKeyHandler) ? eval(options.rightKeyHandler) : '';\n    autoSuggestorInstanceArray[options.objectName].callBackFunctionAfterBuildingSuggestionContainer = checkIfFunctionExist(options.callBackFunctionAfterBuildingSuggestionContainer) ? eval(options.callBackFunctionAfterBuildingSuggestionContainer) : '';\n\n    if (window.addEventListener) {\n        var ele = document.getElementById(options.searchBoxId);\n        if (ele != null) {\n            ele.addEventListener('keyup', AutoSuggestorCallbackInstance.handleInputKeys, false);\n            if (autoSuggestorInstanceArray[options.objectName].getTrendingSuggestions == 1) {\n                ele.addEventListener('click', function (event) {\n                    autoSuggestorInstanceArray[options.objectName].handleInputKeys.call(autoSuggestorInstanceArray[options.objectName], event);\n                }, false);\n            }\n            if (checkIfFunctionExist(options.tabPressedHandler)) {\n                ele.addEventListener('keydown', function (e) {\n                    AutoSuggestorCallbackInstance.handleAutoSuggestorTabPressed(e, eval(options.tabPressedHandler), autoSuggestorInstanceArray[options.objectName]);\n                }, false);\n            }\n            return true;\n        }\n        return false;\n    } else if (window.attachEvent) {\n        var _ele = document.getElementById(options.searchBoxId);\n        _ele.attachEvent('onkeyup', AutoSuggestorCallbackInstance.handleInputKeys);\n        if (autoSuggestorInstanceArray[options.objectName].getTrendingSuggestions == 1) {\n            _ele.attachEvent('click', function (event) {\n                autoSuggestorInstanceArray[options.objectName].handleInputKeys.call(autoSuggestorInstanceArray[options.objectName], event);\n            });\n        }\n\n        if (checkIfFunctionExist(options.tabPressedHandler)) {\n            _ele.attachEvent('onkeydown', function (e) {\n                AutoSuggestorCallbackInstance.handleAutoSuggestorTabPressed(e, eval(options.tabPressedHandler), autoSuggestorInstanceArray[options.objectName]);\n            });\n        }\n    }\n}//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./application/utils/searchHelper.js\n");

/***/ })

}]);